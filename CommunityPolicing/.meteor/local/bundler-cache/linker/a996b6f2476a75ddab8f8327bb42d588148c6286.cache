[{"type":"js","data":"/* Imports for global scope */\n\nQueue = Package['artwells:queue'].Queue;\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nLog = Package.logging.Log;\nRandom = Package.random.Random;\nEJSON = Package.ejson.EJSON;\nSpacebars = Package.spacebars.Spacebars;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nRestivus = Package['nimble:restivus'].Restivus;\nEmail = Package.email.Email;\nEmailInternals = Package.email.EmailInternals;\nmoment = Package['momentjs:moment'].moment;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nReactiveTable = Package['aslagle:reactive-table'].ReactiveTable;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nAccounts = Package['accounts-base'].Accounts;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){Comments = new Mongo.Collection(\"eventcomments\");\n\n}).call(this);\n","servePath":"/lib/collections/Comments.js","sourceMap":null},{"type":"js","data":"(function(){EventToComment = new Mongo.Collection(\"eventtocomment\");\n\n}).call(this);\n","servePath":"/lib/collections/EventToComment.js","sourceMap":null},{"type":"js","data":"(function(){Markers = new Mongo.Collection('markers');\n\n\n/*Markers.allow({\n  insert: function(userId,doc){\n    return !! userId;\n  }\n});*/\n\n}).call(this);\n","servePath":"/lib/collections/Markers.js","sourceMap":null},{"type":"js","data":"(function(){SafetyEvents = new Mongo.Collection('safetyevents');\n\n}).call(this);\n","servePath":"/lib/collections/SafetyEvents.js","sourceMap":null},{"type":"js","data":"(function(){SafetyTips = new Mongo.Collection('safetytips');\n\n}).call(this);\n","servePath":"/lib/collections/SafetyTips.js","sourceMap":null},{"type":"js","data":"(function(){Aonly = new Mongo.Collection(\"Aonly\");\nPonly = new Mongo.Collection(\"Ponly\");\nConly = new Mongo.Collection(\"Conly\");\nAp = new Mongo.Collection(\"AP\");\nAc = new Mongo.Collection(\"AC\");\nPc = new Mongo.Collection(\"PC\");\nApc = new Mongo.Collection(\"APC\");\n\n}).call(this);\n","servePath":"/lib/collections/SocialMediaCollections.js","sourceMap":null},{"type":"js","data":"(function(){Router.configure({\n  layoutTemplate: 'layout'\n});\n\nRouter.route('/', {name: 'CrimeMap'});\nRouter.route('/SocialMedia',{\n  name: 'SocialMedia',\n  waitOn(){\n    return Meteor.subscribe(\"Aonly\");\n  }\n});\n\n}).call(this);\n","servePath":"/lib/router.js","sourceMap":null},{"type":"js","data":"(function(){if (Meteor.isServer) {\n  Meteor.startup(function() {\n        // code to run on server at startup\n       // Queue.setInterval('deleteAllMarkers', 'Markers.remove({})', 86400000); // once a day\n        //Queue.run();\n        process.env.MAIL_URL = \"smtp://postmaster@sandbox962d7590278c4911a7b7b0576075af29.mailgun.org:0cbf4f365a928efe929653b2b7c08b54@smtp.mailgun.org:587\";\n\n    });\n\n    // Global API configuration\n  var Api = new Restivus({\n    useDefaultAuth: true,\n    prettyJson: true\n  });\n\n  // Generates: GET, POST on /api/safetyevents and GET, PUT, DELETE on\n  // /api/safetyevents/:id for the Items collection\n  Api.addCollection(SafetyEvents, {\n    excludedEndpoints: ['getAll', 'put'],\n        routeOptions: {\n          authRequired: false\n        },\n        endpoints: {\n            post:  {//how to send post to this API=>curl localhost:3000/api/safetyevents// -d \"Lat=24.45\" -d \"Lon=43.56\"\n\n               action: function () {\n               var name = this.bodyParams.title;\n                console.log (\"Entity: \" + name);\n\n              if (getDistanceFromLatLonInKm(this.bodyParams.Lon,this.bodyParams.Lat,Markers.find().fetch()[0].Lat,Markers.find().fetch()[0].Lon) < Markers.find().fetch()[0].radius/1000)\n                   {\n                    Email.send({\n                      to: \"danushkabandara@gmail.com\",\n                      from: \"danushkabandara@gmail.com\",\n                      subject: \"Example Email\",\n                      text: \"The contents of our email in plain text.\"\n                    });\n                return true\n                  }\n                }\n            }\n        }\n\n     });\n     Meteor.publish('markers', function() {\n                return Markers.find({});\n        });\n   Meteor.publish('eventcomments', function() {\n        return Comments.find({});\n    });\n    Meteor.publish('eventtocomment', function() {\n        return EventToComment.find({});\n    });\n    Meteor.publish('safetyevents', function() {\n        return SafetyEvents.find({});\n    });\n    Meteor.publish('safetytips',function(){\n      return SafetyTips.find({});\n    });\n    Meteor.publish('Aonly',function(){\n      return Aonly.find({});\n    });\n    Meteor.publish('Ponly',function(){\n      return Ponly.find({});\n    });\n    Meteor.publish('Conly',function(){\n      return Conly.find({});\n    });\n    Meteor.publish('AP',function(){\n      return Ap.find({});\n    });\n    Meteor.publish('AC',function(){\n      return Ac.find({});\n    });\n    Meteor.publish('PC',function(){\n      return Pc.find({});\n    });\n    Meteor.publish('APC',function(){\n      return Apc.find({});\n    });\n\n}\n\n}).call(this);\n","servePath":"/server/main.js","sourceMap":null}]