[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Mongo = Package.mongo.Mongo;\nvar Template = Package['templating-runtime'].Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar _ = Package.underscore._;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Session = Package.session.Session;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar sAlert;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/juliancwirko_s-alert/client/s-alert.js                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n'use strict';                                                                                                  // 1\n                                                                                                               // 2\n// helper functions                                                                                            // 3\nvar conditionSet = function (self, msg, condition, customSettings) {                                           // 4\n    var settings = {};                                                                                         // 5\n    var effects = ['jelly', 'genie', 'stackslide', 'scale', 'slide', 'flip', 'bouncyflip'];                    // 6\n    var currentEffect;                                                                                         // 7\n    var sAlertId;                                                                                              // 8\n    if (!_.isObject(customSettings)) {                                                                         // 9\n        customSettings = {};                                                                                   // 10\n    }                                                                                                          // 11\n    if (_.isObject(msg) && _.isString(condition)) {                                                            // 12\n        settings = _.extend(settings, self.settings, JSON.parse(JSON.stringify(msg)), {condition: condition}, customSettings);\n    }                                                                                                          // 14\n    if (_.isString(msg) && _.isString(condition)) {                                                            // 15\n        settings = _.extend(settings, self.settings, {message: msg}, {condition: condition}, customSettings);  // 16\n    }                                                                                                          // 17\n    currentEffect = settings && settings.effect;                                                               // 18\n    if (_.contains(effects, currentEffect) && !Package['juliancwirko:s-alert-' + currentEffect] && typeof console !== 'undefined') {\n        console.info('Install \"' + currentEffect + '\" effect by running \"meteor add juliancwirko:s-alert-' + currentEffect + '\"');\n    }                                                                                                          // 21\n    if (_.isObject(settings) && !_.isEmpty(settings)) {                                                        // 22\n        sAlertId = sAlert.collection.insert(settings);                                                         // 23\n    }                                                                                                          // 24\n    return sAlertId;                                                                                           // 25\n};                                                                                                             // 26\n                                                                                                               // 27\nvar EVENTS = 'webkitAnimationEnd oAnimationEnd animationEnd msAnimationEnd animationend';                      // 28\nvar sAlertClose = function (alertId) {                                                                         // 29\n    var closingTimeout;                                                                                        // 30\n    var onClose;                                                                                               // 31\n    var alertObj;                                                                                              // 32\n    var invokeOnCloseCb = function () {                                                                        // 33\n        // invoke onClose callback                                                                             // 34\n        if (onClose && _.isFunction(onClose)) {                                                                // 35\n            onClose();                                                                                         // 36\n        }                                                                                                      // 37\n    };                                                                                                         // 38\n    if (document.hidden || document.webkitHidden || !$('#' + alertId).hasClass('s-alert-is-effect')) {         // 39\n        alertObj = sAlert.collection.findOne(alertId);                                                         // 40\n        if (alertObj && !_.isEmpty(alertObj)) {                                                                // 41\n            onClose = alertObj.onClose;                                                                        // 42\n        }                                                                                                      // 43\n        sAlert.collection.remove(alertId);                                                                     // 44\n        invokeOnCloseCb();                                                                                     // 45\n    } else {                                                                                                   // 46\n        $('.s-alert-box#' + alertId).removeClass('s-alert-show');                                              // 47\n        closingTimeout = Meteor.setTimeout(function () {                                                       // 48\n            $('.s-alert-box#' + alertId).addClass('s-alert-hide');                                             // 49\n        }, 100);                                                                                               // 50\n        $('.s-alert-box#' + alertId).off(EVENTS);                                                              // 51\n        $('.s-alert-box#' + alertId).on(EVENTS, function () {                                                  // 52\n            $(this).hide();                                                                                    // 53\n            alertObj = sAlert.collection.findOne(alertId);                                                     // 54\n            if (alertObj && !_.isEmpty(alertObj)) {                                                            // 55\n                onClose = alertObj.onClose;                                                                    // 56\n            }                                                                                                  // 57\n            sAlert.collection.remove(alertId);                                                                 // 58\n            Meteor.clearTimeout(closingTimeout);                                                               // 59\n            invokeOnCloseCb();                                                                                 // 60\n        });                                                                                                    // 61\n    }                                                                                                          // 62\n    // stop audio when closing                                                                                 // 63\n    sAlert.audio && sAlert.audio.load();                                                                       // 64\n    sAlert.audioInfo && sAlert.audioInfo.load();                                                               // 65\n    sAlert.audioError && sAlert.audioError.load();                                                             // 66\n    sAlert.audioSuccess && sAlert.audioSuccess.load();                                                         // 67\n    sAlert.audioWarning && sAlert.audioWarning.load();                                                         // 68\n};                                                                                                             // 69\n                                                                                                               // 70\n// sAlert object                                                                                               // 71\nsAlert = {                                                                                                     // 72\n    settings: {                                                                                                // 73\n        effect: '',                                                                                            // 74\n        position: 'top-right',                                                                                 // 75\n        timeout: 5000,                                                                                         // 76\n        html: false,                                                                                           // 77\n        onRouteClose: true,                                                                                    // 78\n        stack: true,                                                                                           // 79\n        // or you can pass an object:                                                                          // 80\n        // stack: {                                                                                            // 81\n        //     spacing: 10 // in px                                                                            // 82\n        //     limit: 3 // when fourth alert appears all previous ones are cleared                             // 83\n        // }                                                                                                   // 84\n        offset: 0, // in px - will be added to first alert (bottom or top - depends of the position in config)\n        beep: false,                                                                                           // 86\n        // beep: '/beep.mp3'  // or you can pass an object:                                                    // 87\n        // beep: {                                                                                             // 88\n        //     info: '/beep-info.mp3',                                                                         // 89\n        //     error: '/beep-error.mp3',                                                                       // 90\n        //     success: '/beep-success.mp3',                                                                   // 91\n        //     warning: '/beep-warning.mp3'                                                                    // 92\n        // }                                                                                                   // 93\n        onClose: _.noop                                                                                        // 94\n    },                                                                                                         // 95\n    config: function (configObj) {                                                                             // 96\n        var self = this;                                                                                       // 97\n        if (_.isObject(configObj)) {                                                                           // 98\n            self.settings = _.extend(self.settings, configObj);                                                // 99\n        } else {                                                                                               // 100\n            throw new Meteor.Error(400, 'Config must be an object!');                                          // 101\n        }                                                                                                      // 102\n    },                                                                                                         // 103\n    closeAll: function () {                                                                                    // 104\n        sAlert.collection.find({}).forEach(function (sAlertObj) {                                              // 105\n            sAlert.collection.remove(sAlertObj._id);                                                           // 106\n            if (sAlertObj.onClose && _.isFunction(sAlertObj.onClose)) {                                        // 107\n                sAlertObj.onClose();                                                                           // 108\n            }                                                                                                  // 109\n        });                                                                                                    // 110\n    },                                                                                                         // 111\n    close: function (id) {                                                                                     // 112\n        if (_.isString(id)) {                                                                                  // 113\n            sAlertClose(id);                                                                                   // 114\n        }                                                                                                      // 115\n    },                                                                                                         // 116\n    info: function (msg, customSettings) {                                                                     // 117\n        return conditionSet(this, msg, 'info', customSettings);                                                // 118\n    },                                                                                                         // 119\n    error: function (msg, customSettings) {                                                                    // 120\n        return conditionSet(this, msg, 'error', customSettings);                                               // 121\n    },                                                                                                         // 122\n    success: function (msg, customSettings) {                                                                  // 123\n        return conditionSet(this, msg, 'success', customSettings);                                             // 124\n    },                                                                                                         // 125\n    warning: function (msg, customSettings) {                                                                  // 126\n        return conditionSet(this, msg, 'warning', customSettings);                                             // 127\n    }                                                                                                          // 128\n};                                                                                                             // 129\n                                                                                                               // 130\n// routers clean                                                                                               // 131\nMeteor.startup(function () {                                                                                   // 132\n    if (typeof Iron !== 'undefined' && typeof Router !== 'undefined') {                                        // 133\n        Router.onStop(function () {                                                                            // 134\n            sAlert.collection.remove({onRouteClose: true});                                                    // 135\n        });                                                                                                    // 136\n    }                                                                                                          // 137\n    if (typeof FlowRouter !== 'undefined' && _.isObject(FlowRouter.triggers)) {                                // 138\n        FlowRouter.triggers.enter([function () {                                                               // 139\n            sAlert.collection.remove({onRouteClose: true});                                                    // 140\n        }]);                                                                                                   // 141\n    }                                                                                                          // 142\n    if (typeof FlowRouter !== 'undefined' && !_.isObject(FlowRouter.triggers)) {                               // 143\n        FlowRouter.middleware(function (path, next) {                                                          // 144\n            sAlert.collection.remove({onRouteClose: true});                                                    // 145\n            next();                                                                                            // 146\n        });                                                                                                    // 147\n    }                                                                                                          // 148\n});                                                                                                            // 149\n                                                                                                               // 150\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/juliancwirko_s-alert/client/s-alert-collection.js                                                  //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n'use strict';                                                                                                  // 1\n                                                                                                               // 2\n// only client side collections for now..                                                                      // 3\nsAlert.collection = new Mongo.Collection(null);                                                                // 4\n                                                                                                               // 5\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/juliancwirko_s-alert/client/template.s-alert-template.js                                           //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n                                                                                                               // 1\nTemplate.__checkName(\"sAlert\");                                                                                // 2\nTemplate[\"sAlert\"] = new Template(\"Template.sAlert\", (function() {                                             // 3\n  var view = this;                                                                                             // 4\n  return [ Blaze.Each(function() {                                                                             // 5\n    return Spacebars.call(view.lookup(\"sAlertDataLeft\"));                                                      // 6\n  }, function() {                                                                                              // 7\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlertContent\")), \"\\n    \" ];                // 8\n  }), \"\\n    \", Blaze.Each(function() {                                                                        // 9\n    return Spacebars.call(view.lookup(\"sAlertDataRight\"));                                                     // 10\n  }, function() {                                                                                              // 11\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlertContent\")), \"\\n    \" ];                // 12\n  }), \"\\n    \", Blaze.Each(function() {                                                                        // 13\n    return Spacebars.call(view.lookup(\"sAlertDataFullTop\"));                                                   // 14\n  }, function() {                                                                                              // 15\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlertContent\")), \"\\n    \" ];                // 16\n  }), \"\\n    \", Blaze.Each(function() {                                                                        // 17\n    return Spacebars.call(view.lookup(\"sAlertDataFullBottom\"));                                                // 18\n  }, function() {                                                                                              // 19\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlertContent\")), \"\\n    \" ];                // 20\n  }) ];                                                                                                        // 21\n}));                                                                                                           // 22\n                                                                                                               // 23\nTemplate.__checkName(\"sAlertContent\");                                                                         // 24\nTemplate[\"sAlertContent\"] = new Template(\"Template.sAlertContent\", (function() {                               // 25\n  var view = this;                                                                                             // 26\n  return Blaze.If(function() {                                                                                 // 27\n    return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"template\"));                                       // 28\n  }, function() {                                                                                              // 29\n    return [ \"\\n        \", Blaze._TemplateWith(function() {                                                    // 30\n      return {                                                                                                 // 31\n        template: Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"template\")),                                // 32\n        data: Spacebars.call(view.lookup(\".\"))                                                                 // 33\n      };                                                                                                       // 34\n    }, function() {                                                                                            // 35\n      return Spacebars.include(function() {                                                                    // 36\n        return Spacebars.call(Template.__dynamic);                                                             // 37\n      });                                                                                                      // 38\n    }), \"\\n    \" ];                                                                                            // 39\n  }, function() {                                                                                              // 40\n    return [ \"\\n        \", HTML.DIV({                                                                          // 41\n      class: function() {                                                                                      // 42\n        return [ \"s-alert-box s-alert-\", Spacebars.mustache(view.lookup(\"condition\")), \" s-alert-\", Spacebars.mustache(view.lookup(\"position\")), \" \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"effect\"));                                                        // 44\n        }, function() {                                                                                        // 45\n          return [ \"s-alert-is-effect s-alert-effect-\", Blaze.View(\"lookup:effect\", function() {               // 46\n            return Spacebars.mustache(view.lookup(\"effect\"));                                                  // 47\n          }) ];                                                                                                // 48\n        }), \" s-alert-show\" ];                                                                                 // 49\n      },                                                                                                       // 50\n      id: function() {                                                                                         // 51\n        return Spacebars.mustache(view.lookup(\"_id\"));                                                         // 52\n      },                                                                                                       // 53\n      style: function() {                                                                                      // 54\n        return Spacebars.mustache(view.lookup(\"boxPosition\"));                                                 // 55\n      }                                                                                                        // 56\n    }, \"\\n            \", HTML.DIV({                                                                            // 57\n      class: \"s-alert-box-inner\"                                                                               // 58\n    }, \"\\n                \", HTML.P(Blaze.If(function() {                                                      // 59\n      return Spacebars.call(view.lookup(\"isHtml\"));                                                            // 60\n    }, function() {                                                                                            // 61\n      return Blaze.View(\"lookup:message\", function() {                                                         // 62\n        return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"message\")));                                  // 63\n      });                                                                                                      // 64\n    }, function() {                                                                                            // 65\n      return Blaze.View(\"lookup:message\", function() {                                                         // 66\n        return Spacebars.mustache(view.lookup(\"message\"));                                                     // 67\n      });                                                                                                      // 68\n    })), \"\\n            \"), \"\\n            \", HTML.SPAN({                                                      // 69\n      class: \"s-alert-close\"                                                                                   // 70\n    }), \"\\n        \"), \"\\n    \" ];                                                                             // 71\n  });                                                                                                          // 72\n}));                                                                                                           // 73\n                                                                                                               // 74\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/juliancwirko_s-alert/client/s-alert-template.js                                                    //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n'use strict';                                                                                                  // 1\n                                                                                                               // 2\nvar getAlertData = function (currentData, sAlertPosition) {                                                    // 3\n    var positionTop = 0;                                                                                       // 4\n    var positionBottom = 0;                                                                                    // 5\n    var padding = 0;                                                                                           // 6\n    var alerts = {};                                                                                           // 7\n    var style;                                                                                                 // 8\n    var sAlertBoxHTML;                                                                                         // 9\n    var sAlertBox;                                                                                             // 10\n    var docElement;                                                                                            // 11\n    var sAlertBoxHeight;                                                                                       // 12\n    var templateOverwrite = currentData && currentData.template;                                               // 13\n    var positionTypeTop;                                                                                       // 14\n    var positionTypeBottom;                                                                                    // 15\n    var stackLimit;                                                                                            // 16\n    var alertsCount;                                                                                           // 17\n    var checkFirst = function (type, objId) {                                                                  // 18\n        var collectionOfType = sAlertCollection.filter(function(obj) {                                         // 19\n            return obj.position === type;                                                                      // 20\n        });                                                                                                    // 21\n        return collectionOfType && collectionOfType[0]._id === objId;                                          // 22\n    };                                                                                                         // 23\n    var positionFunc = function (position, positionType, alert, sAlertBox) {                                   // 24\n        padding = alert.stack.spacing || sAlertBox.find('.s-alert-box').css(positionType);                     // 25\n        if (checkFirst(alert.position, alert._id) && alert.offset) {                                           // 26\n            position = 0;                                                                                      // 27\n            position = position + parseInt(alert.offset);                                                      // 28\n        }                                                                                                      // 29\n        if (checkFirst(alert.position, alert._id) && alert.stack.spacing) {                                    // 30\n            position = position;                                                                               // 31\n        } else {                                                                                               // 32\n            position = position + parseInt(padding);                                                           // 33\n        }                                                                                                      // 34\n        style = positionType + ': ' + position + 'px;';                                                        // 35\n        position = position + sAlertBoxHeight;                                                                 // 36\n        return position;                                                                                       // 37\n    };                                                                                                         // 38\n                                                                                                               // 39\n    var query = {};                                                                                            // 40\n    if (sAlertPosition === 'left') {                                                                           // 41\n        query = {$or: [{position: 'top-left'}, {position: 'bottom-left'}]};                                    // 42\n    }                                                                                                          // 43\n    if (sAlertPosition === 'right') {                                                                          // 44\n        query = {$or: [{position: 'top-right'}, {position: 'bottom-right'}]};                                  // 45\n    }                                                                                                          // 46\n    if (sAlertPosition === 'full-top') {                                                                       // 47\n        query = {position: 'top'};                                                                             // 48\n    }                                                                                                          // 49\n    if (sAlertPosition === 'full-bottom') {                                                                    // 50\n        query = {position: 'bottom'};                                                                          // 51\n    }                                                                                                          // 52\n    var sAlertCollection = sAlert.collection.find(query).fetch();                                              // 53\n                                                                                                               // 54\n    return sAlertCollection.map(function (alert) {                                                             // 55\n        positionTypeTop = alert.position && /top/g.test(alert.position);                                       // 56\n        positionTypeBottom = alert.position && /bottom/g.test(alert.position);                                 // 57\n        if (alert.stack) {                                                                                     // 58\n            stackLimit = alert.stack && alert.stack.limit;                                                     // 59\n            alertsCount = sAlert.collection.find(query).count();                                               // 60\n            // limit check                                                                                     // 61\n            if (stackLimit && alertsCount > stackLimit) {                                                      // 62\n                sAlert.close(sAlert.collection.findOne(query)._id);                                            // 63\n            }                                                                                                  // 64\n            // checking alert box height - needed to calculate position                                        // 65\n            docElement = document.createElement('div');                                                        // 66\n            $(docElement).addClass('s-alert-box-height');                                                      // 67\n            if (_.isString(templateOverwrite)) {                                                               // 68\n                sAlertBoxHTML = Blaze.toHTMLWithData(Template[templateOverwrite], alert);                      // 69\n            } else {                                                                                           // 70\n                sAlertBoxHTML = Blaze.toHTMLWithData(Template.sAlertContent, alert);                           // 71\n            }                                                                                                  // 72\n            sAlertBox = $(docElement).html(sAlertBoxHTML);                                                     // 73\n            $('body').append(sAlertBox);                                                                       // 74\n            sAlertBoxHeight = sAlertBox.find('.s-alert-box').outerHeight(true);                                // 75\n            if (positionTypeTop) {                                                                             // 76\n                positionTop = positionFunc(positionTop, 'top', alert, sAlertBox);                              // 77\n            }                                                                                                  // 78\n            if (positionTypeBottom) {                                                                          // 79\n                positionBottom = positionFunc(positionBottom, 'bottom', alert, sAlertBox);                     // 80\n            }                                                                                                  // 81\n            sAlertBox.remove();                                                                                // 82\n            if (sAlertPosition === 'left') {                                                                   // 83\n                style = style + 'left: ' + (alert.stack.spacing || sAlertBox.find('.s-alert-box').css('left')) + 'px;';\n            }                                                                                                  // 85\n            if (sAlertPosition === 'right') {                                                                  // 86\n                style = style + 'right: ' + (alert.stack.spacing || sAlertBox.find('.s-alert-box').css('right')) + 'px;';\n            }                                                                                                  // 88\n            alerts = _.extend(alert, {boxPosition: style});                                                    // 89\n        } else if (alert.offset && positionTypeTop) {                                                          // 90\n            alerts = _.extend(alert, {boxPosition: 'top: ' + parseInt(alert.offset) + 'px;'});                 // 91\n        } else if (alert.offset && positionTypeBottom) {                                                       // 92\n            alerts = _.extend(alert, {boxPosition: 'bottom: ' + parseInt(alert.offset) + 'px;'});              // 93\n        } else {                                                                                               // 94\n            alerts = alert;                                                                                    // 95\n        }                                                                                                      // 96\n        return alerts;                                                                                         // 97\n    });                                                                                                        // 98\n};                                                                                                             // 99\n                                                                                                               // 100\nTemplate.sAlert.helpers({                                                                                      // 101\n    sAlertDataLeft: function () {                                                                              // 102\n        return getAlertData(Template.currentData(), 'left');                                                   // 103\n    },                                                                                                         // 104\n    sAlertDataRight: function () {                                                                             // 105\n        return getAlertData(Template.currentData(), 'right');                                                  // 106\n    },                                                                                                         // 107\n    sAlertDataFullTop: function () {                                                                           // 108\n        return getAlertData(Template.currentData(), 'full-top');                                               // 109\n    },                                                                                                         // 110\n    sAlertDataFullBottom: function () {                                                                        // 111\n        return getAlertData(Template.currentData(), 'full-bottom');                                            // 112\n    }                                                                                                          // 113\n});                                                                                                            // 114\n                                                                                                               // 115\nTemplate.sAlertContent.onRendered(function () {                                                                // 116\n    var tmpl = this;                                                                                           // 117\n    var data = Template.currentData();                                                                         // 118\n    var sAlertTimeout = data.timeout;                                                                          // 119\n    var beep = data.beep;                                                                                      // 120\n    // audio                                                                                                   // 121\n    if (beep && _.isString(beep)) {                                                                            // 122\n        sAlert.audio = new Audio(data.beep);                                                                   // 123\n        sAlert.audio.load();                                                                                   // 124\n        sAlert.audio.play();                                                                                   // 125\n    }                                                                                                          // 126\n    if (beep && _.isObject(beep) && data.condition === 'info') {                                               // 127\n        sAlert.audioInfo = new Audio(data.beep.info);                                                          // 128\n        sAlert.audioInfo.load();                                                                               // 129\n        sAlert.audioInfo.play();                                                                               // 130\n    }                                                                                                          // 131\n    if (beep && _.isObject(beep) && data.condition === 'error') {                                              // 132\n        sAlert.audioError = new Audio(data.beep.error);                                                        // 133\n        sAlert.audioError.load();                                                                              // 134\n        sAlert.audioError.play();                                                                              // 135\n    }                                                                                                          // 136\n    if (beep && _.isObject(beep) && data.condition === 'success') {                                            // 137\n        sAlert.audioSuccess = new Audio(data.beep.success);                                                    // 138\n        sAlert.audioSuccess.load();                                                                            // 139\n        sAlert.audioSuccess.play();                                                                            // 140\n    }                                                                                                          // 141\n    if (beep && _.isObject(beep) && data.condition === 'warning') {                                            // 142\n        sAlert.audioWarning = new Audio(data.beep.warning);                                                    // 143\n        sAlert.audioWarning.load();                                                                            // 144\n        sAlert.audioWarning.play();                                                                            // 145\n    }                                                                                                          // 146\n    if (sAlertTimeout && sAlertTimeout !== 'none') {                                                           // 147\n        sAlertTimeout = parseInt(sAlertTimeout);                                                               // 148\n        if (tmpl.sAlertCloseTimeout) {                                                                         // 149\n            Meteor.clearTimeout(tmpl.sAlertCloseTimeout);                                                      // 150\n        }                                                                                                      // 151\n        tmpl.sAlertCloseTimeout = Meteor.setTimeout(function () {                                              // 152\n            sAlert.close(data._id);                                                                            // 153\n        }, sAlertTimeout);                                                                                     // 154\n    }                                                                                                          // 155\n});                                                                                                            // 156\nTemplate.sAlertContent.onDestroyed(function () {                                                               // 157\n    if (this.sAlertCloseTimeout) {                                                                             // 158\n        Meteor.clearTimeout(this.sAlertCloseTimeout);                                                          // 159\n    }                                                                                                          // 160\n});                                                                                                            // 161\n                                                                                                               // 162\nTemplate.sAlertContent.events({                                                                                // 163\n    'click .s-alert-close': function (e, tmpl) {                                                               // 164\n        e.preventDefault();                                                                                    // 165\n        Meteor.clearTimeout(tmpl.sAlertCloseTimeout);                                                          // 166\n        sAlert.close(this._id);                                                                                // 167\n    }                                                                                                          // 168\n});                                                                                                            // 169\n                                                                                                               // 170\nTemplate.sAlertContent.helpers({                                                                               // 171\n    isHtml: function () {                                                                                      // 172\n        var data = Template.currentData();                                                                     // 173\n        return data && data.html;                                                                              // 174\n    }                                                                                                          // 175\n});                                                                                                            // 176\n                                                                                                               // 177\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['juliancwirko:s-alert'] = {}, {\n  sAlert: sAlert\n});\n\n})();\n","servePath":"/packages/juliancwirko_s-alert.js","sourceMap":{"version":3,"sources":["/packages/juliancwirko_s-alert/client/s-alert.js","/packages/juliancwirko_s-alert/client/s-alert-collection.js","/packages/juliancwirko_s-alert/client/template.s-alert-template.js","/packages/juliancwirko_s-alert/client/s-alert-template.js"],"names":[],"mappingsqH;;;;;;;;;;;;;;;;;;ACrJA;AACA;AACA;AACA;AACA,mH;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oH;;;;;;;;;;;;;;;;;;ACzqH","file":"/packages/juliancwirko_s-alert.js","sourcesContent":["'use strict';\n\n// helper functions\nvar conditionSet = function (self, msg, condition, customSettings) {\n    var settings = {};\n    var effects = ['jelly', 'genie', 'stackslide', 'scale', 'slide', 'flip', 'bouncyflip'];\n    var currentEffect;\n    var sAlertId;\n    if (!_.isObject(customSettings)) {\n        customSettings = {};\n    }\n    if (_.isObject(msg) && _.isString(condition)) {\n        settings = _.extend(settings, self.settings, JSON.parse(JSON.stringify(msg)), {condition: condition}, customSettings);\n    }\n    if (_.isString(msg) && _.isString(condition)) {\n        settings = _.extend(settings, self.settings, {message: msg}, {condition: condition}, customSettings);\n    }\n    currentEffect = settings && settings.effect;\n    if (_.contains(effects, currentEffect) && !Package['juliancwirko:s-alert-' + currentEffect] && typeof console !== 'undefined') {\n        console.info('Install \"' + currentEffect + '\" effect by running \"meteor add juliancwirko:s-alert-' + currentEffect + '\"');\n    }\n    if (_.isObject(settings) && !_.isEmpty(settings)) {\n        sAlertId = sAlert.collection.insert(settings);\n    }\n    return sAlertId;\n};\n\nvar EVENTS = 'webkitAnimationEnd oAnimationEnd animationEnd msAnimationEnd animationend';\nvar sAlertClose = function (alertId) {\n    var closingTimeout;\n    var onClose;\n    var alertObj;\n    var invokeOnCloseCb = function () {\n        // invoke onClose callback\n        if (onClose && _.isFunction(onClose)) {\n            onClose();\n        }\n    };\n    if (document.hidden || document.webkitHidden || !$('#' + alertId).hasClass('s-alert-is-effect')) {\n        alertObj = sAlert.collection.findOne(alertId);\n        if (alertObj && !_.isEmpty(alertObj)) {\n            onClose = alertObj.onClose;\n        }\n        sAlert.collection.remove(alertId);\n        invokeOnCloseCb();\n    } else {\n        $('.s-alert-box#' + alertId).removeClass('s-alert-show');\n        closingTimeout = Meteor.setTimeout(function () {\n            $('.s-alert-box#' + alertId).addClass('s-alert-hide');\n        }, 100);\n        $('.s-alert-box#' + alertId).off(EVENTS);\n        $('.s-alert-box#' + alertId).on(EVENTS, function () {\n            $(this).hide();\n            alertObj = sAlert.collection.findOne(alertId);\n            if (alertObj && !_.isEmpty(alertObj)) {\n                onClose = alertObj.onClose;\n            }\n            sAlert.collection.remove(alertId);\n            Meteor.clearTimeout(closingTimeout);\n            invokeOnCloseCb();\n        });\n    }\n    // stop audio when closing\n    sAlert.audio && sAlert.audio.load();\n    sAlert.audioInfo && sAlert.audioInfo.load();\n    sAlert.audioError && sAlert.audioError.load();\n    sAlert.audioSuccess && sAlert.audioSuccess.load();\n    sAlert.audioWarning && sAlert.audioWarning.load();\n};\n\n// sAlert object\nsAlert = {\n    settings: {\n        effect: '',\n        position: 'top-right',\n        timeout: 5000,\n        html: false,\n        onRouteClose: true,\n        stack: true,\n        // or you can pass an object:\n        // stack: {\n        //     spacing: 10 // in px\n        //     limit: 3 // when fourth alert appears all previous ones are cleared\n        // }\n        offset: 0, // in px - will be added to first alert (bottom or top - depends of the position in config)\n        beep: false,\n        // beep: '/beep.mp3'  // or you can pass an object:\n        // beep: {\n        //     info: '/beep-info.mp3',\n        //     error: '/beep-error.mp3',\n        //     success: '/beep-success.mp3',\n        //     warning: '/beep-warning.mp3'\n        // }\n        onClose: _.noop\n    },\n    config: function (configObj) {\n        var self = this;\n        if (_.isObject(configObj)) {\n            self.settings = _.extend(self.settings, configObj);\n        } else {\n            throw new Meteor.Error(400, 'Config must be an object!');\n        }\n    },\n    closeAll: function () {\n        sAlert.collection.find({}).forEach(function (sAlertObj) {\n            sAlert.collection.remove(sAlertObj._id);\n            if (sAlertObj.onClose && _.isFunction(sAlertObj.onClose)) {\n                sAlertObj.onClose();\n            }\n        });\n    },\n    close: function (id) {\n        if (_.isString(id)) {\n            sAlertClose(id);\n        }\n    },\n    info: function (msg, customSettings) {\n        return conditionSet(this, msg, 'info', customSettings);\n    },\n    error: function (msg, customSettings) {\n        return conditionSet(this, msg, 'error', customSettings);\n    },\n    success: function (msg, customSettings) {\n        return conditionSet(this, msg, 'success', customSettings);\n    },\n    warning: function (msg, customSettings) {\n        return conditionSet(this, msg, 'warning', customSettings);\n    }\n};\n\n// routers clean\nMeteor.startup(function () {\n    if (typeof Iron !== 'undefined' && typeof Router !== 'undefined') {\n        Router.onStop(function () {\n            sAlert.collection.remove({onRouteClose: true});\n        });\n    }\n    if (typeof FlowRouter !== 'undefined' && _.isObject(FlowRouter.triggers)) {\n        FlowRouter.triggers.enter([function () {\n            sAlert.collection.remove({onRouteClose: true});\n        }]);\n    }\n    if (typeof FlowRouter !== 'undefined' && !_.isObject(FlowRouter.triggers)) {\n        FlowRouter.middleware(function (path, next) {\n            sAlert.collection.remove({onRouteClose: true});\n            next();\n        });\n    }\n});\n","'use strict';\n\n// only client side collections for now..\nsAlert.collection = new Mongo.Collection(null);\n","\nTemplate.__checkName(\"sAlert\");\nTemplate[\"sAlert\"] = new Template(\"Template.sAlert\", (function() {\n  var view = this;\n  return [ Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"sAlertDataLeft\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlertContent\")), \"\\n    \" ];\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"sAlertDataRight\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlertContent\")), \"\\n    \" ];\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"sAlertDataFullTop\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlertContent\")), \"\\n    \" ];\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"sAlertDataFullBottom\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"sAlertContent\")), \"\\n    \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"sAlertContent\");\nTemplate[\"sAlertContent\"] = new Template(\"Template.sAlertContent\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"template\"));\n  }, function() {\n    return [ \"\\n        \", Blaze._TemplateWith(function() {\n      return {\n        template: Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"template\")),\n        data: Spacebars.call(view.lookup(\".\"))\n      };\n    }, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(Template.__dynamic);\n      });\n    }), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      class: function() {\n        return [ \"s-alert-box s-alert-\", Spacebars.mustache(view.lookup(\"condition\")), \" s-alert-\", Spacebars.mustache(view.lookup(\"position\")), \" \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"effect\"));\n        }, function() {\n          return [ \"s-alert-is-effect s-alert-effect-\", Blaze.View(\"lookup:effect\", function() {\n            return Spacebars.mustache(view.lookup(\"effect\"));\n          }) ];\n        }), \" s-alert-show\" ];\n      },\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"_id\"));\n      },\n      style: function() {\n        return Spacebars.mustache(view.lookup(\"boxPosition\"));\n      }\n    }, \"\\n            \", HTML.DIV({\n      class: \"s-alert-box-inner\"\n    }, \"\\n                \", HTML.P(Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"isHtml\"));\n    }, function() {\n      return Blaze.View(\"lookup:message\", function() {\n        return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"message\")));\n      });\n    }, function() {\n      return Blaze.View(\"lookup:message\", function() {\n        return Spacebars.mustache(view.lookup(\"message\"));\n      });\n    })), \"\\n            \"), \"\\n            \", HTML.SPAN({\n      class: \"s-alert-close\"\n    }), \"\\n        \"), \"\\n    \" ];\n  });\n}));\n","'use strict';\n\nvar getAlertData = function (currentData, sAlertPosition) {\n    var positionTop = 0;\n    var positionBottom = 0;\n    var padding = 0;\n    var alerts = {};\n    var style;\n    var sAlertBoxHTML;\n    var sAlertBox;\n    var docElement;\n    var sAlertBoxHeight;\n    var templateOverwrite = currentData && currentData.template;\n    var positionTypeTop;\n    var positionTypeBottom;\n    var stackLimit;\n    var alertsCount;\n    var checkFirst = function (type, objId) {\n        var collectionOfType = sAlertCollection.filter(function(obj) {\n            return obj.position === type;\n        });\n        return collectionOfType && collectionOfType[0]._id === objId;\n    };\n    var positionFunc = function (position, positionType, alert, sAlertBox) {\n        padding = alert.stack.spacing || sAlertBox.find('.s-alert-box').css(positionType);\n        if (checkFirst(alert.position, alert._id) && alert.offset) {\n            position = 0;\n            position = position + parseInt(alert.offset);\n        }\n        if (checkFirst(alert.position, alert._id) && alert.stack.spacing) {\n            position = position;\n        } else {\n            position = position + parseInt(padding);\n        }\n        style = positionType + ': ' + position + 'px;';\n        position = position + sAlertBoxHeight;\n        return position;\n    };\n\n    var query = {};\n    if (sAlertPosition === 'left') {\n        query = {$or: [{position: 'top-left'}, {position: 'bottom-left'}]};\n    }\n    if (sAlertPosition === 'right') {\n        query = {$or: [{position: 'top-right'}, {position: 'bottom-right'}]};\n    }\n    if (sAlertPosition === 'full-top') {\n        query = {position: 'top'};\n    }\n    if (sAlertPosition === 'full-bottom') {\n        query = {position: 'bottom'};\n    }\n    var sAlertCollection = sAlert.collection.find(query).fetch();\n\n    return sAlertCollection.map(function (alert) {\n        positionTypeTop = alert.position && /top/g.test(alert.position);\n        positionTypeBottom = alert.position && /bottom/g.test(alert.position);\n        if (alert.stack) {\n            stackLimit = alert.stack && alert.stack.limit;\n            alertsCount = sAlert.collection.find(query).count();\n            // limit check\n            if (stackLimit && alertsCount > stackLimit) {\n                sAlert.close(sAlert.collection.findOne(query)._id);\n            }\n            // checking alert box height - needed to calculate position\n            docElement = document.createElement('div');\n            $(docElement).addClass('s-alert-box-height');\n            if (_.isString(templateOverwrite)) {\n                sAlertBoxHTML = Blaze.toHTMLWithData(Template[templateOverwrite], alert);\n            } else {\n                sAlertBoxHTML = Blaze.toHTMLWithData(Template.sAlertContent, alert);\n            }\n            sAlertBox = $(docElement).html(sAlertBoxHTML);\n            $('body').append(sAlertBox);\n            sAlertBoxHeight = sAlertBox.find('.s-alert-box').outerHeight(true);\n            if (positionTypeTop) {\n                positionTop = positionFunc(positionTop, 'top', alert, sAlertBox);\n            }\n            if (positionTypeBottom) {\n                positionBottom = positionFunc(positionBottom, 'bottom', alert, sAlertBox);\n            }\n            sAlertBox.remove();\n            if (sAlertPosition === 'left') {\n                style = style + 'left: ' + (alert.stack.spacing || sAlertBox.find('.s-alert-box').css('left')) + 'px;';\n            }\n            if (sAlertPosition === 'right') {\n                style = style + 'right: ' + (alert.stack.spacing || sAlertBox.find('.s-alert-box').css('right')) + 'px;';\n            }\n            alerts = _.extend(alert, {boxPosition: style});\n        } else if (alert.offset && positionTypeTop) {\n            alerts = _.extend(alert, {boxPosition: 'top: ' + parseInt(alert.offset) + 'px;'});\n        } else if (alert.offset && positionTypeBottom) {\n            alerts = _.extend(alert, {boxPosition: 'bottom: ' + parseInt(alert.offset) + 'px;'});\n        } else {\n            alerts = alert;\n        }\n        return alerts;\n    });\n};\n\nTemplate.sAlert.helpers({\n    sAlertDataLeft: function () {\n        return getAlertData(Template.currentData(), 'left');\n    },\n    sAlertDataRight: function () {\n        return getAlertData(Template.currentData(), 'right');\n    },\n    sAlertDataFullTop: function () {\n        return getAlertData(Template.currentData(), 'full-top');\n    },\n    sAlertDataFullBottom: function () {\n        return getAlertData(Template.currentData(), 'full-bottom');\n    }\n});\n\nTemplate.sAlertContent.onRendered(function () {\n    var tmpl = this;\n    var data = Template.currentData();\n    var sAlertTimeout = data.timeout;\n    var beep = data.beep;\n    // audio\n    if (beep && _.isString(beep)) {\n        sAlert.audio = new Audio(data.beep);\n        sAlert.audio.load();\n        sAlert.audio.play();\n    }\n    if (beep && _.isObject(beep) && data.condition === 'info') {\n        sAlert.audioInfo = new Audio(data.beep.info);\n        sAlert.audioInfo.load();\n        sAlert.audioInfo.play();\n    }\n    if (beep && _.isObject(beep) && data.condition === 'error') {\n        sAlert.audioError = new Audio(data.beep.error);\n        sAlert.audioError.load();\n        sAlert.audioError.play();\n    }\n    if (beep && _.isObject(beep) && data.condition === 'success') {\n        sAlert.audioSuccess = new Audio(data.beep.success);\n        sAlert.audioSuccess.load();\n        sAlert.audioSuccess.play();\n    }\n    if (beep && _.isObject(beep) && data.condition === 'warning') {\n        sAlert.audioWarning = new Audio(data.beep.warning);\n        sAlert.audioWarning.load();\n        sAlert.audioWarning.play();\n    }\n    if (sAlertTimeout && sAlertTimeout !== 'none') {\n        sAlertTimeout = parseInt(sAlertTimeout);\n        if (tmpl.sAlertCloseTimeout) {\n            Meteor.clearTimeout(tmpl.sAlertCloseTimeout);\n        }\n        tmpl.sAlertCloseTimeout = Meteor.setTimeout(function () {\n            sAlert.close(data._id);\n        }, sAlertTimeout);\n    }\n});\nTemplate.sAlertContent.onDestroyed(function () {\n    if (this.sAlertCloseTimeout) {\n        Meteor.clearTimeout(this.sAlertCloseTimeout);\n    }\n});\n\nTemplate.sAlertContent.events({\n    'click .s-alert-close': function (e, tmpl) {\n        e.preventDefault();\n        Meteor.clearTimeout(tmpl.sAlertCloseTimeout);\n        sAlert.close(this._id);\n    }\n});\n\nTemplate.sAlertContent.helpers({\n    isHtml: function () {\n        var data = Template.currentData();\n        return data && data.html;\n    }\n});\n"]}}]