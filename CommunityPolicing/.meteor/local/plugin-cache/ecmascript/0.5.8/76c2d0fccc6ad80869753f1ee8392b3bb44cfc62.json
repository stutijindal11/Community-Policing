{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/plugins/keep-markup/prism-keep-markup.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/plugins/keep-markup/prism-keep-markup.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/plugins/keep-markup/prism-keep-markup.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/plugins/keep-markup/prism-keep-markup.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"prism-keep-markup"},"ignored":false,"code":"(function () {\n\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.createRange) {\n\t\treturn;\n\t}\n\n\tPrism.hooks.add('before-highlight', function (env) {\n\t\tvar firstWhiteSpaces = false;\n\t\tvar pos = 0;\n\t\tvar data = [];\n\t\tvar f = function f(elt, baseNode) {\n\t\t\tvar o = {};\n\t\t\tif (!baseNode) {\n\t\t\t\t// Clone the original tag to keep all attributes\n\t\t\t\to.clone = elt.cloneNode(false);\n\t\t\t\to.posOpen = pos;\n\t\t\t\tdata.push(o);\n\t\t\t}\n\t\t\tfor (var i = 0, l = elt.childNodes.length; i < l; i++) {\n\t\t\t\tvar child = elt.childNodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\t// element\n\t\t\t\t\tf(child);\n\t\t\t\t} else if (child.nodeType === 3) {\n\t\t\t\t\t// text\n\t\t\t\t\tif (!firstWhiteSpaces) {\n\t\t\t\t\t\t// We need to ignore the first white spaces in the code block\n\t\t\t\t\t\tchild.data = child.data.replace(/^(?:\\r?\\n|\\r)/, '');\n\t\t\t\t\t\tfirstWhiteSpaces = true;\n\t\t\t\t\t}\n\t\t\t\t\tpos += child.data.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!baseNode) {\n\t\t\t\to.posClose = pos;\n\t\t\t}\n\t\t};\n\t\tf(env.element, true);\n\n\t\tif (data && data.length) {\n\t\t\t// data is an array of all existing tags\n\t\t\tenv.keepMarkup = data;\n\t\t}\n\t});\n\n\tPrism.hooks.add('after-highlight', function (env) {\n\t\tif (env.keepMarkup && env.keepMarkup.length) {\n\n\t\t\tvar walk = function walk(elt, nodeState) {\n\t\t\t\tfor (var i = 0, l = elt.childNodes.length; i < l; i++) {\n\n\t\t\t\t\tvar child = elt.childNodes[i];\n\n\t\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\t\t// element\n\t\t\t\t\t\tif (!walk(child, nodeState)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (child.nodeType === 3) {\n\t\t\t\t\t\t// text\n\t\t\t\t\t\tif (!nodeState.nodeStart && nodeState.pos + child.data.length > nodeState.node.posOpen) {\n\t\t\t\t\t\t\t// We found the start position\n\t\t\t\t\t\t\tnodeState.nodeStart = child;\n\t\t\t\t\t\t\tnodeState.nodeStartPos = nodeState.node.posOpen - nodeState.pos;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (nodeState.nodeStart && nodeState.pos + child.data.length >= nodeState.node.posClose) {\n\t\t\t\t\t\t\t// We found the end position\n\t\t\t\t\t\t\tnodeState.nodeEnd = child;\n\t\t\t\t\t\t\tnodeState.nodeEndPos = nodeState.node.posClose - nodeState.pos;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnodeState.pos += child.data.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nodeState.nodeStart && nodeState.nodeEnd) {\n\t\t\t\t\t\t// Select the range and wrap it with the clone\n\t\t\t\t\t\tvar range = document.createRange();\n\t\t\t\t\t\trange.setStart(nodeState.nodeStart, nodeState.nodeStartPos);\n\t\t\t\t\t\trange.setEnd(nodeState.nodeEnd, nodeState.nodeEndPos);\n\t\t\t\t\t\tnodeState.node.clone.appendChild(range.extractContents());\n\t\t\t\t\t\trange.insertNode(nodeState.node.clone);\n\t\t\t\t\t\trange.detach();\n\n\t\t\t\t\t\t// Process is over\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\t// For each tag, we walk the DOM to reinsert it\n\t\t\tenv.keepMarkup.forEach(function (node) {\n\t\t\t\twalk(env.element, {\n\t\t\t\t\tnode: node,\n\t\t\t\t\tpos: 0\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n})();","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/plugins/keep-markup/prism-keep-markup.js"],"names":[],"mappings":"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","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/plugins/keep-markup/prism-keep-markup.js.map","sourcesContent":["(function () {\n\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.createRange) {\n\t\treturn;\n\t}\n\n\tPrism.hooks.add('before-highlight', function (env) {\n\t\tvar firstWhiteSpaces = false;\n\t\tvar pos = 0;\n\t\tvar data = [];\n\t\tvar f = function (elt, baseNode) {\n\t\t\tvar o = {};\n\t\t\tif (!baseNode) {\n\t\t\t\t// Clone the original tag to keep all attributes\n\t\t\t\to.clone = elt.cloneNode(false);\n\t\t\t\to.posOpen = pos;\n\t\t\t\tdata.push(o);\n\t\t\t}\n\t\t\tfor (var i = 0, l = elt.childNodes.length; i < l; i++) {\n\t\t\t\tvar child = elt.childNodes[i];\n\t\t\t\tif (child.nodeType === 1) { // element\n\t\t\t\t\tf(child);\n\t\t\t\t} else if(child.nodeType === 3) { // text\n\t\t\t\t\tif(!firstWhiteSpaces) {\n\t\t\t\t\t\t// We need to ignore the first white spaces in the code block\n\t\t\t\t\t\tchild.data = child.data.replace(/^(?:\\r?\\n|\\r)/, '');\n\t\t\t\t\t\tfirstWhiteSpaces = true;\n\t\t\t\t\t}\n\t\t\t\t\tpos += child.data.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!baseNode) {\n\t\t\t\to.posClose = pos;\n\t\t\t}\n\t\t};\n\t\tf(env.element, true);\n\n\t\tif (data && data.length) {\n\t\t\t// data is an array of all existing tags\n\t\t\tenv.keepMarkup = data;\n\t\t}\n\t});\n\n\tPrism.hooks.add('after-highlight', function (env) {\n\t\tif(env.keepMarkup && env.keepMarkup.length) {\n\n\t\t\tvar walk = function (elt, nodeState) {\n\t\t\t\tfor (var i = 0, l = elt.childNodes.length; i < l; i++) {\n\n\t\t\t\t\tvar child = elt.childNodes[i];\n\n\t\t\t\t\tif (child.nodeType === 1) { // element\n\t\t\t\t\t\tif (!walk(child, nodeState)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if (child.nodeType === 3) { // text\n\t\t\t\t\t\tif(!nodeState.nodeStart && nodeState.pos + child.data.length > nodeState.node.posOpen) {\n\t\t\t\t\t\t\t// We found the start position\n\t\t\t\t\t\t\tnodeState.nodeStart = child;\n\t\t\t\t\t\t\tnodeState.nodeStartPos = nodeState.node.posOpen - nodeState.pos;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(nodeState.nodeStart && nodeState.pos + child.data.length >= nodeState.node.posClose) {\n\t\t\t\t\t\t\t// We found the end position\n\t\t\t\t\t\t\tnodeState.nodeEnd = child;\n\t\t\t\t\t\t\tnodeState.nodeEndPos = nodeState.node.posClose - nodeState.pos;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnodeState.pos += child.data.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nodeState.nodeStart && nodeState.nodeEnd) {\n\t\t\t\t\t\t// Select the range and wrap it with the clone\n\t\t\t\t\t\tvar range = document.createRange();\n\t\t\t\t\t\trange.setStart(nodeState.nodeStart, nodeState.nodeStartPos);\n\t\t\t\t\t\trange.setEnd(nodeState.nodeEnd, nodeState.nodeEndPos);\n\t\t\t\t\t\tnodeState.node.clone.appendChild(range.extractContents());\n\t\t\t\t\t\trange.insertNode(nodeState.node.clone);\n\t\t\t\t\t\trange.detach();\n\n\t\t\t\t\t\t// Process is over\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\t// For each tag, we walk the DOM to reinsert it\n\t\t\tenv.keepMarkup.forEach(function (node) {\n\t\t\t\twalk(env.element, {\n\t\t\t\t\tnode: node,\n\t\t\t\t\tpos: 0\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n}());"]},"hash":"76c2d0fccc6ad80869753f1ee8392b3bb44cfc62"}
