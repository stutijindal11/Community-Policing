{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.equalizer.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.equalizer.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.equalizer.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.equalizer.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.equalizer"},"ignored":false,"code":"!function (Foundation, $) {\n  'use strict';\n\n  /**\n   * Creates a new instance of Equalizer.\n   * @class\n   * @fires Equalizer#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n\n  function Equalizer(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Equalizer.defaults, this.$element.data(), options);\n    this.$window = $(window);\n    this.name = 'equalizer';\n    this.attr = 'data-equalizer';\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this);\n  }\n\n  /**\n   * Default settings for plugin\n   */\n  Equalizer.defaults = {\n    /**\n     * Enable height equalization when stacked on smaller screens.\n     * @option\n     * @example true\n     */\n    equalizeOnStack: true,\n    /**\n     * Amount of time, in ms, to debounce the size checking/equalization. Lower times mean smoother transitions/less performance on mobile.\n     * @option\n     * @example 50\n     */\n    throttleInterval: 50\n  };\n\n  /**\n   * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\n   * @private\n   */\n  Equalizer.prototype._init = function () {\n    this._reflow();\n  };\n\n  /**\n   * Initializes events for Equalizer.\n   * @private\n   */\n  Equalizer.prototype._events = function () {\n    var self = this;\n\n    this.$window.off('.equalizer').on('resize.fndtn.equalizer', Foundation.util.throttle(function () {\n      self._reflow();\n    }, self.options.throttleInterval));\n  };\n\n  /**\n   * A noop version for the plugin\n   * @private\n   */\n  Equalizer.prototype._killswitch = function () {\n    return;\n  };\n  /**\n   * Calls necessary functions to update Equalizer upon DOM change\n   * @private\n   */\n  Equalizer.prototype._reflow = function () {\n    var self = this;\n\n    $('[' + this.attr + ']').each(function () {\n      var $eqParent = $(this),\n          adjustedHeights = [],\n          $images = $eqParent.find('img');\n\n      if ($images.length) {\n        Foundation.onImagesLoaded($images, function () {\n          adjustedHeights = self.getHeights($eqParent);\n          self.applyHeight($eqParent, adjustedHeights);\n        });\n      } else {\n        adjustedHeights = self.getHeights($eqParent);\n        self.applyHeight($eqParent, adjustedHeights);\n      }\n    });\n  };\n  /**\n   * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n   * @param {Object} $eqParent A jQuery instance of an Equalizer container\n   * @returns {Array} heights An array of heights of children within Equalizer container\n   */\n  Equalizer.prototype.getHeights = function ($eqParent) {\n    var eqGroupName = $eqParent.data('equalizer'),\n        eqGroup = eqGroupName ? $eqParent.find('[' + this.attr + '-watch=\"' + eqGroupName + '\"]:visible') : $eqParent.find('[' + this.attr + '-watch]:visible'),\n        heights;\n\n    eqGroup.height('inherit');\n    heights = eqGroup.map(function () {\n      return $(this).outerHeight(false);\n    }).get();\n    console.log(heights);\n    return heights;\n  };\n  /**\n   * Changes the CSS height property of each child in an Equalizer parent to match the tallest\n   * @param {Object} $eqParent - A jQuery instance of an Equalizer container\n   * @param {array} heights - An array of heights of children within Equalizer container\n   * @fires Equalizer#preEqualized\n   * @fires Equalizer#postEqualized\n   */\n  Equalizer.prototype.applyHeight = function ($eqParent, heights) {\n    var eqGroupName = $eqParent.data('equalizer'),\n        eqGroup = eqGroupName ? $eqParent.find('[' + this.attr + '-watch=\"' + eqGroupName + '\"]:visible') : $eqParent.find('[' + this.attr + '-watch]:visible'),\n        max = Math.max.apply(null, heights);\n\n    /**\n     * Fires before the heights are applied\n     * @event Equalizer#preEqualized\n     */\n    $eqParent.trigger('preEqualized.zf.Equalizer');\n\n    // for now, apply the max height found in the array\n    for (var i = 0; i < eqGroup.length; i++) {\n      $(eqGroup[i]).css('height', max);\n    }\n    // console.log(max);\n    /**\n     * Fires when the heights have been applied\n     * @event Equalizer#postEqualized\n     */\n    $eqParent.trigger('postEqualized.zf.Equalizer');\n  };\n  /**\n   * Destroys an instance of Equalizer.\n   * @function\n   */\n  Equalizer.prototype.destroy = function () {\n    //TODO this.\n  };\n\n  Foundation.plugin(Equalizer, 'Equalizer');\n\n  // Exports for AMD/Browserify\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') module.exports = Equalizer;\n  if (typeof define === 'function') define(['foundation'], function () {\n    return Equalizer;\n  });\n}(Foundation, jQuery);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.equalizer.js"],"names":[],"mappings":"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","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.equalizer.js.map","sourcesContent":["!function(Foundation, $) {\n  'use strict';\n\n  /**\n   * Creates a new instance of Equalizer.\n   * @class\n   * @fires Equalizer#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  function Equalizer(element, options) {\n    this.$element = element;\n    this.options  = $.extend({}, Equalizer.defaults, this.$element.data(), options);\n    this.$window  = $(window);\n    this.name     = 'equalizer';\n    this.attr     = 'data-equalizer';\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this);\n  }\n\n  /**\n   * Default settings for plugin\n   */\n  Equalizer.defaults = {\n    /**\n     * Enable height equalization when stacked on smaller screens.\n     * @option\n     * @example true\n     */\n    equalizeOnStack: true,\n    /**\n     * Amount of time, in ms, to debounce the size checking/equalization. Lower times mean smoother transitions/less performance on mobile.\n     * @option\n     * @example 50\n     */\n    throttleInterval: 50\n  };\n\n  /**\n   * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\n   * @private\n   */\n  Equalizer.prototype._init = function() {\n    this._reflow();\n  };\n\n  /**\n   * Initializes events for Equalizer.\n   * @private\n   */\n  Equalizer.prototype._events = function() {\n    var self = this;\n\n    this.$window\n      .off('.equalizer')\n      .on('resize.fndtn.equalizer', Foundation.util.throttle(function () {\n        self._reflow();\n      }, self.options.throttleInterval));\n  };\n\n  /**\n   * A noop version for the plugin\n   * @private\n   */\n  Equalizer.prototype._killswitch = function() {\n    return;\n  };\n  /**\n   * Calls necessary functions to update Equalizer upon DOM change\n   * @private\n   */\n  Equalizer.prototype._reflow = function() {\n    var self = this;\n\n    $('[' + this.attr + ']').each(function() {\n      var $eqParent       = $(this),\n          adjustedHeights = [],\n          $images = $eqParent.find('img');\n\n      if ($images.length) {\n        Foundation.onImagesLoaded($images, function() {\n          adjustedHeights = self.getHeights($eqParent);\n          self.applyHeight($eqParent, adjustedHeights);\n        });\n      }\n      else {\n        adjustedHeights = self.getHeights($eqParent);\n        self.applyHeight($eqParent, adjustedHeights);\n      }\n    });\n  };\n  /**\n   * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n   * @param {Object} $eqParent A jQuery instance of an Equalizer container\n   * @returns {Array} heights An array of heights of children within Equalizer container\n   */\n  Equalizer.prototype.getHeights = function($eqParent) {\n    var eqGroupName = $eqParent.data('equalizer'),\n        eqGroup     = eqGroupName ? $eqParent.find('[' + this.attr + '-watch=\"' + eqGroupName + '\"]:visible') : $eqParent.find('[' + this.attr + '-watch]:visible'),\n        heights;\n\n    eqGroup.height('inherit');\n    heights = eqGroup.map(function () { return $(this).outerHeight(false);}).get();\n    console.log(heights);\n    return heights;\n  };\n  /**\n   * Changes the CSS height property of each child in an Equalizer parent to match the tallest\n   * @param {Object} $eqParent - A jQuery instance of an Equalizer container\n   * @param {array} heights - An array of heights of children within Equalizer container\n   * @fires Equalizer#preEqualized\n   * @fires Equalizer#postEqualized\n   */\n  Equalizer.prototype.applyHeight = function($eqParent, heights) {\n    var eqGroupName = $eqParent.data('equalizer'),\n        eqGroup     = eqGroupName ? $eqParent.find('['+this.attr+'-watch=\"'+eqGroupName+'\"]:visible') : $eqParent.find('['+this.attr+'-watch]:visible'),\n        max         = Math.max.apply(null, heights);\n\n    /**\n     * Fires before the heights are applied\n     * @event Equalizer#preEqualized\n     */\n    $eqParent.trigger('preEqualized.zf.Equalizer');\n\n    // for now, apply the max height found in the array\n    for (var i = 0; i < eqGroup.length; i++) {\n      $(eqGroup[i]).css('height', max);\n    }\n    // console.log(max);\n    /**\n     * Fires when the heights have been applied\n     * @event Equalizer#postEqualized\n     */\n    $eqParent.trigger('postEqualized.zf.Equalizer');\n  };\n  /**\n   * Destroys an instance of Equalizer.\n   * @function\n   */\n  Equalizer.prototype.destroy = function(){\n    //TODO this.\n  };\n\n  Foundation.plugin(Equalizer, 'Equalizer');\n\n  // Exports for AMD/Browserify\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined')\n    module.exports = Equalizer;\n  if (typeof define === 'function')\n    define(['foundation'], function() {\n      return Equalizer;\n    });\n\n}(Foundation, jQuery);\n"]},"hash":"56346e5b27a83b21138d1c60f427e32ec7738a14"}
