{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-pure.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-pure.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-pure.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-pure.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"prism-pure"},"ignored":false,"code":"(function (Prism) {\n\tPrism.languages.pure = {\n\t\t'inline-lang': {\n\t\t\tpattern: /%<[\\s\\S]+?%>/,\n\t\t\tinside: {\n\t\t\t\t'lang': {\n\t\t\t\t\tpattern: /(^%< *)-\\*-.+?-\\*-/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'comment'\n\t\t\t\t},\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^%<.*|%>$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'comment': [{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\tlookbehind: true\n\t\t}, {\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}, /#!.+/],\n\t\t'string': /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n\t\t'number': {\n\t\t\t// The look-behind prevents wrong highlighting of the .. operator\n\t\t\tpattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n\t\t'function': /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n\t\t'special': {\n\t\t\tpattern: /\\b__[a-z]+__\\b/i,\n\t\t\talias: 'builtin'\n\t\t},\n\t\t// Any combination of operator chars can be an operator\n\t\t'operator': /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,\n\t\t// FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n\t\t'punctuation': /[(){}\\[\\];,|]/\n\t};\n\n\tvar inlineLanguages = ['c', { lang: 'c++', alias: 'cpp' }, 'fortran', 'ats', 'dsp'];\n\tvar inlineLanguageRe = '%< *-\\\\*- *{lang}\\\\d* *-\\\\*-[\\\\s\\\\S]+?%>';\n\n\tinlineLanguages.forEach(function (lang) {\n\t\tvar alias = lang;\n\t\tif (typeof lang !== 'string') {\n\t\t\talias = lang.alias;\n\t\t\tlang = lang.lang;\n\t\t}\n\t\tif (Prism.languages[alias]) {\n\t\t\tvar o = {};\n\t\t\to['inline-lang-' + alias] = {\n\t\t\t\tpattern: RegExp(inlineLanguageRe.replace('{lang}', lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')), 'i'),\n\t\t\t\tinside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n\t\t\t};\n\t\t\to['inline-lang-' + alias].inside.rest = Prism.util.clone(Prism.languages[alias]);\n\t\t\tPrism.languages.insertBefore('pure', 'inline-lang', o);\n\t\t}\n\t});\n\n\t// C is the default inline language\n\tif (Prism.languages.c) {\n\t\tPrism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(Prism.languages.c);\n\t}\n})(Prism);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-pure.js"],"names":[],"mappings":"AAAC,WAAU,KAAV,EAAiB;AACjB,OAAM,SAAN,CAAgB,IAAhB,GAAuB;AACtB,iBAAe;AACd,YAAS,cADK;AAEd,WAAQ;AACP,YAAQ;AACP,cAAS,oBADF;AAEP,iBAAY,IAFL;AAGP,YAAO;AAHA,KADD;AAMP,iBAAa;AACZ,cAAS,WADG;AAEZ,YAAO;AAFK;AANN;AAFM,GADO;AAetB,aAAW,CACV;AACC,YAAS,2BADV;AAEC,eAAY;AAFb,GADU,EAKV;AACC,YAAS,kBADV;AAEC,eAAY;AAFb,GALU,EASV,MATU,CAfW;AA0BtB,YAAU,uBA1BY;AA2BtB,YAAU;;AAET,YAAS,kGAFA;AAGT,eAAY;AAHH,GA3BY;AAgCtB,aAAW,ySAhCW;AAiCtB,cAAY,y0DAjCU;AAkCtB,aAAW;AACV,YAAS,iBADC;AAEV,UAAO;AAFG,GAlCW;;AAuCtB,cAAY,+GAvCU;;AAyCtB,iBAAe;AAzCO,EAAvB;;AA4CA,KAAI,kBAAkB,CACrB,GADqB,EAErB,EAAE,MAAM,KAAR,EAAe,OAAO,KAAtB,EAFqB,EAGrB,SAHqB,EAIrB,KAJqB,EAKrB,KALqB,CAAtB;AAOA,KAAI,mBAAmB,0CAAvB;;AAEA,iBAAgB,OAAhB,CAAwB,UAAU,IAAV,EAAgB;AACvC,MAAI,QAAQ,IAAZ;AACA,MAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC7B,WAAQ,KAAK,KAAb;AACA,UAAO,KAAK,IAAZ;AACA;AACD,MAAI,MAAM,SAAN,CAAgB,KAAhB,CAAJ,EAA4B;AAC3B,OAAI,IAAI,EAAR;AACA,KAAE,iBAAiB,KAAnB,IAA4B;AAC3B,aAAS,OAAO,iBAAiB,OAAjB,CAAyB,QAAzB,EAAmC,KAAK,OAAL,CAAa,uBAAb,EAAqC,MAArC,CAAnC,CAAP,EAAyF,GAAzF,CADkB;AAE3B,YAAQ,MAAM,IAAN,CAAW,KAAX,CAAiB,MAAM,SAAN,CAAgB,IAAhB,CAAqB,aAArB,EAAoC,MAArD;AAFmB,IAA5B;AAIA,KAAE,iBAAiB,KAAnB,EAA0B,MAA1B,CAAiC,IAAjC,GAAwC,MAAM,IAAN,CAAW,KAAX,CAAiB,MAAM,SAAN,CAAgB,KAAhB,CAAjB,CAAxC;AACA,SAAM,SAAN,CAAgB,YAAhB,CAA6B,MAA7B,EAAqC,aAArC,EAAoD,CAApD;AACA;AACD,EAfD;;;AAkBA,KAAI,MAAM,SAAN,CAAgB,CAApB,EAAuB;AACtB,QAAM,SAAN,CAAgB,IAAhB,CAAqB,aAArB,EAAoC,MAApC,CAA2C,IAA3C,GAAkD,MAAM,IAAN,CAAW,KAAX,CAAiB,MAAM,SAAN,CAAgB,CAAjC,CAAlD;AACA;AAED,CA5EA,EA4EC,KA5ED,CAAD","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-pure.js.map","sourcesContent":["(function (Prism) {\n\tPrism.languages.pure = {\n\t\t'inline-lang': {\n\t\t\tpattern: /%<[\\s\\S]+?%>/,\n\t\t\tinside: {\n\t\t\t\t'lang': {\n\t\t\t\t\tpattern: /(^%< *)-\\*-.+?-\\*-/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'comment'\n\t\t\t\t},\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^%<.*|%>$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'comment': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/#!.+/\n\t\t],\n\t\t'string': /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n\t\t'number': {\n\t\t\t// The look-behind prevents wrong highlighting of the .. operator\n\t\t\tpattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n\t\t'function': /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n\t\t'special': {\n\t\t\tpattern: /\\b__[a-z]+__\\b/i,\n\t\t\talias: 'builtin'\n\t\t},\n\t\t// Any combination of operator chars can be an operator\n\t\t'operator': /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,\n\t\t// FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n\t\t'punctuation': /[(){}\\[\\];,|]/\n\t};\n\n\tvar inlineLanguages = [\n\t\t'c',\n\t\t{ lang: 'c++', alias: 'cpp' },\n\t\t'fortran',\n\t\t'ats',\n\t\t'dsp'\n\t];\n\tvar inlineLanguageRe = '%< *-\\\\*- *{lang}\\\\d* *-\\\\*-[\\\\s\\\\S]+?%>';\n\n\tinlineLanguages.forEach(function (lang) {\n\t\tvar alias = lang;\n\t\tif (typeof lang !== 'string') {\n\t\t\talias = lang.alias;\n\t\t\tlang = lang.lang;\n\t\t}\n\t\tif (Prism.languages[alias]) {\n\t\t\tvar o = {};\n\t\t\to['inline-lang-' + alias] = {\n\t\t\t\tpattern: RegExp(inlineLanguageRe.replace('{lang}', lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g,'\\\\$1')), 'i'),\n\t\t\t\tinside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n\t\t\t};\n\t\t\to['inline-lang-' + alias].inside.rest = Prism.util.clone(Prism.languages[alias]);\n\t\t\tPrism.languages.insertBefore('pure', 'inline-lang', o);\n\t\t}\n\t});\n\n\t// C is the default inline language\n\tif (Prism.languages.c) {\n\t\tPrism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(Prism.languages.c);\n\t}\n\n}(Prism));"]},"hash":"49e816dc7b263b498fd253ff0dedfdeca8f7420d"}
