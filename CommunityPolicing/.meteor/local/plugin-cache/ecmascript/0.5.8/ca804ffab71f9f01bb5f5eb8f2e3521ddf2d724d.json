{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.offcanvas.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.offcanvas.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.offcanvas.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.offcanvas.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.offcanvas"},"ignored":false,"code":"/**\n * OffCanvas module.\n * @module foundation.offcanvas\n * @requires foundation.util.triggers\n * @requires foundation.util.motion\n */\n!function ($, Foundation) {\n\n  'use strict';\n\n  /**\n   * Creates a new instance of an off-canvas wrapper.\n   * @class\n   * @fires OffCanvas#init\n   * @param {Object} element - jQuery object to initialize.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n\n  function OffCanvas(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\n    this.$lastTrigger = $();\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this);\n  }\n\n  OffCanvas.defaults = {\n    /**\n     * Allow the user to click outside of the menu to close it.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\n     * @option\n     * @example 500\n     */\n    transitionTime: 0,\n    /**\n     * Direction the offcanvas opens from. Determines class applied to body.\n     * @option\n     * @example left\n     */\n    position: 'left',\n    /**\n     * Force the page to scroll to top on open.\n     */\n    forceTop: true,\n    /**\n     * Allow the offcanvas to be sticky while open. Does nothing if Sass option `$maincontent-prevent-scroll === true`.\n     * Performance in Safari OSX/iOS is not great.\n     */\n    // isSticky: false,\n    /**\n     * Allow the offcanvas to remain open for certain breakpoints. Can be used with `isSticky`.\n     * @option\n     * @example false\n     */\n    isRevealed: false,\n    /**\n     * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class @`revealClass`.\n     * @option\n     * @example reveal-for-large\n     */\n    revealOn: null,\n    /**\n     * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\n     * @option\n     * @example true\n     */\n    autoFocus: true,\n    /**\n     * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\n     * @option\n     * TODO improve the regex testing for this.\n     * @example reveal-for-large\n     */\n    revealClass: 'reveal-for-'\n  };\n\n  /**\n   * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\n   * @function\n   * @private\n   */\n  OffCanvas.prototype._init = function () {\n    var id = this.$element.attr('id');\n\n    this.$element.attr('aria-hidden', 'true');\n\n    // Find triggers that affect this element and add aria-expanded to them\n    $(document).find('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-expanded', 'false').attr('aria-controls', id);\n\n    // Add a close trigger over the body if necessary\n    if (this.options.closeOnClick) {\n      if ($('.js-off-canvas-exit').length) {\n        this.$exiter = $('.js-off-canvas-exit');\n      } else {\n        var exiter = document.createElement('div');\n        exiter.setAttribute('class', 'js-off-canvas-exit');\n        $('[data-off-canvas-content]').append(exiter);\n\n        this.$exiter = $(exiter);\n      }\n    }\n\n    this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\n\n    if (this.options.isRevealed) {\n      this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\n      this._setMQChecker();\n    }\n    if (!this.options.transitionTime) {\n      this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas-wrapper]')[0]).transitionDuration) * 1000;\n    }\n  };\n\n  /**\n   * Adds event handlers to the off-canvas wrapper and the exit overlay.\n   * @function\n   * @private\n   */\n  OffCanvas.prototype._events = function () {\n    this.$element.on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': this.close.bind(this),\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\n    });\n\n    if (this.$exiter.length) {\n      var _this = this;\n      this.$exiter.on({ 'click.zf.offcanvas': this.close.bind(this) });\n    }\n  };\n  /**\n   * Applies event listener for elements that will reveal at certain breakpoints.\n   * @private\n   */\n  OffCanvas.prototype._setMQChecker = function () {\n    var _this = this;\n\n    $(window).on('changed.zf.mediaquery', function () {\n      if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n        _this.reveal(true);\n      } else {\n        _this.reveal(false);\n      }\n    }).one('load.zf.offcanvas', function () {\n      if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n        _this.reveal(true);\n      }\n    });\n  };\n  /**\n   * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\n   * @param {Boolean} isRevealed - true if element should be revealed.\n   * @function\n   */\n  OffCanvas.prototype.reveal = function (isRevealed) {\n    var $closer = this.$element.find('[data-close]');\n    if (isRevealed) {\n      // if(!this.options.forceTop){\n      //   var scrollPos = parseInt(window.pageYOffset);\n      //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n      // }\n      // if(this.options.isSticky){ this._stick(); }\n      if ($closer.length) {\n        $closer.hide();\n      }\n    } else {\n      // if(this.options.isSticky || !this.options.forceTop){\n      //   this.$element[0].style.transform = '';\n      //   $(window).off('scroll.zf.offcanvas');\n      // }\n      if ($closer.length) {\n        $closer.show();\n      }\n    }\n  };\n\n  /**\n   * Opens the off-canvas menu.\n   * @function\n   * @param {Object} event - Event object passed from listener.\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\n   * @fires OffCanvas#opened\n   */\n  OffCanvas.prototype.open = function (event, trigger) {\n    if (this.$element.hasClass('is-open')) {\n      return;\n    }\n    var _this = this,\n        $body = $(document.body);\n    $('body').scrollTop(0);\n    // window.pageYOffset = 0;\n\n    // if(!this.options.forceTop){\n    //   var scrollPos = parseInt(window.pageYOffset);\n    //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n    //   if(this.$exiter.length){\n    //     this.$exiter[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n    //   }\n    // }\n    /**\n     * Fires when the off-canvas menu opens.\n     * @event OffCanvas#opened\n     */\n    Foundation.Move(this.options.transitionTime, this.$element, function () {\n      $('[data-off-canvas-wrapper]').addClass('is-off-canvas-open is-open-' + _this.options.position);\n\n      _this.$element.addClass('is-open').attr('aria-hidden', 'false').trigger('opened.zf.offcanvas');\n\n      // if(_this.options.isSticky){\n      //   _this._stick();\n      // }\n    });\n    if (trigger) {\n      this.$lastTrigger = trigger.attr('aria-expanded', 'true');\n    }\n    if (this.options.autoFocus) {\n      this.$element.one('finished.zf.animate', function () {\n        _this.$element.find('a, button').eq(0).focus();\n      });\n    }\n  };\n  /**\n   * Allows the offcanvas to appear sticky utilizing translate properties.\n   * @private\n   */\n  // OffCanvas.prototype._stick = function(){\n  //   var elStyle = this.$element[0].style;\n  //\n  //   if(this.options.closeOnClick){\n  //     var exitStyle = this.$exiter[0].style;\n  //   }\n  //\n  //   $(window).on('scroll.zf.offcanvas', function(e){\n  //     console.log(e);\n  //     var pageY = window.pageYOffset;\n  //     elStyle.transform = 'translate(0,' + pageY + 'px)';\n  //     if(exitStyle !== undefined){ exitStyle.transform = 'translate(0,' + pageY + 'px)'; }\n  //   });\n  //   // this.$element.trigger('stuck.zf.offcanvas');\n  // };\n  /**\n   * Closes the off-canvas menu.\n   * @function\n   * @fires OffCanvas#closed\n   */\n  OffCanvas.prototype.close = function () {\n    if (!this.$element.hasClass('is-open')) {\n      return;\n    }\n\n    var _this = this;\n\n    Foundation.Move(this.options.transitionTime, this.$element, function () {\n      $('[data-off-canvas-wrapper]').removeClass('is-off-canvas-open is-open-' + _this.options.position);\n\n      _this.$element.removeClass('is-open');\n      // Foundation._reflow();\n    });\n    this.$element.attr('aria-hidden', 'true')\n    /**\n     * Fires when the off-canvas menu opens.\n     * @event OffCanvas#closed\n     */\n    .trigger('closed.zf.offcanvas');\n    // if(_this.options.isSticky || !_this.options.forceTop){\n    //   setTimeout(function(){\n    //     _this.$element[0].style.transform = '';\n    //     $(window).off('scroll.zf.offcanvas');\n    //   }, this.options.transitionTime);\n    // }\n\n    this.$lastTrigger.attr('aria-expanded', 'false');\n  };\n\n  /**\n   * Toggles the off-canvas menu open or closed.\n   * @function\n   * @param {Object} event - Event object passed from listener.\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\n   */\n  OffCanvas.prototype.toggle = function (event, trigger) {\n    if (this.$element.hasClass('is-open')) {\n      this.close(event, trigger);\n    } else {\n      this.open(event, trigger);\n    }\n  };\n\n  /**\n   * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\n   * @function\n   * @private\n   */\n  OffCanvas.prototype._handleKeyboard = function (event) {\n    if (event.which !== 27) return;\n\n    event.stopPropagation();\n    event.preventDefault();\n    this.close();\n    this.$lastTrigger.focus();\n  };\n  /**\n   * Destroys the offcanvas plugin.\n   * @function\n   */\n  OffCanvas.prototype.destroy = function () {\n    //TODO make this...\n  };\n\n  Foundation.plugin(OffCanvas, 'OffCanvas');\n}(jQuery, Foundation);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.offcanvas.js"],"names":[],"mappings":"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","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.offcanvas.js.map","sourcesContent":["/**\n * OffCanvas module.\n * @module foundation.offcanvas\n * @requires foundation.util.triggers\n * @requires foundation.util.motion\n */\n!function($, Foundation) {\n\n'use strict';\n\n/**\n * Creates a new instance of an off-canvas wrapper.\n * @class\n * @fires OffCanvas#init\n * @param {Object} element - jQuery object to initialize.\n * @param {Object} options - Overrides to the default plugin settings.\n */\nfunction OffCanvas(element, options) {\n  this.$element = element;\n  this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\n  this.$lastTrigger = $();\n\n  this._init();\n  this._events();\n\n  Foundation.registerPlugin(this);\n}\n\nOffCanvas.defaults = {\n  /**\n   * Allow the user to click outside of the menu to close it.\n   * @option\n   * @example true\n   */\n  closeOnClick: true,\n  /**\n   * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\n   * @option\n   * @example 500\n   */\n  transitionTime: 0,\n  /**\n   * Direction the offcanvas opens from. Determines class applied to body.\n   * @option\n   * @example left\n   */\n  position: 'left',\n  /**\n   * Force the page to scroll to top on open.\n   */\n  forceTop: true,\n  /**\n   * Allow the offcanvas to be sticky while open. Does nothing if Sass option `$maincontent-prevent-scroll === true`.\n   * Performance in Safari OSX/iOS is not great.\n   */\n  // isSticky: false,\n  /**\n   * Allow the offcanvas to remain open for certain breakpoints. Can be used with `isSticky`.\n   * @option\n   * @example false\n   */\n  isRevealed: false,\n  /**\n   * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class @`revealClass`.\n   * @option\n   * @example reveal-for-large\n   */\n  revealOn: null,\n  /**\n   * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\n   * @option\n   * @example true\n   */\n  autoFocus: true,\n  /**\n   * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\n   * @option\n   * TODO improve the regex testing for this.\n   * @example reveal-for-large\n   */\n  revealClass: 'reveal-for-'\n};\n\n/**\n * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\n * @function\n * @private\n */\nOffCanvas.prototype._init = function() {\n  var id = this.$element.attr('id');\n\n  this.$element.attr('aria-hidden', 'true');\n\n  // Find triggers that affect this element and add aria-expanded to them\n  $(document)\n    .find('[data-open=\"'+id+'\"], [data-close=\"'+id+'\"], [data-toggle=\"'+id+'\"]')\n    .attr('aria-expanded', 'false')\n    .attr('aria-controls', id);\n\n  // Add a close trigger over the body if necessary\n  if (this.options.closeOnClick){\n    if($('.js-off-canvas-exit').length){\n      this.$exiter = $('.js-off-canvas-exit');\n    }else{\n      var exiter = document.createElement('div');\n      exiter.setAttribute('class', 'js-off-canvas-exit');\n      $('[data-off-canvas-content]').append(exiter);\n\n      this.$exiter = $(exiter);\n    }\n  }\n\n  this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\n\n  if(this.options.isRevealed){\n    this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\n    this._setMQChecker();\n  }\n  if(!this.options.transitionTime){\n    this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas-wrapper]')[0]).transitionDuration) * 1000;\n  }\n};\n\n/**\n * Adds event handlers to the off-canvas wrapper and the exit overlay.\n * @function\n * @private\n */\nOffCanvas.prototype._events = function() {\n  this.$element.on({\n    'open.zf.trigger': this.open.bind(this),\n    'close.zf.trigger': this.close.bind(this),\n    'toggle.zf.trigger': this.toggle.bind(this),\n    'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\n  });\n\n  if (this.$exiter.length) {\n    var _this = this;\n    this.$exiter.on({'click.zf.offcanvas': this.close.bind(this)});\n  }\n};\n/**\n * Applies event listener for elements that will reveal at certain breakpoints.\n * @private\n */\nOffCanvas.prototype._setMQChecker = function(){\n  var _this = this;\n\n  $(window).on('changed.zf.mediaquery', function(){\n    if(Foundation.MediaQuery.atLeast(_this.options.revealOn)){\n      _this.reveal(true);\n    }else{\n      _this.reveal(false);\n    }\n  }).one('load.zf.offcanvas', function(){\n    if(Foundation.MediaQuery.atLeast(_this.options.revealOn)){\n      _this.reveal(true);\n    }\n  });\n};\n/**\n * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\n * @param {Boolean} isRevealed - true if element should be revealed.\n * @function\n */\nOffCanvas.prototype.reveal = function(isRevealed){\n  var $closer = this.$element.find('[data-close]');\n  if(isRevealed){\n    // if(!this.options.forceTop){\n    //   var scrollPos = parseInt(window.pageYOffset);\n    //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n    // }\n    // if(this.options.isSticky){ this._stick(); }\n    if($closer.length){ $closer.hide(); }\n  }else{\n    // if(this.options.isSticky || !this.options.forceTop){\n    //   this.$element[0].style.transform = '';\n    //   $(window).off('scroll.zf.offcanvas');\n    // }\n    if($closer.length){\n      $closer.show();\n    }\n  }\n};\n\n/**\n * Opens the off-canvas menu.\n * @function\n * @param {Object} event - Event object passed from listener.\n * @param {jQuery} trigger - element that triggered the off-canvas to open.\n * @fires OffCanvas#opened\n */\nOffCanvas.prototype.open = function(event, trigger) {\n  if (this.$element.hasClass('is-open')){ return; }\n  var _this = this,\n      $body = $(document.body);\n  $('body').scrollTop(0);\n  // window.pageYOffset = 0;\n\n  // if(!this.options.forceTop){\n  //   var scrollPos = parseInt(window.pageYOffset);\n  //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n  //   if(this.$exiter.length){\n  //     this.$exiter[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n  //   }\n  // }\n  /**\n   * Fires when the off-canvas menu opens.\n   * @event OffCanvas#opened\n   */\n  Foundation.Move(this.options.transitionTime, this.$element, function(){\n    $('[data-off-canvas-wrapper]').addClass('is-off-canvas-open is-open-'+ _this.options.position);\n\n    _this.$element\n      .addClass('is-open')\n      .attr('aria-hidden', 'false')\n      .trigger('opened.zf.offcanvas');\n\n    // if(_this.options.isSticky){\n    //   _this._stick();\n    // }\n  });\n  if(trigger){\n    this.$lastTrigger = trigger.attr('aria-expanded', 'true');\n  }\n  if(this.options.autoFocus){\n    this.$element.one('finished.zf.animate', function(){\n      _this.$element.find('a, button').eq(0).focus();\n    });\n  }\n};\n/**\n * Allows the offcanvas to appear sticky utilizing translate properties.\n * @private\n */\n// OffCanvas.prototype._stick = function(){\n//   var elStyle = this.$element[0].style;\n//\n//   if(this.options.closeOnClick){\n//     var exitStyle = this.$exiter[0].style;\n//   }\n//\n//   $(window).on('scroll.zf.offcanvas', function(e){\n//     console.log(e);\n//     var pageY = window.pageYOffset;\n//     elStyle.transform = 'translate(0,' + pageY + 'px)';\n//     if(exitStyle !== undefined){ exitStyle.transform = 'translate(0,' + pageY + 'px)'; }\n//   });\n//   // this.$element.trigger('stuck.zf.offcanvas');\n// };\n/**\n * Closes the off-canvas menu.\n * @function\n * @fires OffCanvas#closed\n */\nOffCanvas.prototype.close = function() {\n  if(!this.$element.hasClass('is-open')){ return; }\n\n  var _this = this;\n\n   Foundation.Move(this.options.transitionTime, this.$element, function(){\n    $('[data-off-canvas-wrapper]').removeClass('is-off-canvas-open is-open-'+_this.options.position);\n\n    _this.$element.removeClass('is-open');\n    // Foundation._reflow();\n  });\n  this.$element.attr('aria-hidden', 'true')\n    /**\n     * Fires when the off-canvas menu opens.\n     * @event OffCanvas#closed\n     */\n      .trigger('closed.zf.offcanvas');\n  // if(_this.options.isSticky || !_this.options.forceTop){\n  //   setTimeout(function(){\n  //     _this.$element[0].style.transform = '';\n  //     $(window).off('scroll.zf.offcanvas');\n  //   }, this.options.transitionTime);\n  // }\n\n  this.$lastTrigger.attr('aria-expanded', 'false');\n};\n\n/**\n * Toggles the off-canvas menu open or closed.\n * @function\n * @param {Object} event - Event object passed from listener.\n * @param {jQuery} trigger - element that triggered the off-canvas to open.\n */\nOffCanvas.prototype.toggle = function(event, trigger) {\n  if (this.$element.hasClass('is-open')) {\n    this.close(event, trigger);\n  }\n  else {\n    this.open(event, trigger);\n  }\n};\n\n/**\n * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\n * @function\n * @private\n */\nOffCanvas.prototype._handleKeyboard = function(event) {\n  if (event.which !== 27) return;\n\n  event.stopPropagation();\n  event.preventDefault();\n  this.close();\n  this.$lastTrigger.focus();\n};\n/**\n * Destroys the offcanvas plugin.\n * @function\n */\nOffCanvas.prototype.destroy = function(){\n  //TODO make this...\n};\n\nFoundation.plugin(OffCanvas, 'OffCanvas');\n\n}(jQuery, Foundation);\n"]},"hash":"ca804ffab71f9f01bb5f5eb8f2e3521ddf2d724d"}
