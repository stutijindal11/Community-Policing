{"metadata":{"usedHelpers":["typeof"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/modernizr/test/qunit/qunit.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/modernizr/test/qunit/qunit.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/modernizr/test/qunit/qunit.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/modernizr/test/qunit/qunit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"qunit"},"ignored":false,"code":"var _typeof;module.import(\"babel-runtime/helpers/typeof\",{\"default\":function(v){_typeof=v}});\n/**\n * QUnit v1.9.0 - A JavaScript Unit Testing Framework\n *\n * http://docs.jquery.com/QUnit\n *\n * Copyright (c) 2012 John Resig, JÃ¶rn Zaefferer\n * Dual licensed under the MIT (MIT-LICENSE.txt)\n * or GPL (GPL-LICENSE.txt) licenses.\n */\n\n(function (window) {\n\n\tvar QUnit,\n\t    config,\n\t    onErrorFnPrev,\n\t    testId = 0,\n\t    fileName = (sourceFromStacktrace(0) || \"\").replace(/(:\\d+)+\\)?/, \"\").replace(/.+\\//, \"\"),\n\t    toString = Object.prototype.toString,\n\t    hasOwn = Object.prototype.hasOwnProperty,\n\t    defined = {\n\t\tsetTimeout: typeof window.setTimeout !== \"undefined\",\n\t\tsessionStorage: function () {\n\t\t\tvar x = \"qunit-test-string\";\n\t\t\ttry {\n\t\t\t\tsessionStorage.setItem(x, x);\n\t\t\t\tsessionStorage.removeItem(x);\n\t\t\t\treturn true;\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}()\n\t};\n\n\tfunction Test(settings) {\n\t\textend(this, settings);\n\t\tthis.assertions = [];\n\t\tthis.testNumber = ++Test.count;\n\t}\n\n\tTest.count = 0;\n\n\tTest.prototype = {\n\t\tinit: function () {\n\t\t\tfunction init() {\n\t\t\t\tvar a,\n\t\t\t\t    b,\n\t\t\t\t    li,\n\t\t\t\t    tests = id(\"qunit-tests\");\n\n\t\t\t\tif (tests) {\n\t\t\t\t\tb = document.createElement(\"strong\");\n\t\t\t\t\tb.innerHTML = this.name;\n\n\t\t\t\t\t// `a` initialized at top of scope\n\t\t\t\t\ta = document.createElement(\"a\");\n\t\t\t\t\ta.innerHTML = \"Rerun\";\n\t\t\t\t\ta.href = QUnit.url({ testNumber: this.testNumber });\n\n\t\t\t\t\tli = document.createElement(\"li\");\n\t\t\t\t\tli.appendChild(b);\n\t\t\t\t\tli.appendChild(a);\n\t\t\t\t\tli.className = \"running\";\n\t\t\t\t\tli.id = this.id = \"qunit-test-output\" + testId++;\n\n\t\t\t\t\ttests.appendChild(li);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn init;\n\t\t}(),\n\t\tsetup: function () {\n\t\t\tfunction setup() {\n\t\t\t\tif (this.module !== config.previousModule) {\n\t\t\t\t\tif (config.previousModule) {\n\t\t\t\t\t\trunLoggingCallbacks(\"moduleDone\", QUnit, {\n\t\t\t\t\t\t\tname: config.previousModule,\n\t\t\t\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\t\t\t\ttotal: config.moduleStats.all\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconfig.previousModule = this.module;\n\t\t\t\t\tconfig.moduleStats = { all: 0, bad: 0 };\n\t\t\t\t\trunLoggingCallbacks(\"moduleStart\", QUnit, {\n\t\t\t\t\t\tname: this.module\n\t\t\t\t\t});\n\t\t\t\t} else if (config.autorun) {\n\t\t\t\t\trunLoggingCallbacks(\"moduleStart\", QUnit, {\n\t\t\t\t\t\tname: this.module\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconfig.current = this;\n\n\t\t\t\tthis.testEnvironment = extend({\n\t\t\t\t\tsetup: function () {\n\t\t\t\t\t\tfunction setup() {}\n\n\t\t\t\t\t\treturn setup;\n\t\t\t\t\t}(),\n\t\t\t\t\tteardown: function () {\n\t\t\t\t\t\tfunction teardown() {}\n\n\t\t\t\t\t\treturn teardown;\n\t\t\t\t\t}()\n\t\t\t\t}, this.moduleTestEnvironment);\n\n\t\t\t\trunLoggingCallbacks(\"testStart\", QUnit, {\n\t\t\t\t\tname: this.testName,\n\t\t\t\t\tmodule: this.module\n\t\t\t\t});\n\n\t\t\t\t// allow utility functions to access the current test environment\n\t\t\t\t// TODO why??\n\t\t\t\tQUnit.current_testEnvironment = this.testEnvironment;\n\n\t\t\t\tif (!config.pollution) {\n\t\t\t\t\tsaveGlobal();\n\t\t\t\t}\n\t\t\t\tif (config.notrycatch) {\n\t\t\t\t\tthis.testEnvironment.setup.call(this.testEnvironment);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tthis.testEnvironment.setup.call(this.testEnvironment);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tQUnit.pushFailure(\"Setup failed on \" + this.testName + \": \" + e.message, extractStacktrace(e, 1));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn setup;\n\t\t}(),\n\t\trun: function () {\n\t\t\tfunction run() {\n\t\t\t\tconfig.current = this;\n\n\t\t\t\tvar running = id(\"qunit-testresult\");\n\n\t\t\t\tif (running) {\n\t\t\t\t\trunning.innerHTML = \"Running: <br/>\" + this.name;\n\t\t\t\t}\n\n\t\t\t\tif (this.async) {\n\t\t\t\t\tQUnit.stop();\n\t\t\t\t}\n\n\t\t\t\tif (config.notrycatch) {\n\t\t\t\t\tthis.callback.call(this.testEnvironment, QUnit.assert);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.callback.call(this.testEnvironment, QUnit.assert);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tQUnit.pushFailure(\"Died on test #\" + (this.assertions.length + 1) + \" \" + this.stack + \": \" + e.message, extractStacktrace(e, 0));\n\t\t\t\t\t// else next test will carry the responsibility\n\t\t\t\t\tsaveGlobal();\n\n\t\t\t\t\t// Restart the tests if they're blocking\n\t\t\t\t\tif (config.blocking) {\n\t\t\t\t\t\tQUnit.start();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn run;\n\t\t}(),\n\t\tteardown: function () {\n\t\t\tfunction teardown() {\n\t\t\t\tconfig.current = this;\n\t\t\t\tif (config.notrycatch) {\n\t\t\t\t\tthis.testEnvironment.teardown.call(this.testEnvironment);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.testEnvironment.teardown.call(this.testEnvironment);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tQUnit.pushFailure(\"Teardown failed on \" + this.testName + \": \" + e.message, extractStacktrace(e, 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcheckPollution();\n\t\t\t}\n\n\t\t\treturn teardown;\n\t\t}(),\n\t\tfinish: function () {\n\t\t\tfunction finish() {\n\t\t\t\tconfig.current = this;\n\t\t\t\tif (config.requireExpects && this.expected == null) {\n\t\t\t\t\tQUnit.pushFailure(\"Expected number of assertions to be defined, but expect() was not called.\", this.stack);\n\t\t\t\t} else if (this.expected != null && this.expected != this.assertions.length) {\n\t\t\t\t\tQUnit.pushFailure(\"Expected \" + this.expected + \" assertions, but \" + this.assertions.length + \" were run\", this.stack);\n\t\t\t\t} else if (this.expected == null && !this.assertions.length) {\n\t\t\t\t\tQUnit.pushFailure(\"Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.\", this.stack);\n\t\t\t\t}\n\n\t\t\t\tvar assertion,\n\t\t\t\t    a,\n\t\t\t\t    b,\n\t\t\t\t    i,\n\t\t\t\t    li,\n\t\t\t\t    ol,\n\t\t\t\t    test = this,\n\t\t\t\t    good = 0,\n\t\t\t\t    bad = 0,\n\t\t\t\t    tests = id(\"qunit-tests\");\n\n\t\t\t\tconfig.stats.all += this.assertions.length;\n\t\t\t\tconfig.moduleStats.all += this.assertions.length;\n\n\t\t\t\tif (tests) {\n\t\t\t\t\tol = document.createElement(\"ol\");\n\n\t\t\t\t\tfor (i = 0; i < this.assertions.length; i++) {\n\t\t\t\t\t\tassertion = this.assertions[i];\n\n\t\t\t\t\t\tli = document.createElement(\"li\");\n\t\t\t\t\t\tli.className = assertion.result ? \"pass\" : \"fail\";\n\t\t\t\t\t\tli.innerHTML = assertion.message || (assertion.result ? \"okay\" : \"failed\");\n\t\t\t\t\t\tol.appendChild(li);\n\n\t\t\t\t\t\tif (assertion.result) {\n\t\t\t\t\t\t\tgood++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbad++;\n\t\t\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// store result when possible\n\t\t\t\t\tif (QUnit.config.reorder && defined.sessionStorage) {\n\t\t\t\t\t\tif (bad) {\n\t\t\t\t\t\t\tsessionStorage.setItem(\"qunit-test-\" + this.module + \"-\" + this.testName, bad);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsessionStorage.removeItem(\"qunit-test-\" + this.module + \"-\" + this.testName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bad === 0) {\n\t\t\t\t\t\tol.style.display = \"none\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// `b` initialized at top of scope\n\t\t\t\t\tb = document.createElement(\"strong\");\n\t\t\t\t\tb.innerHTML = this.name + \" <b class='counts'>(<b class='failed'>\" + bad + \"</b>, <b class='passed'>\" + good + \"</b>, \" + this.assertions.length + \")</b>\";\n\n\t\t\t\t\taddEvent(b, \"click\", function () {\n\t\t\t\t\t\tvar next = b.nextSibling.nextSibling,\n\t\t\t\t\t\t    display = next.style.display;\n\t\t\t\t\t\tnext.style.display = display === \"none\" ? \"block\" : \"none\";\n\t\t\t\t\t});\n\n\t\t\t\t\taddEvent(b, \"dblclick\", function (e) {\n\t\t\t\t\t\tvar target = e && e.target ? e.target : window.event.srcElement;\n\t\t\t\t\t\tif (target.nodeName.toLowerCase() == \"span\" || target.nodeName.toLowerCase() == \"b\") {\n\t\t\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (window.location && target.nodeName.toLowerCase() === \"strong\") {\n\t\t\t\t\t\t\twindow.location = QUnit.url({ testNumber: test.testNumber });\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// `li` initialized at top of scope\n\t\t\t\t\tli = id(this.id);\n\t\t\t\t\tli.className = bad ? \"fail\" : \"pass\";\n\t\t\t\t\tli.removeChild(li.firstChild);\n\t\t\t\t\ta = li.firstChild;\n\t\t\t\t\tli.appendChild(b);\n\t\t\t\t\tli.appendChild(a);\n\t\t\t\t\tli.appendChild(ol);\n\t\t\t\t} else {\n\t\t\t\t\tfor (i = 0; i < this.assertions.length; i++) {\n\t\t\t\t\t\tif (!this.assertions[i].result) {\n\t\t\t\t\t\t\tbad++;\n\t\t\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\trunLoggingCallbacks(\"testDone\", QUnit, {\n\t\t\t\t\tname: this.testName,\n\t\t\t\t\tmodule: this.module,\n\t\t\t\t\tfailed: bad,\n\t\t\t\t\tpassed: this.assertions.length - bad,\n\t\t\t\t\ttotal: this.assertions.length\n\t\t\t\t});\n\n\t\t\t\tQUnit.reset();\n\n\t\t\t\tconfig.current = undefined;\n\t\t\t}\n\n\t\t\treturn finish;\n\t\t}(),\n\n\t\tqueue: function () {\n\t\t\tfunction queue() {\n\t\t\t\tvar bad,\n\t\t\t\t    test = this;\n\n\t\t\t\tsynchronize(function () {\n\t\t\t\t\ttest.init();\n\t\t\t\t});\n\t\t\t\tfunction run() {\n\t\t\t\t\t// each of these can by async\n\t\t\t\t\tsynchronize(function () {\n\t\t\t\t\t\ttest.setup();\n\t\t\t\t\t});\n\t\t\t\t\tsynchronize(function () {\n\t\t\t\t\t\ttest.run();\n\t\t\t\t\t});\n\t\t\t\t\tsynchronize(function () {\n\t\t\t\t\t\ttest.teardown();\n\t\t\t\t\t});\n\t\t\t\t\tsynchronize(function () {\n\t\t\t\t\t\ttest.finish();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// `bad` initialized at top of scope\n\t\t\t\t// defer when previous test run passed, if storage is available\n\t\t\t\tbad = QUnit.config.reorder && defined.sessionStorage && +sessionStorage.getItem(\"qunit-test-\" + this.module + \"-\" + this.testName);\n\n\t\t\t\tif (bad) {\n\t\t\t\t\trun();\n\t\t\t\t} else {\n\t\t\t\t\tsynchronize(run, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn queue;\n\t\t}()\n\t};\n\n\t// Root QUnit object.\n\t// `QUnit` initialized at top of scope\n\tQUnit = {\n\n\t\t// call on start of module test to prepend name to all tests\n\t\tmodule: function () {\n\t\t\tfunction module(name, testEnvironment) {\n\t\t\t\tconfig.currentModule = name;\n\t\t\t\tconfig.currentModuleTestEnviroment = testEnvironment;\n\t\t\t}\n\n\t\t\treturn module;\n\t\t}(),\n\n\t\tasyncTest: function () {\n\t\t\tfunction asyncTest(testName, expected, callback) {\n\t\t\t\tif (arguments.length === 2) {\n\t\t\t\t\tcallback = expected;\n\t\t\t\t\texpected = null;\n\t\t\t\t}\n\n\t\t\t\tQUnit.test(testName, expected, callback, true);\n\t\t\t}\n\n\t\t\treturn asyncTest;\n\t\t}(),\n\n\t\ttest: function () {\n\t\t\tfunction test(testName, expected, callback, async) {\n\t\t\t\tvar test,\n\t\t\t\t    name = \"<span class='test-name'>\" + escapeInnerText(testName) + \"</span>\";\n\n\t\t\t\tif (arguments.length === 2) {\n\t\t\t\t\tcallback = expected;\n\t\t\t\t\texpected = null;\n\t\t\t\t}\n\n\t\t\t\tif (config.currentModule) {\n\t\t\t\t\tname = \"<span class='module-name'>\" + config.currentModule + \"</span>: \" + name;\n\t\t\t\t}\n\n\t\t\t\ttest = new Test({\n\t\t\t\t\tname: name,\n\t\t\t\t\ttestName: testName,\n\t\t\t\t\texpected: expected,\n\t\t\t\t\tasync: async,\n\t\t\t\t\tcallback: callback,\n\t\t\t\t\tmodule: config.currentModule,\n\t\t\t\t\tmoduleTestEnvironment: config.currentModuleTestEnviroment,\n\t\t\t\t\tstack: sourceFromStacktrace(2)\n\t\t\t\t});\n\n\t\t\t\tif (!validTest(test)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttest.queue();\n\t\t\t}\n\n\t\t\treturn test;\n\t\t}(),\n\n\t\t// Specify the number of expected assertions to gurantee that failed test (no assertions are run at all) don't slip through.\n\t\texpect: function () {\n\t\t\tfunction expect(asserts) {\n\t\t\t\tconfig.current.expected = asserts;\n\t\t\t}\n\n\t\t\treturn expect;\n\t\t}(),\n\n\t\tstart: function () {\n\t\t\tfunction start(count) {\n\t\t\t\tconfig.semaphore -= count || 1;\n\t\t\t\t// don't start until equal number of stop-calls\n\t\t\t\tif (config.semaphore > 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// ignore if start is called more often then stop\n\t\t\t\tif (config.semaphore < 0) {\n\t\t\t\t\tconfig.semaphore = 0;\n\t\t\t\t}\n\t\t\t\t// A slight delay, to avoid any current callbacks\n\t\t\t\tif (defined.setTimeout) {\n\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\tif (config.semaphore > 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (config.timeout) {\n\t\t\t\t\t\t\tclearTimeout(config.timeout);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconfig.blocking = false;\n\t\t\t\t\t\tprocess(true);\n\t\t\t\t\t}, 13);\n\t\t\t\t} else {\n\t\t\t\t\tconfig.blocking = false;\n\t\t\t\t\tprocess(true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn start;\n\t\t}(),\n\n\t\tstop: function () {\n\t\t\tfunction stop(count) {\n\t\t\t\tconfig.semaphore += count || 1;\n\t\t\t\tconfig.blocking = true;\n\n\t\t\t\tif (config.testTimeout && defined.setTimeout) {\n\t\t\t\t\tclearTimeout(config.timeout);\n\t\t\t\t\tconfig.timeout = window.setTimeout(function () {\n\t\t\t\t\t\tQUnit.ok(false, \"Test timed out\");\n\t\t\t\t\t\tconfig.semaphore = 1;\n\t\t\t\t\t\tQUnit.start();\n\t\t\t\t\t}, config.testTimeout);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stop;\n\t\t}()\n\t};\n\n\t// Asssert helpers\n\t// All of these must call either QUnit.push() or manually do:\n\t// - runLoggingCallbacks( \"log\", .. );\n\t// - config.current.assertions.push({ .. });\n\tQUnit.assert = {\n\t\t/**\n   * Asserts rough true-ish result.\n   * @name ok\n   * @function\n   * @example ok( \"asdfasdf\".length > 5, \"There must be at least 5 chars\" );\n   */\n\t\tok: function () {\n\t\t\tfunction ok(result, msg) {\n\t\t\t\tif (!config.current) {\n\t\t\t\t\tthrow new Error(\"ok() assertion outside test context, was \" + sourceFromStacktrace(2));\n\t\t\t\t}\n\t\t\t\tresult = !!result;\n\n\t\t\t\tvar source,\n\t\t\t\t    details = {\n\t\t\t\t\tresult: result,\n\t\t\t\t\tmessage: msg\n\t\t\t\t};\n\n\t\t\t\tmsg = escapeInnerText(msg || (result ? \"okay\" : \"failed\"));\n\t\t\t\tmsg = \"<span class='test-message'>\" + msg + \"</span>\";\n\n\t\t\t\tif (!result) {\n\t\t\t\t\tsource = sourceFromStacktrace(2);\n\t\t\t\t\tif (source) {\n\t\t\t\t\t\tdetails.source = source;\n\t\t\t\t\t\tmsg += \"<table><tr class='test-source'><th>Source: </th><td><pre>\" + escapeInnerText(source) + \"</pre></td></tr></table>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trunLoggingCallbacks(\"log\", QUnit, details);\n\t\t\t\tconfig.current.assertions.push({\n\t\t\t\t\tresult: result,\n\t\t\t\t\tmessage: msg\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn ok;\n\t\t}(),\n\n\t\t/**\n   * Assert that the first two arguments are equal, with an optional message.\n   * Prints out both actual and expected values.\n   * @name equal\n   * @function\n   * @example equal( format( \"Received {0} bytes.\", 2), \"Received 2 bytes.\", \"format() replaces {0} with next argument\" );\n   */\n\t\tequal: function () {\n\t\t\tfunction equal(actual, expected, message) {\n\t\t\t\tQUnit.push(expected == actual, actual, expected, message);\n\t\t\t}\n\n\t\t\treturn equal;\n\t\t}(),\n\n\t\t/**\n   * @name notEqual\n   * @function\n   */\n\t\tnotEqual: function () {\n\t\t\tfunction notEqual(actual, expected, message) {\n\t\t\t\tQUnit.push(expected != actual, actual, expected, message);\n\t\t\t}\n\n\t\t\treturn notEqual;\n\t\t}(),\n\n\t\t/**\n   * @name deepEqual\n   * @function\n   */\n\t\tdeepEqual: function () {\n\t\t\tfunction deepEqual(actual, expected, message) {\n\t\t\t\tQUnit.push(QUnit.equiv(actual, expected), actual, expected, message);\n\t\t\t}\n\n\t\t\treturn deepEqual;\n\t\t}(),\n\n\t\t/**\n   * @name notDeepEqual\n   * @function\n   */\n\t\tnotDeepEqual: function () {\n\t\t\tfunction notDeepEqual(actual, expected, message) {\n\t\t\t\tQUnit.push(!QUnit.equiv(actual, expected), actual, expected, message);\n\t\t\t}\n\n\t\t\treturn notDeepEqual;\n\t\t}(),\n\n\t\t/**\n   * @name strictEqual\n   * @function\n   */\n\t\tstrictEqual: function () {\n\t\t\tfunction strictEqual(actual, expected, message) {\n\t\t\t\tQUnit.push(expected === actual, actual, expected, message);\n\t\t\t}\n\n\t\t\treturn strictEqual;\n\t\t}(),\n\n\t\t/**\n   * @name notStrictEqual\n   * @function\n   */\n\t\tnotStrictEqual: function () {\n\t\t\tfunction notStrictEqual(actual, expected, message) {\n\t\t\t\tQUnit.push(expected !== actual, actual, expected, message);\n\t\t\t}\n\n\t\t\treturn notStrictEqual;\n\t\t}(),\n\n\t\tthrows: function () {\n\t\t\tfunction throws(block, expected, message) {\n\t\t\t\tvar actual,\n\t\t\t\t    ok = false;\n\n\t\t\t\t// 'expected' is optional\n\t\t\t\tif (typeof expected === \"string\") {\n\t\t\t\t\tmessage = expected;\n\t\t\t\t\texpected = null;\n\t\t\t\t}\n\n\t\t\t\tconfig.current.ignoreGlobalErrors = true;\n\t\t\t\ttry {\n\t\t\t\t\tblock.call(config.current.testEnvironment);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tactual = e;\n\t\t\t\t}\n\t\t\t\tconfig.current.ignoreGlobalErrors = false;\n\n\t\t\t\tif (actual) {\n\t\t\t\t\t// we don't want to validate thrown error\n\t\t\t\t\tif (!expected) {\n\t\t\t\t\t\tok = true;\n\t\t\t\t\t\t// expected is a regexp\n\t\t\t\t\t} else if (QUnit.objectType(expected) === \"regexp\") {\n\t\t\t\t\t\t\tok = expected.test(actual);\n\t\t\t\t\t\t\t// expected is a constructor\n\t\t\t\t\t\t} else if (actual instanceof expected) {\n\t\t\t\t\t\t\t\tok = true;\n\t\t\t\t\t\t\t\t// expected is a validation function which returns true is validation passed\n\t\t\t\t\t\t\t} else if (expected.call({}, actual) === true) {\n\t\t\t\t\t\t\t\t\tok = true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\tQUnit.push(ok, actual, null, message);\n\t\t\t\t} else {\n\t\t\t\t\tQUnit.pushFailure(message, null, 'No exception was thrown.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn throws;\n\t\t}()\n\t};\n\n\t/**\n  * @deprecate since 1.8.0\n  * Kept assertion helpers in root for backwards compatibility\n  */\n\textend(QUnit, QUnit.assert);\n\n\t/**\n  * @deprecated since 1.9.0\n  * Kept global \"raises()\" for backwards compatibility\n  */\n\tQUnit.raises = QUnit.assert.throws;\n\n\t/**\n  * @deprecated since 1.0.0, replaced with error pushes since 1.3.0\n  * Kept to avoid TypeErrors for undefined methods.\n  */\n\tQUnit.equals = function () {\n\t\tQUnit.push(false, false, false, \"QUnit.equals has been deprecated since 2009 (e88049a0), use QUnit.equal instead\");\n\t};\n\tQUnit.same = function () {\n\t\tQUnit.push(false, false, false, \"QUnit.same has been deprecated since 2009 (e88049a0), use QUnit.deepEqual instead\");\n\t};\n\n\t// We want access to the constructor's prototype\n\t(function () {\n\t\tfunction F() {}\n\t\tF.prototype = QUnit;\n\t\tQUnit = new F();\n\t\t// Make F QUnit's constructor so that we can add to the prototype later\n\t\tQUnit.constructor = F;\n\t})();\n\n\t/**\n  * Config object: Maintain internal state\n  * Later exposed as QUnit.config\n  * `config` initialized at top of scope\n  */\n\tconfig = {\n\t\t// The queue of tests to run\n\t\tqueue: [],\n\n\t\t// block until document ready\n\t\tblocking: true,\n\n\t\t// when enabled, show only failing tests\n\t\t// gets persisted through sessionStorage and can be changed in UI via checkbox\n\t\thidepassed: false,\n\n\t\t// by default, run previously failed tests first\n\t\t// very useful in combination with \"Hide passed tests\" checked\n\t\treorder: true,\n\n\t\t// by default, modify document.title when suite is done\n\t\taltertitle: true,\n\n\t\t// when enabled, all tests must call expect()\n\t\trequireExpects: false,\n\n\t\t// add checkboxes that are persisted in the query-string\n\t\t// when enabled, the id is set to `true` as a `QUnit.config` property\n\t\turlConfig: [{\n\t\t\tid: \"noglobals\",\n\t\t\tlabel: \"Check for Globals\",\n\t\t\ttooltip: \"Enabling this will test if any test introduces new properties on the `window` object. Stored as query-strings.\"\n\t\t}, {\n\t\t\tid: \"notrycatch\",\n\t\t\tlabel: \"No try-catch\",\n\t\t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings.\"\n\t\t}],\n\n\t\t// logging callback queues\n\t\tbegin: [],\n\t\tdone: [],\n\t\tlog: [],\n\t\ttestStart: [],\n\t\ttestDone: [],\n\t\tmoduleStart: [],\n\t\tmoduleDone: []\n\t};\n\n\t// Initialize more QUnit.config and QUnit.urlParams\n\t(function () {\n\t\tvar i,\n\t\t    location = window.location || { search: \"\", protocol: \"file:\" },\n\t\t    params = location.search.slice(1).split(\"&\"),\n\t\t    length = params.length,\n\t\t    urlParams = {},\n\t\t    current;\n\n\t\tif (params[0]) {\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tcurrent = params[i].split(\"=\");\n\t\t\t\tcurrent[0] = decodeURIComponent(current[0]);\n\t\t\t\t// allow just a key to turn on a flag, e.g., test.html?noglobals\n\t\t\t\tcurrent[1] = current[1] ? decodeURIComponent(current[1]) : true;\n\t\t\t\turlParams[current[0]] = current[1];\n\t\t\t}\n\t\t}\n\n\t\tQUnit.urlParams = urlParams;\n\n\t\t// String search anywhere in moduleName+testName\n\t\tconfig.filter = urlParams.filter;\n\n\t\t// Exact match of the module name\n\t\tconfig.module = urlParams.module;\n\n\t\tconfig.testNumber = parseInt(urlParams.testNumber, 10) || null;\n\n\t\t// Figure out if we're running the tests from a server or not\n\t\tQUnit.isLocal = location.protocol === \"file:\";\n\t})();\n\n\t// Export global variables, unless an 'exports' object exists,\n\t// in that case we assume we're in CommonJS (dealt with on the bottom of the script)\n\tif (typeof exports === \"undefined\") {\n\t\textend(window, QUnit);\n\n\t\t// Expose QUnit object\n\t\twindow.QUnit = QUnit;\n\t}\n\n\t// Extend QUnit object,\n\t// these after set here because they should not be exposed as global functions\n\textend(QUnit, {\n\t\tconfig: config,\n\n\t\t// Initialize the configuration options\n\t\tinit: function () {\n\t\t\tfunction init() {\n\t\t\t\textend(config, {\n\t\t\t\t\tstats: { all: 0, bad: 0 },\n\t\t\t\t\tmoduleStats: { all: 0, bad: 0 },\n\t\t\t\t\tstarted: +new Date(),\n\t\t\t\t\tupdateRate: 1000,\n\t\t\t\t\tblocking: false,\n\t\t\t\t\tautostart: true,\n\t\t\t\t\tautorun: false,\n\t\t\t\t\tfilter: \"\",\n\t\t\t\t\tqueue: [],\n\t\t\t\t\tsemaphore: 0\n\t\t\t\t});\n\n\t\t\t\tvar tests,\n\t\t\t\t    banner,\n\t\t\t\t    result,\n\t\t\t\t    qunit = id(\"qunit\");\n\n\t\t\t\tif (qunit) {\n\t\t\t\t\tqunit.innerHTML = \"<h1 id='qunit-header'>\" + escapeInnerText(document.title) + \"</h1>\" + \"<h2 id='qunit-banner'></h2>\" + \"<div id='qunit-testrunner-toolbar'></div>\" + \"<h2 id='qunit-userAgent'></h2>\" + \"<ol id='qunit-tests'></ol>\";\n\t\t\t\t}\n\n\t\t\t\ttests = id(\"qunit-tests\");\n\t\t\t\tbanner = id(\"qunit-banner\");\n\t\t\t\tresult = id(\"qunit-testresult\");\n\n\t\t\t\tif (tests) {\n\t\t\t\t\ttests.innerHTML = \"\";\n\t\t\t\t}\n\n\t\t\t\tif (banner) {\n\t\t\t\t\tbanner.className = \"\";\n\t\t\t\t}\n\n\t\t\t\tif (result) {\n\t\t\t\t\tresult.parentNode.removeChild(result);\n\t\t\t\t}\n\n\t\t\t\tif (tests) {\n\t\t\t\t\tresult = document.createElement(\"p\");\n\t\t\t\t\tresult.id = \"qunit-testresult\";\n\t\t\t\t\tresult.className = \"result\";\n\t\t\t\t\ttests.parentNode.insertBefore(result, tests);\n\t\t\t\t\tresult.innerHTML = \"Running...<br/>&nbsp;\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn init;\n\t\t}(),\n\n\t\t// Resets the test setup. Useful for tests that modify the DOM.\n\t\t// If jQuery is available, uses jQuery's html(), otherwise just innerHTML.\n\t\treset: function () {\n\t\t\tfunction reset() {\n\t\t\t\tvar fixture;\n\n\t\t\t\tif (window.jQuery) {\n\t\t\t\t\tjQuery(\"#qunit-fixture\").html(config.fixture);\n\t\t\t\t} else {\n\t\t\t\t\tfixture = id(\"qunit-fixture\");\n\t\t\t\t\tif (fixture) {\n\t\t\t\t\t\tfixture.innerHTML = config.fixture;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn reset;\n\t\t}(),\n\n\t\t// Trigger an event on an element.\n\t\t// @example triggerEvent( document.body, \"click\" );\n\t\ttriggerEvent: function () {\n\t\t\tfunction triggerEvent(elem, type, event) {\n\t\t\t\tif (document.createEvent) {\n\t\t\t\t\tevent = document.createEvent(\"MouseEvents\");\n\t\t\t\t\tevent.initMouseEvent(type, true, true, elem.ownerDocument.defaultView, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\n\t\t\t\t\telem.dispatchEvent(event);\n\t\t\t\t} else if (elem.fireEvent) {\n\t\t\t\t\telem.fireEvent(\"on\" + type);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn triggerEvent;\n\t\t}(),\n\n\t\t// Safe object type checking\n\t\tis: function () {\n\t\t\tfunction is(type, obj) {\n\t\t\t\treturn QUnit.objectType(obj) == type;\n\t\t\t}\n\n\t\t\treturn is;\n\t\t}(),\n\n\t\tobjectType: function () {\n\t\t\tfunction objectType(obj) {\n\t\t\t\tif (typeof obj === \"undefined\") {\n\t\t\t\t\treturn \"undefined\";\n\t\t\t\t\t// consider: typeof null === object\n\t\t\t\t}\n\t\t\t\tif (obj === null) {\n\t\t\t\t\treturn \"null\";\n\t\t\t\t}\n\n\t\t\t\tvar type = toString.call(obj).match(/^\\[object\\s(.*)\\]$/)[1] || \"\";\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase \"Number\":\n\t\t\t\t\t\tif (isNaN(obj)) {\n\t\t\t\t\t\t\treturn \"nan\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn \"number\";\n\t\t\t\t\tcase \"String\":\n\t\t\t\t\tcase \"Boolean\":\n\t\t\t\t\tcase \"Array\":\n\t\t\t\t\tcase \"Date\":\n\t\t\t\t\tcase \"RegExp\":\n\t\t\t\t\tcase \"Function\":\n\t\t\t\t\t\treturn type.toLowerCase();\n\t\t\t\t}\n\t\t\t\tif ((typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) === \"object\") {\n\t\t\t\t\treturn \"object\";\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn objectType;\n\t\t}(),\n\n\t\tpush: function () {\n\t\t\tfunction push(result, actual, expected, message) {\n\t\t\t\tif (!config.current) {\n\t\t\t\t\tthrow new Error(\"assertion outside test context, was \" + sourceFromStacktrace());\n\t\t\t\t}\n\n\t\t\t\tvar output,\n\t\t\t\t    source,\n\t\t\t\t    details = {\n\t\t\t\t\tresult: result,\n\t\t\t\t\tmessage: message,\n\t\t\t\t\tactual: actual,\n\t\t\t\t\texpected: expected\n\t\t\t\t};\n\n\t\t\t\tmessage = escapeInnerText(message) || (result ? \"okay\" : \"failed\");\n\t\t\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\t\t\toutput = message;\n\n\t\t\t\tif (!result) {\n\t\t\t\t\texpected = escapeInnerText(QUnit.jsDump.parse(expected));\n\t\t\t\t\tactual = escapeInnerText(QUnit.jsDump.parse(actual));\n\t\t\t\t\toutput += \"<table><tr class='test-expected'><th>Expected: </th><td><pre>\" + expected + \"</pre></td></tr>\";\n\n\t\t\t\t\tif (actual != expected) {\n\t\t\t\t\t\toutput += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + actual + \"</pre></td></tr>\";\n\t\t\t\t\t\toutput += \"<tr class='test-diff'><th>Diff: </th><td><pre>\" + QUnit.diff(expected, actual) + \"</pre></td></tr>\";\n\t\t\t\t\t}\n\n\t\t\t\t\tsource = sourceFromStacktrace();\n\n\t\t\t\t\tif (source) {\n\t\t\t\t\t\tdetails.source = source;\n\t\t\t\t\t\toutput += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeInnerText(source) + \"</pre></td></tr>\";\n\t\t\t\t\t}\n\n\t\t\t\t\toutput += \"</table>\";\n\t\t\t\t}\n\n\t\t\t\trunLoggingCallbacks(\"log\", QUnit, details);\n\n\t\t\t\tconfig.current.assertions.push({\n\t\t\t\t\tresult: !!result,\n\t\t\t\t\tmessage: output\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn push;\n\t\t}(),\n\n\t\tpushFailure: function () {\n\t\t\tfunction pushFailure(message, source, actual) {\n\t\t\t\tif (!config.current) {\n\t\t\t\t\tthrow new Error(\"pushFailure() assertion outside test context, was \" + sourceFromStacktrace(2));\n\t\t\t\t}\n\n\t\t\t\tvar output,\n\t\t\t\t    details = {\n\t\t\t\t\tresult: false,\n\t\t\t\t\tmessage: message\n\t\t\t\t};\n\n\t\t\t\tmessage = escapeInnerText(message) || \"error\";\n\t\t\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\t\t\toutput = message;\n\n\t\t\t\toutput += \"<table>\";\n\n\t\t\t\tif (actual) {\n\t\t\t\t\toutput += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + escapeInnerText(actual) + \"</pre></td></tr>\";\n\t\t\t\t}\n\n\t\t\t\tif (source) {\n\t\t\t\t\tdetails.source = source;\n\t\t\t\t\toutput += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeInnerText(source) + \"</pre></td></tr>\";\n\t\t\t\t}\n\n\t\t\t\toutput += \"</table>\";\n\n\t\t\t\trunLoggingCallbacks(\"log\", QUnit, details);\n\n\t\t\t\tconfig.current.assertions.push({\n\t\t\t\t\tresult: false,\n\t\t\t\t\tmessage: output\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn pushFailure;\n\t\t}(),\n\n\t\turl: function () {\n\t\t\tfunction url(params) {\n\t\t\t\tparams = extend(extend({}, QUnit.urlParams), params);\n\t\t\t\tvar key,\n\t\t\t\t    querystring = \"?\";\n\n\t\t\t\tfor (key in meteorBabelHelpers.sanitizeForInObject(params)) {\n\t\t\t\t\tif (!hasOwn.call(params, key)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tquerystring += encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]) + \"&\";\n\t\t\t\t}\n\t\t\t\treturn window.location.pathname + querystring.slice(0, -1);\n\t\t\t}\n\n\t\t\treturn url;\n\t\t}(),\n\n\t\textend: extend,\n\t\tid: id,\n\t\taddEvent: addEvent\n\t\t// load, equiv, jsDump, diff: Attached later\n\t});\n\n\t/**\n  * @deprecated: Created for backwards compatibility with test runner that set the hook function\n  * into QUnit.{hook}, instead of invoking it and passing the hook function.\n  * QUnit.constructor is set to the empty F() above so that we can add to it's prototype here.\n  * Doing this allows us to tell if the following methods have been overwritten on the actual\n  * QUnit object.\n  */\n\textend(QUnit.constructor.prototype, {\n\n\t\t// Logging callbacks; all receive a single argument with the listed properties\n\t\t// run test/logs.html for any related changes\n\t\tbegin: registerLoggingCallback(\"begin\"),\n\n\t\t// done: { failed, passed, total, runtime }\n\t\tdone: registerLoggingCallback(\"done\"),\n\n\t\t// log: { result, actual, expected, message }\n\t\tlog: registerLoggingCallback(\"log\"),\n\n\t\t// testStart: { name }\n\t\ttestStart: registerLoggingCallback(\"testStart\"),\n\n\t\t// testDone: { name, failed, passed, total }\n\t\ttestDone: registerLoggingCallback(\"testDone\"),\n\n\t\t// moduleStart: { name }\n\t\tmoduleStart: registerLoggingCallback(\"moduleStart\"),\n\n\t\t// moduleDone: { name, failed, passed, total }\n\t\tmoduleDone: registerLoggingCallback(\"moduleDone\")\n\t});\n\n\tif (typeof document === \"undefined\" || document.readyState === \"complete\") {\n\t\tconfig.autorun = true;\n\t}\n\n\tQUnit.load = function () {\n\t\trunLoggingCallbacks(\"begin\", QUnit, {});\n\n\t\t// Initialize the config, saving the execution queue\n\t\tvar banner,\n\t\t    filter,\n\t\t    i,\n\t\t    label,\n\t\t    len,\n\t\t    main,\n\t\t    ol,\n\t\t    toolbar,\n\t\t    userAgent,\n\t\t    val,\n\t\t    urlConfigCheckboxes,\n\t\t    urlConfigHtml = \"\",\n\t\t    oldconfig = extend({}, config);\n\n\t\tQUnit.init();\n\t\textend(config, oldconfig);\n\n\t\tconfig.blocking = false;\n\n\t\tlen = config.urlConfig.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tval = config.urlConfig[i];\n\t\t\tif (typeof val === \"string\") {\n\t\t\t\tval = {\n\t\t\t\t\tid: val,\n\t\t\t\t\tlabel: val,\n\t\t\t\t\ttooltip: \"[no tooltip available]\"\n\t\t\t\t};\n\t\t\t}\n\t\t\tconfig[val.id] = QUnit.urlParams[val.id];\n\t\t\turlConfigHtml += \"<input id='qunit-urlconfig-\" + val.id + \"' name='\" + val.id + \"' type='checkbox'\" + (config[val.id] ? \" checked='checked'\" : \"\") + \" title='\" + val.tooltip + \"'><label for='qunit-urlconfig-\" + val.id + \"' title='\" + val.tooltip + \"'>\" + val.label + \"</label>\";\n\t\t}\n\n\t\t// `userAgent` initialized at top of scope\n\t\tuserAgent = id(\"qunit-userAgent\");\n\t\tif (userAgent) {\n\t\t\tuserAgent.innerHTML = navigator.userAgent;\n\t\t}\n\n\t\t// `banner` initialized at top of scope\n\t\tbanner = id(\"qunit-header\");\n\t\tif (banner) {\n\t\t\tbanner.innerHTML = \"<a href='\" + QUnit.url({ filter: undefined, module: undefined, testNumber: undefined }) + \"'>\" + banner.innerHTML + \"</a> \";\n\t\t}\n\n\t\t// `toolbar` initialized at top of scope\n\t\ttoolbar = id(\"qunit-testrunner-toolbar\");\n\t\tif (toolbar) {\n\t\t\t// `filter` initialized at top of scope\n\t\t\tfilter = document.createElement(\"input\");\n\t\t\tfilter.type = \"checkbox\";\n\t\t\tfilter.id = \"qunit-filter-pass\";\n\n\t\t\taddEvent(filter, \"click\", function () {\n\t\t\t\tvar tmp,\n\t\t\t\t    ol = document.getElementById(\"qunit-tests\");\n\n\t\t\t\tif (filter.checked) {\n\t\t\t\t\tol.className = ol.className + \" hidepass\";\n\t\t\t\t} else {\n\t\t\t\t\ttmp = \" \" + ol.className.replace(/[\\n\\t\\r]/g, \" \") + \" \";\n\t\t\t\t\tol.className = tmp.replace(/ hidepass /, \" \");\n\t\t\t\t}\n\t\t\t\tif (defined.sessionStorage) {\n\t\t\t\t\tif (filter.checked) {\n\t\t\t\t\t\tsessionStorage.setItem(\"qunit-filter-passed-tests\", \"true\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsessionStorage.removeItem(\"qunit-filter-passed-tests\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (config.hidepassed || defined.sessionStorage && sessionStorage.getItem(\"qunit-filter-passed-tests\")) {\n\t\t\t\tfilter.checked = true;\n\t\t\t\t// `ol` initialized at top of scope\n\t\t\t\tol = document.getElementById(\"qunit-tests\");\n\t\t\t\tol.className = ol.className + \" hidepass\";\n\t\t\t}\n\t\t\ttoolbar.appendChild(filter);\n\n\t\t\t// `label` initialized at top of scope\n\t\t\tlabel = document.createElement(\"label\");\n\t\t\tlabel.setAttribute(\"for\", \"qunit-filter-pass\");\n\t\t\tlabel.setAttribute(\"title\", \"Only show tests and assertons that fail. Stored in sessionStorage.\");\n\t\t\tlabel.innerHTML = \"Hide passed tests\";\n\t\t\ttoolbar.appendChild(label);\n\n\t\t\turlConfigCheckboxes = document.createElement('span');\n\t\t\turlConfigCheckboxes.innerHTML = urlConfigHtml;\n\t\t\taddEvent(urlConfigCheckboxes, \"change\", function (event) {\n\t\t\t\tvar params = {};\n\t\t\t\tparams[event.target.name] = event.target.checked ? true : undefined;\n\t\t\t\twindow.location = QUnit.url(params);\n\t\t\t});\n\t\t\ttoolbar.appendChild(urlConfigCheckboxes);\n\t\t}\n\n\t\t// `main` initialized at top of scope\n\t\tmain = id(\"qunit-fixture\");\n\t\tif (main) {\n\t\t\tconfig.fixture = main.innerHTML;\n\t\t}\n\n\t\tif (config.autostart) {\n\t\t\tQUnit.start();\n\t\t}\n\t};\n\n\taddEvent(window, \"load\", QUnit.load);\n\n\t// `onErrorFnPrev` initialized at top of scope\n\t// Preserve other handlers\n\tonErrorFnPrev = window.onerror;\n\n\t// Cover uncaught exceptions\n\t// Returning true will surpress the default browser handler,\n\t// returning false will let it run.\n\twindow.onerror = function (error, filePath, linerNr) {\n\t\tvar ret = false;\n\t\tif (onErrorFnPrev) {\n\t\t\tret = onErrorFnPrev(error, filePath, linerNr);\n\t\t}\n\n\t\t// Treat return value as window.onerror itself does,\n\t\t// Only do our handling if not surpressed.\n\t\tif (ret !== true) {\n\t\t\tif (QUnit.config.current) {\n\t\t\t\tif (QUnit.config.current.ignoreGlobalErrors) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tQUnit.pushFailure(error, filePath + \":\" + linerNr);\n\t\t\t} else {\n\t\t\t\tQUnit.test(\"global failure\", function () {\n\t\t\t\t\tQUnit.pushFailure(error, filePath + \":\" + linerNr);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\tfunction done() {\n\t\tconfig.autorun = true;\n\n\t\t// Log the last module results\n\t\tif (config.currentModule) {\n\t\t\trunLoggingCallbacks(\"moduleDone\", QUnit, {\n\t\t\t\tname: config.currentModule,\n\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\ttotal: config.moduleStats.all\n\t\t\t});\n\t\t}\n\n\t\tvar i,\n\t\t    key,\n\t\t    banner = id(\"qunit-banner\"),\n\t\t    tests = id(\"qunit-tests\"),\n\t\t    runtime = +new Date() - config.started,\n\t\t    passed = config.stats.all - config.stats.bad,\n\t\t    html = [\"Tests completed in \", runtime, \" milliseconds.<br/>\", \"<span class='passed'>\", passed, \"</span> tests of <span class='total'>\", config.stats.all, \"</span> passed, <span class='failed'>\", config.stats.bad, \"</span> failed.\"].join(\"\");\n\n\t\tif (banner) {\n\t\t\tbanner.className = config.stats.bad ? \"qunit-fail\" : \"qunit-pass\";\n\t\t}\n\n\t\tif (tests) {\n\t\t\tid(\"qunit-testresult\").innerHTML = html;\n\t\t}\n\n\t\tif (config.altertitle && typeof document !== \"undefined\" && document.title) {\n\t\t\t// show â for good, â for bad suite result in title\n\t\t\t// use escape sequences in case file gets loaded with non-utf-8-charset\n\t\t\tdocument.title = [config.stats.bad ? \"â\" : \"â\", document.title.replace(/^[\\u2714\\u2716] /i, \"\")].join(\" \");\n\t\t}\n\n\t\t// clear own sessionStorage items if all tests passed\n\t\tif (config.reorder && defined.sessionStorage && config.stats.bad === 0) {\n\t\t\t// `key` & `i` initialized at top of scope\n\t\t\tfor (i = 0; i < sessionStorage.length; i++) {\n\t\t\t\tkey = sessionStorage.key(i++);\n\t\t\t\tif (key.indexOf(\"qunit-test-\") === 0) {\n\t\t\t\t\tsessionStorage.removeItem(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trunLoggingCallbacks(\"done\", QUnit, {\n\t\t\tfailed: config.stats.bad,\n\t\t\tpassed: passed,\n\t\t\ttotal: config.stats.all,\n\t\t\truntime: runtime\n\t\t});\n\t}\n\n\t/** @return Boolean: true if this test should be ran */\n\tfunction validTest(test) {\n\t\tvar include,\n\t\t    filter = config.filter && config.filter.toLowerCase(),\n\t\t    module = config.module && config.module.toLowerCase(),\n\t\t    fullName = (test.module + \": \" + test.testName).toLowerCase();\n\n\t\tif (config.testNumber) {\n\t\t\treturn test.testNumber === config.testNumber;\n\t\t}\n\n\t\tif (module && (!test.module || test.module.toLowerCase() !== module)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!filter) {\n\t\t\treturn true;\n\t\t}\n\n\t\tinclude = filter.charAt(0) !== \"!\";\n\t\tif (!include) {\n\t\t\tfilter = filter.slice(1);\n\t\t}\n\n\t\t// If the filter matches, we need to honour include\n\t\tif (fullName.indexOf(filter) !== -1) {\n\t\t\treturn include;\n\t\t}\n\n\t\t// Otherwise, do the opposite\n\t\treturn !include;\n\t}\n\n\t// so far supports only Firefox, Chrome and Opera (buggy), Safari (for real exceptions)\n\t// Later Safari and IE10 are supposed to support error.stack as well\n\t// See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\n\tfunction extractStacktrace(e, offset) {\n\t\toffset = offset === undefined ? 3 : offset;\n\n\t\tvar stack, include, i, regex;\n\n\t\tif (e.stacktrace) {\n\t\t\t// Opera\n\t\t\treturn e.stacktrace.split(\"\\n\")[offset + 3];\n\t\t} else if (e.stack) {\n\t\t\t// Firefox, Chrome\n\t\t\tstack = e.stack.split(\"\\n\");\n\t\t\tif (/^error$/i.test(stack[0])) {\n\t\t\t\tstack.shift();\n\t\t\t}\n\t\t\tif (fileName) {\n\t\t\t\tinclude = [];\n\t\t\t\tfor (i = offset; i < stack.length; i++) {\n\t\t\t\t\tif (stack[i].indexOf(fileName) != -1) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tinclude.push(stack[i]);\n\t\t\t\t}\n\t\t\t\tif (include.length) {\n\t\t\t\t\treturn include.join(\"\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stack[offset];\n\t\t} else if (e.sourceURL) {\n\t\t\t// Safari, PhantomJS\n\t\t\t// hopefully one day Safari provides actual stacktraces\n\t\t\t// exclude useless self-reference for generated Error objects\n\t\t\tif (/qunit.js$/.test(e.sourceURL)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// for actual exceptions, this is useful\n\t\t\treturn e.sourceURL + \":\" + e.line;\n\t\t}\n\t}\n\tfunction sourceFromStacktrace(offset) {\n\t\ttry {\n\t\t\tthrow new Error();\n\t\t} catch (e) {\n\t\t\treturn extractStacktrace(e, offset);\n\t\t}\n\t}\n\n\tfunction escapeInnerText(s) {\n\t\tif (!s) {\n\t\t\treturn \"\";\n\t\t}\n\t\ts = s + \"\";\n\t\treturn s.replace(/[\\&<>]/g, function (s) {\n\t\t\tswitch (s) {\n\t\t\t\tcase \"&\":\n\t\t\t\t\treturn \"&amp;\";\n\t\t\t\tcase \"<\":\n\t\t\t\t\treturn \"&lt;\";\n\t\t\t\tcase \">\":\n\t\t\t\t\treturn \"&gt;\";\n\t\t\t\tdefault:\n\t\t\t\t\treturn s;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction synchronize(callback, last) {\n\t\tconfig.queue.push(callback);\n\n\t\tif (config.autorun && !config.blocking) {\n\t\t\tprocess(last);\n\t\t}\n\t}\n\n\tfunction process(last) {\n\t\tfunction next() {\n\t\t\tprocess(last);\n\t\t}\n\t\tvar start = new Date().getTime();\n\t\tconfig.depth = config.depth ? config.depth + 1 : 1;\n\n\t\twhile (config.queue.length && !config.blocking) {\n\t\t\tif (!defined.setTimeout || config.updateRate <= 0 || new Date().getTime() - start < config.updateRate) {\n\t\t\t\tconfig.queue.shift()();\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(next, 13);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconfig.depth--;\n\t\tif (last && !config.blocking && !config.queue.length && config.depth === 0) {\n\t\t\tdone();\n\t\t}\n\t}\n\n\tfunction saveGlobal() {\n\t\tconfig.pollution = [];\n\n\t\tif (config.noglobals) {\n\t\t\tfor (var key in meteorBabelHelpers.sanitizeForInObject(window)) {\n\t\t\t\t// in Opera sometimes DOM element ids show up here, ignore them\n\t\t\t\tif (!hasOwn.call(window, key) || /^qunit-test-output/.test(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconfig.pollution.push(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction checkPollution(name) {\n\t\tvar newGlobals,\n\t\t    deletedGlobals,\n\t\t    old = config.pollution;\n\n\t\tsaveGlobal();\n\n\t\tnewGlobals = diff(config.pollution, old);\n\t\tif (newGlobals.length > 0) {\n\t\t\tQUnit.pushFailure(\"Introduced global variable(s): \" + newGlobals.join(\", \"));\n\t\t}\n\n\t\tdeletedGlobals = diff(old, config.pollution);\n\t\tif (deletedGlobals.length > 0) {\n\t\t\tQUnit.pushFailure(\"Deleted global variable(s): \" + deletedGlobals.join(\", \"));\n\t\t}\n\t}\n\n\t// returns a new Array with the elements that are in a but not in b\n\tfunction diff(a, b) {\n\t\tvar i,\n\t\t    j,\n\t\t    result = a.slice();\n\n\t\tfor (i = 0; i < result.length; i++) {\n\t\t\tfor (j = 0; j < b.length; j++) {\n\t\t\t\tif (result[i] === b[j]) {\n\t\t\t\t\tresult.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction extend(a, b) {\n\t\tfor (var prop in meteorBabelHelpers.sanitizeForInObject(b)) {\n\t\t\tif (b[prop] === undefined) {\n\t\t\t\tdelete a[prop];\n\n\t\t\t\t// Avoid \"Member not found\" error in IE8 caused by setting window.constructor\n\t\t\t} else if (prop !== \"constructor\" || a !== window) {\n\t\t\t\t\ta[prop] = b[prop];\n\t\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t}\n\n\tfunction addEvent(elem, type, fn) {\n\t\tif (elem.addEventListener) {\n\t\t\telem.addEventListener(type, fn, false);\n\t\t} else if (elem.attachEvent) {\n\t\t\telem.attachEvent(\"on\" + type, fn);\n\t\t} else {\n\t\t\tfn();\n\t\t}\n\t}\n\n\tfunction id(name) {\n\t\treturn !!(typeof document !== \"undefined\" && document && document.getElementById) && document.getElementById(name);\n\t}\n\n\tfunction registerLoggingCallback(key) {\n\t\treturn function (callback) {\n\t\t\tconfig[key].push(callback);\n\t\t};\n\t}\n\n\t// Supports deprecated method of completely overwriting logging callbacks\n\tfunction runLoggingCallbacks(key, scope, args) {\n\t\t//debugger;\n\t\tvar i, callbacks;\n\t\tif (QUnit.hasOwnProperty(key)) {\n\t\t\tQUnit[key].call(scope, args);\n\t\t} else {\n\t\t\tcallbacks = config[key];\n\t\t\tfor (i = 0; i < callbacks.length; i++) {\n\t\t\t\tcallbacks[i].call(scope, args);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Test for equality any JavaScript type.\n\t// Author: Philippe RathÃ© <prathe@gmail.com>\n\tQUnit.equiv = function () {\n\n\t\t// Call the o related callback with the given arguments.\n\t\tfunction bindCallbacks(o, callbacks, args) {\n\t\t\tvar prop = QUnit.objectType(o);\n\t\t\tif (prop) {\n\t\t\t\tif (QUnit.objectType(callbacks[prop]) === \"function\") {\n\t\t\t\t\treturn callbacks[prop].apply(callbacks, args);\n\t\t\t\t} else {\n\t\t\t\t\treturn callbacks[prop]; // or undefined\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the real equiv function\n\t\tvar innerEquiv,\n\n\t\t// stack to decide between skip/abort functions\n\t\tcallers = [],\n\n\t\t// stack to avoiding loops from circular referencing\n\t\tparents = [],\n\t\t    getProto = Object.getPrototypeOf || function (obj) {\n\t\t\treturn obj.__proto__;\n\t\t},\n\t\t    callbacks = function () {\n\n\t\t\t// for string, boolean, number and null\n\t\t\tfunction useStrictEquality(b, a) {\n\t\t\t\tif (b instanceof a.constructor || a instanceof b.constructor) {\n\t\t\t\t\t// to catch short annotaion VS 'new' annotation of a\n\t\t\t\t\t// declaration\n\t\t\t\t\t// e.g. var i = 1;\n\t\t\t\t\t// var j = new Number(1);\n\t\t\t\t\treturn a == b;\n\t\t\t\t} else {\n\t\t\t\t\treturn a === b;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t\"string\": useStrictEquality,\n\t\t\t\t\"boolean\": useStrictEquality,\n\t\t\t\t\"number\": useStrictEquality,\n\t\t\t\t\"null\": useStrictEquality,\n\t\t\t\t\"undefined\": useStrictEquality,\n\n\t\t\t\t\"nan\": function () {\n\t\t\t\t\tfunction nan(b) {\n\t\t\t\t\t\treturn isNaN(b);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn nan;\n\t\t\t\t}(),\n\n\t\t\t\t\"date\": function () {\n\t\t\t\t\tfunction date(b, a) {\n\t\t\t\t\t\treturn QUnit.objectType(b) === \"date\" && a.valueOf() === b.valueOf();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn date;\n\t\t\t\t}(),\n\n\t\t\t\t\"regexp\": function () {\n\t\t\t\t\tfunction regexp(b, a) {\n\t\t\t\t\t\treturn QUnit.objectType(b) === \"regexp\" &&\n\t\t\t\t\t\t// the regex itself\n\t\t\t\t\t\ta.source === b.source &&\n\t\t\t\t\t\t// and its modifers\n\t\t\t\t\t\ta.global === b.global &&\n\t\t\t\t\t\t// (gmi) ...\n\t\t\t\t\t\ta.ignoreCase === b.ignoreCase && a.multiline === b.multiline;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn regexp;\n\t\t\t\t}(),\n\n\t\t\t\t// - skip when the property is a method of an instance (OOP)\n\t\t\t\t// - abort otherwise,\n\t\t\t\t// initial === would have catch identical references anyway\n\t\t\t\t\"function\": function () {\n\t\t\t\t\tfunction _function() {\n\t\t\t\t\t\tvar caller = callers[callers.length - 1];\n\t\t\t\t\t\treturn caller !== Object && typeof caller !== \"undefined\";\n\t\t\t\t\t}\n\n\t\t\t\t\treturn _function;\n\t\t\t\t}(),\n\n\t\t\t\t\"array\": function () {\n\t\t\t\t\tfunction array(b, a) {\n\t\t\t\t\t\tvar i, j, len, loop;\n\n\t\t\t\t\t\t// b could be an object literal here\n\t\t\t\t\t\tif (QUnit.objectType(b) !== \"array\") {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlen = a.length;\n\t\t\t\t\t\tif (len !== b.length) {\n\t\t\t\t\t\t\t// safe and faster\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// track reference to avoid circular references\n\t\t\t\t\t\tparents.push(a);\n\t\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\t\tloop = false;\n\t\t\t\t\t\t\tfor (j = 0; j < parents.length; j++) {\n\t\t\t\t\t\t\t\tif (parents[j] === a[i]) {\n\t\t\t\t\t\t\t\t\tloop = true; // dont rewalk array\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!loop && !innerEquiv(a[i], b[i])) {\n\t\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\t\t\t\t}(),\n\n\t\t\t\t\"object\": function () {\n\t\t\t\t\tfunction object(b, a) {\n\t\t\t\t\t\tvar i,\n\t\t\t\t\t\t    j,\n\t\t\t\t\t\t    loop,\n\n\t\t\t\t\t\t// Default to true\n\t\t\t\t\t\teq = true,\n\t\t\t\t\t\t    aProperties = [],\n\t\t\t\t\t\t    bProperties = [];\n\n\t\t\t\t\t\t// comparing constructors is more strict than using\n\t\t\t\t\t\t// instanceof\n\t\t\t\t\t\tif (a.constructor !== b.constructor) {\n\t\t\t\t\t\t\t// Allow objects with no prototype to be equivalent to\n\t\t\t\t\t\t\t// objects with Object as their constructor.\n\t\t\t\t\t\t\tif (!(getProto(a) === null && getProto(b) === Object.prototype || getProto(b) === null && getProto(a) === Object.prototype)) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// stack constructor before traversing properties\n\t\t\t\t\t\tcallers.push(a.constructor);\n\t\t\t\t\t\t// track reference to avoid circular references\n\t\t\t\t\t\tparents.push(a);\n\n\t\t\t\t\t\tfor (i in meteorBabelHelpers.sanitizeForInObject(a)) {\n\t\t\t\t\t\t\t// be strict: don't ensures hasOwnProperty\n\t\t\t\t\t\t\t// and go deep\n\t\t\t\t\t\t\tloop = false;\n\t\t\t\t\t\t\tfor (j = 0; j < parents.length; j++) {\n\t\t\t\t\t\t\t\tif (parents[j] === a[i]) {\n\t\t\t\t\t\t\t\t\t// don't go down the same path twice\n\t\t\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taProperties.push(i); // collect a's properties\n\n\t\t\t\t\t\t\tif (!loop && !innerEquiv(a[i], b[i])) {\n\t\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcallers.pop(); // unstack, we are done\n\t\t\t\t\t\tparents.pop();\n\n\t\t\t\t\t\tfor (i in meteorBabelHelpers.sanitizeForInObject(b)) {\n\t\t\t\t\t\t\tbProperties.push(i); // collect b's properties\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Ensures identical properties name\n\t\t\t\t\t\treturn eq && innerEquiv(aProperties.sort(), bProperties.sort());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn object;\n\t\t\t\t}()\n\t\t\t};\n\t\t}();\n\n\t\tinnerEquiv = function innerEquiv() {\n\t\t\t// can take multiple arguments\n\t\t\tvar args = [].slice.apply(arguments);\n\t\t\tif (args.length < 2) {\n\t\t\t\treturn true; // end transition\n\t\t\t}\n\n\t\t\treturn function (a, b) {\n\t\t\t\tif (a === b) {\n\t\t\t\t\treturn true; // catch the most you can\n\t\t\t\t} else if (a === null || b === null || typeof a === \"undefined\" || typeof b === \"undefined\" || QUnit.objectType(a) !== QUnit.objectType(b)) {\n\t\t\t\t\t\treturn false; // don't lose time with error prone cases\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn bindCallbacks(a, callbacks, [b, a]);\n\t\t\t\t\t\t}\n\n\t\t\t\t// apply transition with (1..n) arguments\n\t\t\t}(args[0], args[1]) && arguments.callee.apply(this, args.splice(1, args.length - 1));\n\t\t};\n\n\t\treturn innerEquiv;\n\t}();\n\n\t/**\n  * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n  * http://flesler.blogspot.com Licensed under BSD\n  * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n  *\n  * @projectDescription Advanced and extensible data dumping for Javascript.\n  * @version 1.0.0\n  * @author Ariel Flesler\n  * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n  */\n\tQUnit.jsDump = function () {\n\t\tfunction quote(str) {\n\t\t\treturn '\"' + str.toString().replace(/\"/g, '\\\\\"') + '\"';\n\t\t}\n\t\tfunction literal(o) {\n\t\t\treturn o + \"\";\n\t\t}\n\t\tfunction join(pre, arr, post) {\n\t\t\tvar s = jsDump.separator(),\n\t\t\t    base = jsDump.indent(),\n\t\t\t    inner = jsDump.indent(1);\n\t\t\tif (arr.join) {\n\t\t\t\tarr = arr.join(\",\" + s + inner);\n\t\t\t}\n\t\t\tif (!arr) {\n\t\t\t\treturn pre + post;\n\t\t\t}\n\t\t\treturn [pre, inner + arr, base + post].join(s);\n\t\t}\n\t\tfunction array(arr, stack) {\n\t\t\tvar i = arr.length,\n\t\t\t    ret = new Array(i);\n\t\t\tthis.up();\n\t\t\twhile (i--) {\n\t\t\t\tret[i] = this.parse(arr[i], undefined, stack);\n\t\t\t}\n\t\t\tthis.down();\n\t\t\treturn join(\"[\", ret, \"]\");\n\t\t}\n\n\t\tvar reName = /^function (\\w+)/,\n\t\t    jsDump = {\n\t\t\tparse: function () {\n\t\t\t\tfunction parse(obj, type, stack) {\n\t\t\t\t\t//type is used mostly internally, you can fix a (custom)type in advance\n\t\t\t\t\tstack = stack || [];\n\t\t\t\t\tvar inStack,\n\t\t\t\t\t    res,\n\t\t\t\t\t    parser = this.parsers[type || this.typeOf(obj)];\n\n\t\t\t\t\ttype = typeof parser === \"undefined\" ? \"undefined\" : _typeof(parser);\n\t\t\t\t\tinStack = inArray(obj, stack);\n\n\t\t\t\t\tif (inStack != -1) {\n\t\t\t\t\t\treturn \"recursion(\" + (inStack - stack.length) + \")\";\n\t\t\t\t\t}\n\t\t\t\t\t//else\n\t\t\t\t\tif (type == \"function\") {\n\t\t\t\t\t\tstack.push(obj);\n\t\t\t\t\t\tres = parser.call(this, obj, stack);\n\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\t\t\t\t\t// else\n\t\t\t\t\treturn type == \"string\" ? parser : this.parsers.error;\n\t\t\t\t}\n\n\t\t\t\treturn parse;\n\t\t\t}(),\n\t\t\ttypeOf: function () {\n\t\t\t\tfunction typeOf(obj) {\n\t\t\t\t\tvar type;\n\t\t\t\t\tif (obj === null) {\n\t\t\t\t\t\ttype = \"null\";\n\t\t\t\t\t} else if (typeof obj === \"undefined\") {\n\t\t\t\t\t\ttype = \"undefined\";\n\t\t\t\t\t} else if (QUnit.is(\"regexp\", obj)) {\n\t\t\t\t\t\ttype = \"regexp\";\n\t\t\t\t\t} else if (QUnit.is(\"date\", obj)) {\n\t\t\t\t\t\ttype = \"date\";\n\t\t\t\t\t} else if (QUnit.is(\"function\", obj)) {\n\t\t\t\t\t\ttype = \"function\";\n\t\t\t\t\t} else if (_typeof(obj.setInterval) !== undefined && typeof obj.document !== \"undefined\" && typeof obj.nodeType === \"undefined\") {\n\t\t\t\t\t\ttype = \"window\";\n\t\t\t\t\t} else if (obj.nodeType === 9) {\n\t\t\t\t\t\ttype = \"document\";\n\t\t\t\t\t} else if (obj.nodeType) {\n\t\t\t\t\t\ttype = \"node\";\n\t\t\t\t\t} else if (\n\t\t\t\t\t// native arrays\n\t\t\t\t\ttoString.call(obj) === \"[object Array]\" ||\n\t\t\t\t\t// NodeList objects\n\t\t\t\t\ttypeof obj.length === \"number\" && typeof obj.item !== \"undefined\" && (obj.length ? obj.item(0) === obj[0] : obj.item(0) === null && typeof obj[0] === \"undefined\")) {\n\t\t\t\t\t\ttype = \"array\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n\t\t\t\t\t}\n\t\t\t\t\treturn type;\n\t\t\t\t}\n\n\t\t\t\treturn typeOf;\n\t\t\t}(),\n\t\t\tseparator: function () {\n\t\t\t\tfunction separator() {\n\t\t\t\t\treturn this.multiline ? this.HTML ? \"<br />\" : \"\\n\" : this.HTML ? \"&nbsp;\" : \" \";\n\t\t\t\t}\n\n\t\t\t\treturn separator;\n\t\t\t}(),\n\t\t\tindent: function () {\n\t\t\t\tfunction indent(extra) {\n\t\t\t\t\t// extra can be a number, shortcut for increasing-calling-decreasing\n\t\t\t\t\tif (!this.multiline) {\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\t\t\t\t\tvar chr = this.indentChar;\n\t\t\t\t\tif (this.HTML) {\n\t\t\t\t\t\tchr = chr.replace(/\\t/g, \"   \").replace(/ /g, \"&nbsp;\");\n\t\t\t\t\t}\n\t\t\t\t\treturn new Array(this._depth_ + (extra || 0)).join(chr);\n\t\t\t\t}\n\n\t\t\t\treturn indent;\n\t\t\t}(),\n\t\t\tup: function () {\n\t\t\t\tfunction up(a) {\n\t\t\t\t\tthis._depth_ += a || 1;\n\t\t\t\t}\n\n\t\t\t\treturn up;\n\t\t\t}(),\n\t\t\tdown: function () {\n\t\t\t\tfunction down(a) {\n\t\t\t\t\tthis._depth_ -= a || 1;\n\t\t\t\t}\n\n\t\t\t\treturn down;\n\t\t\t}(),\n\t\t\tsetParser: function () {\n\t\t\t\tfunction setParser(name, parser) {\n\t\t\t\t\tthis.parsers[name] = parser;\n\t\t\t\t}\n\n\t\t\t\treturn setParser;\n\t\t\t}(),\n\t\t\t// The next 3 are exposed so you can use them\n\t\t\tquote: quote,\n\t\t\tliteral: literal,\n\t\t\tjoin: join,\n\t\t\t//\n\t\t\t_depth_: 1,\n\t\t\t// This is the list of parsers, to modify them, use jsDump.setParser\n\t\t\tparsers: {\n\t\t\t\twindow: \"[Window]\",\n\t\t\t\tdocument: \"[Document]\",\n\t\t\t\terror: \"[ERROR]\", //when no parser is found, shouldn\"t happen\n\t\t\t\tunknown: \"[Unknown]\",\n\t\t\t\t\"null\": \"null\",\n\t\t\t\t\"undefined\": \"undefined\",\n\t\t\t\t\"function\": function () {\n\t\t\t\t\tfunction _function(fn) {\n\t\t\t\t\t\tvar ret = \"function\",\n\t\t\t\t\t\t    name = \"name\" in fn ? fn.name : (reName.exec(fn) || [])[1]; //functions never have name in IE\n\n\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\tret += \" \" + name;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret += \"( \";\n\n\t\t\t\t\t\tret = [ret, QUnit.jsDump.parse(fn, \"functionArgs\"), \"){\"].join(\"\");\n\t\t\t\t\t\treturn join(ret, QUnit.jsDump.parse(fn, \"functionCode\"), \"}\");\n\t\t\t\t\t}\n\n\t\t\t\t\treturn _function;\n\t\t\t\t}(),\n\t\t\t\tarray: array,\n\t\t\t\tnodelist: array,\n\t\t\t\t\"arguments\": array,\n\t\t\t\tobject: function () {\n\t\t\t\t\tfunction object(map, stack) {\n\t\t\t\t\t\tvar ret = [],\n\t\t\t\t\t\t    keys,\n\t\t\t\t\t\t    key,\n\t\t\t\t\t\t    val,\n\t\t\t\t\t\t    i;\n\t\t\t\t\t\tQUnit.jsDump.up();\n\t\t\t\t\t\tif (Object.keys) {\n\t\t\t\t\t\t\tkeys = Object.keys(map);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tkeys = [];\n\t\t\t\t\t\t\tfor (key in meteorBabelHelpers.sanitizeForInObject(map)) {\n\t\t\t\t\t\t\t\tkeys.push(key);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkeys.sort();\n\t\t\t\t\t\tfor (i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\t\tval = map[key];\n\t\t\t\t\t\t\tret.push(QUnit.jsDump.parse(key, \"key\") + \": \" + QUnit.jsDump.parse(val, undefined, stack));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tQUnit.jsDump.down();\n\t\t\t\t\t\treturn join(\"{\", ret, \"}\");\n\t\t\t\t\t}\n\n\t\t\t\t\treturn object;\n\t\t\t\t}(),\n\t\t\t\tnode: function () {\n\t\t\t\t\tfunction node(_node) {\n\t\t\t\t\t\tvar a,\n\t\t\t\t\t\t    val,\n\t\t\t\t\t\t    open = QUnit.jsDump.HTML ? \"&lt;\" : \"<\",\n\t\t\t\t\t\t    close = QUnit.jsDump.HTML ? \"&gt;\" : \">\",\n\t\t\t\t\t\t    tag = _node.nodeName.toLowerCase(),\n\t\t\t\t\t\t    ret = open + tag;\n\n\t\t\t\t\t\tfor (a in meteorBabelHelpers.sanitizeForInObject(QUnit.jsDump.DOMAttrs)) {\n\t\t\t\t\t\t\tval = _node[QUnit.jsDump.DOMAttrs[a]];\n\t\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\t\tret += \" \" + a + \"=\" + QUnit.jsDump.parse(val, \"attribute\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ret + close + open + \"/\" + tag + close;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\t\t\t\t}(),\n\t\t\t\tfunctionArgs: function () {\n\t\t\t\t\tfunction functionArgs(fn) {\n\t\t\t\t\t\t//function calls it internally, it's the arguments part of the function\n\t\t\t\t\t\tvar args,\n\t\t\t\t\t\t    l = fn.length;\n\n\t\t\t\t\t\tif (!l) {\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\targs = new Array(l);\n\t\t\t\t\t\twhile (l--) {\n\t\t\t\t\t\t\targs[l] = String.fromCharCode(97 + l); //97 is 'a'\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn \" \" + args.join(\", \") + \" \";\n\t\t\t\t\t}\n\n\t\t\t\t\treturn functionArgs;\n\t\t\t\t}(),\n\t\t\t\tkey: quote, //object calls it internally, the key part of an item in a map\n\t\t\t\tfunctionCode: \"[code]\", //function calls it internally, it's the content of the function\n\t\t\t\tattribute: quote, //node calls it internally, it's an html attribute value\n\t\t\t\tstring: quote,\n\t\t\t\tdate: quote,\n\t\t\t\tregexp: literal, //regex\n\t\t\t\tnumber: literal,\n\t\t\t\t\"boolean\": literal\n\t\t\t},\n\t\t\tDOMAttrs: {\n\t\t\t\t//attributes to dump from nodes, name=>realName\n\t\t\t\tid: \"id\",\n\t\t\t\tname: \"name\",\n\t\t\t\t\"class\": \"className\"\n\t\t\t},\n\t\t\tHTML: false, //if true, entities are escaped ( <, >, \\t, space and \\n )\n\t\t\tindentChar: \"  \", //indentation unit\n\t\t\tmultiline: true //if true, items in a collection, are separated by a \\n, else just a space.\n\t\t};\n\n\t\treturn jsDump;\n\t}();\n\n\t// from Sizzle.js\n\tfunction getText(elems) {\n\t\tvar i,\n\t\t    elem,\n\t\t    ret = \"\";\n\n\t\tfor (i = 0; elems[i]; i++) {\n\t\t\telem = elems[i];\n\n\t\t\t// Get the text from text nodes and CDATA nodes\n\t\t\tif (elem.nodeType === 3 || elem.nodeType === 4) {\n\t\t\t\tret += elem.nodeValue;\n\n\t\t\t\t// Traverse everything else, except comment nodes\n\t\t\t} else if (elem.nodeType !== 8) {\n\t\t\t\t\tret += getText(elem.childNodes);\n\t\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\t// from jquery.js\n\tfunction inArray(elem, array) {\n\t\tif (array.indexOf) {\n\t\t\treturn array.indexOf(elem);\n\t\t}\n\n\t\tfor (var i = 0, length = array.length; i < length; i++) {\n\t\t\tif (array[i] === elem) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/*\n  * Javascript Diff Algorithm\n  *  By John Resig (http://ejohn.org/)\n  *  Modified by Chu Alan \"sprite\"\n  *\n  * Released under the MIT license.\n  *\n  * More Info:\n  *  http://ejohn.org/projects/javascript-diff-algorithm/\n  *\n  * Usage: QUnit.diff(expected, actual)\n  *\n  * QUnit.diff( \"the quick brown fox jumped over\", \"the quick fox jumps over\" ) == \"the  quick <del>brown </del> fox <del>jumped </del><ins>jumps </ins> over\"\n  */\n\tQUnit.diff = function () {\n\t\tfunction diff(o, n) {\n\t\t\tvar i,\n\t\t\t    ns = {},\n\t\t\t    os = {};\n\n\t\t\tfor (i = 0; i < n.length; i++) {\n\t\t\t\tif (ns[n[i]] == null) {\n\t\t\t\t\tns[n[i]] = {\n\t\t\t\t\t\trows: [],\n\t\t\t\t\t\to: null\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tns[n[i]].rows.push(i);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < o.length; i++) {\n\t\t\t\tif (os[o[i]] == null) {\n\t\t\t\t\tos[o[i]] = {\n\t\t\t\t\t\trows: [],\n\t\t\t\t\t\tn: null\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tos[o[i]].rows.push(i);\n\t\t\t}\n\n\t\t\tfor (i in meteorBabelHelpers.sanitizeForInObject(ns)) {\n\t\t\t\tif (!hasOwn.call(ns, i)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (ns[i].rows.length == 1 && typeof os[i] != \"undefined\" && os[i].rows.length == 1) {\n\t\t\t\t\tn[ns[i].rows[0]] = {\n\t\t\t\t\t\ttext: n[ns[i].rows[0]],\n\t\t\t\t\t\trow: os[i].rows[0]\n\t\t\t\t\t};\n\t\t\t\t\to[os[i].rows[0]] = {\n\t\t\t\t\t\ttext: o[os[i].rows[0]],\n\t\t\t\t\t\trow: ns[i].rows[0]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < n.length - 1; i++) {\n\t\t\t\tif (n[i].text != null && n[i + 1].text == null && n[i].row + 1 < o.length && o[n[i].row + 1].text == null && n[i + 1] == o[n[i].row + 1]) {\n\n\t\t\t\t\tn[i + 1] = {\n\t\t\t\t\t\ttext: n[i + 1],\n\t\t\t\t\t\trow: n[i].row + 1\n\t\t\t\t\t};\n\t\t\t\t\to[n[i].row + 1] = {\n\t\t\t\t\t\ttext: o[n[i].row + 1],\n\t\t\t\t\t\trow: i + 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = n.length - 1; i > 0; i--) {\n\t\t\t\tif (n[i].text != null && n[i - 1].text == null && n[i].row > 0 && o[n[i].row - 1].text == null && n[i - 1] == o[n[i].row - 1]) {\n\n\t\t\t\t\tn[i - 1] = {\n\t\t\t\t\t\ttext: n[i - 1],\n\t\t\t\t\t\trow: n[i].row - 1\n\t\t\t\t\t};\n\t\t\t\t\to[n[i].row - 1] = {\n\t\t\t\t\t\ttext: o[n[i].row - 1],\n\t\t\t\t\t\trow: i - 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\to: o,\n\t\t\t\tn: n\n\t\t\t};\n\t\t}\n\n\t\treturn function (o, n) {\n\t\t\to = o.replace(/\\s+$/, \"\");\n\t\t\tn = n.replace(/\\s+$/, \"\");\n\n\t\t\tvar i,\n\t\t\t    pre,\n\t\t\t    str = \"\",\n\t\t\t    out = diff(o === \"\" ? [] : o.split(/\\s+/), n === \"\" ? [] : n.split(/\\s+/)),\n\t\t\t    oSpace = o.match(/\\s+/g),\n\t\t\t    nSpace = n.match(/\\s+/g);\n\n\t\t\tif (oSpace == null) {\n\t\t\t\toSpace = [\" \"];\n\t\t\t} else {\n\t\t\t\toSpace.push(\" \");\n\t\t\t}\n\n\t\t\tif (nSpace == null) {\n\t\t\t\tnSpace = [\" \"];\n\t\t\t} else {\n\t\t\t\tnSpace.push(\" \");\n\t\t\t}\n\n\t\t\tif (out.n.length === 0) {\n\t\t\t\tfor (i = 0; i < out.o.length; i++) {\n\t\t\t\t\tstr += \"<del>\" + out.o[i] + oSpace[i] + \"</del>\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (out.n[0].text == null) {\n\t\t\t\t\tfor (n = 0; n < out.o.length && out.o[n].text == null; n++) {\n\t\t\t\t\t\tstr += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < out.n.length; i++) {\n\t\t\t\t\tif (out.n[i].text == null) {\n\t\t\t\t\t\tstr += \"<ins>\" + out.n[i] + nSpace[i] + \"</ins>\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `pre` initialized at top of scope\n\t\t\t\t\t\tpre = \"\";\n\n\t\t\t\t\t\tfor (n = out.n[i].row + 1; n < out.o.length && out.o[n].text == null; n++) {\n\t\t\t\t\t\t\tpre += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += \" \" + out.n[i].text + nSpace[i] + pre;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn str;\n\t\t};\n\t}();\n\n\t// for CommonJS enviroments, export everything\n\tif (typeof exports !== \"undefined\") {\n\t\textend(exports, QUnit);\n\t}\n\n\t// get at whatever the global object is, like window in browsers\n})(function () {\n\treturn this;\n}.call());","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/modernizr/test/qunit/qunit.js"],"names":[],"mappings":"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","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/modernizr/test/qunit/qunit.js.map","sourcesContent":["/**\n * QUnit v1.9.0 - A JavaScript Unit Testing Framework\n *\n * http://docs.jquery.com/QUnit\n *\n * Copyright (c) 2012 John Resig, JÃ¶rn Zaefferer\n * Dual licensed under the MIT (MIT-LICENSE.txt)\n * or GPL (GPL-LICENSE.txt) licenses.\n */\n\n(function( window ) {\n\nvar QUnit,\n\tconfig,\n\tonErrorFnPrev,\n\ttestId = 0,\n\tfileName = (sourceFromStacktrace( 0 ) || \"\" ).replace(/(:\\d+)+\\)?/, \"\").replace(/.+\\//, \"\"),\n\ttoString = Object.prototype.toString,\n\thasOwn = Object.prototype.hasOwnProperty,\n\tdefined = {\n\tsetTimeout: typeof window.setTimeout !== \"undefined\",\n\tsessionStorage: (function() {\n\t\tvar x = \"qunit-test-string\";\n\t\ttry {\n\t\t\tsessionStorage.setItem( x, x );\n\t\t\tsessionStorage.removeItem( x );\n\t\t\treturn true;\n\t\t} catch( e ) {\n\t\t\treturn false;\n\t\t}\n\t}())\n};\n\nfunction Test( settings ) {\n\textend( this, settings );\n\tthis.assertions = [];\n\tthis.testNumber = ++Test.count;\n}\n\nTest.count = 0;\n\nTest.prototype = {\n\tinit: function() {\n\t\tvar a, b, li,\n        tests = id( \"qunit-tests\" );\n\n\t\tif ( tests ) {\n\t\t\tb = document.createElement( \"strong\" );\n\t\t\tb.innerHTML = this.name;\n\n\t\t\t// `a` initialized at top of scope\n\t\t\ta = document.createElement( \"a\" );\n\t\t\ta.innerHTML = \"Rerun\";\n\t\t\ta.href = QUnit.url({ testNumber: this.testNumber });\n\n\t\t\tli = document.createElement( \"li\" );\n\t\t\tli.appendChild( b );\n\t\t\tli.appendChild( a );\n\t\t\tli.className = \"running\";\n\t\t\tli.id = this.id = \"qunit-test-output\" + testId++;\n\n\t\t\ttests.appendChild( li );\n\t\t}\n\t},\n\tsetup: function() {\n\t\tif ( this.module !== config.previousModule ) {\n\t\t\tif ( config.previousModule ) {\n\t\t\t\trunLoggingCallbacks( \"moduleDone\", QUnit, {\n\t\t\t\t\tname: config.previousModule,\n\t\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\t\ttotal: config.moduleStats.all\n\t\t\t\t});\n\t\t\t}\n\t\t\tconfig.previousModule = this.module;\n\t\t\tconfig.moduleStats = { all: 0, bad: 0 };\n\t\t\trunLoggingCallbacks( \"moduleStart\", QUnit, {\n\t\t\t\tname: this.module\n\t\t\t});\n\t\t} else if ( config.autorun ) {\n\t\t\trunLoggingCallbacks( \"moduleStart\", QUnit, {\n\t\t\t\tname: this.module\n\t\t\t});\n\t\t}\n\n\t\tconfig.current = this;\n\n\t\tthis.testEnvironment = extend({\n\t\t\tsetup: function() {},\n\t\t\tteardown: function() {}\n\t\t}, this.moduleTestEnvironment );\n\n\t\trunLoggingCallbacks( \"testStart\", QUnit, {\n\t\t\tname: this.testName,\n\t\t\tmodule: this.module\n\t\t});\n\n\t\t// allow utility functions to access the current test environment\n\t\t// TODO why??\n\t\tQUnit.current_testEnvironment = this.testEnvironment;\n\n\t\tif ( !config.pollution ) {\n\t\t\tsaveGlobal();\n\t\t}\n\t\tif ( config.notrycatch ) {\n\t\t\tthis.testEnvironment.setup.call( this.testEnvironment );\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tthis.testEnvironment.setup.call( this.testEnvironment );\n\t\t} catch( e ) {\n\t\t\tQUnit.pushFailure( \"Setup failed on \" + this.testName + \": \" + e.message, extractStacktrace( e, 1 ) );\n\t\t}\n\t},\n\trun: function() {\n\t\tconfig.current = this;\n\n\t\tvar running = id( \"qunit-testresult\" );\n\n\t\tif ( running ) {\n\t\t\trunning.innerHTML = \"Running: <br/>\" + this.name;\n\t\t}\n\n\t\tif ( this.async ) {\n\t\t\tQUnit.stop();\n\t\t}\n\n\t\tif ( config.notrycatch ) {\n\t\t\tthis.callback.call( this.testEnvironment, QUnit.assert );\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.callback.call( this.testEnvironment, QUnit.assert );\n\t\t} catch( e ) {\n\t\t\tQUnit.pushFailure( \"Died on test #\" + (this.assertions.length + 1) + \" \" + this.stack + \": \" + e.message, extractStacktrace( e, 0 ) );\n\t\t\t// else next test will carry the responsibility\n\t\t\tsaveGlobal();\n\n\t\t\t// Restart the tests if they're blocking\n\t\t\tif ( config.blocking ) {\n\t\t\t\tQUnit.start();\n\t\t\t}\n\t\t}\n\t},\n\tteardown: function() {\n\t\tconfig.current = this;\n\t\tif ( config.notrycatch ) {\n\t\t\tthis.testEnvironment.teardown.call( this.testEnvironment );\n\t\t\treturn;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tthis.testEnvironment.teardown.call( this.testEnvironment );\n\t\t\t} catch( e ) {\n\t\t\t\tQUnit.pushFailure( \"Teardown failed on \" + this.testName + \": \" + e.message, extractStacktrace( e, 1 ) );\n\t\t\t}\n\t\t}\n\t\tcheckPollution();\n\t},\n\tfinish: function() {\n\t\tconfig.current = this;\n\t\tif ( config.requireExpects && this.expected == null ) {\n\t\t\tQUnit.pushFailure( \"Expected number of assertions to be defined, but expect() was not called.\", this.stack );\n\t\t} else if ( this.expected != null && this.expected != this.assertions.length ) {\n\t\t\tQUnit.pushFailure( \"Expected \" + this.expected + \" assertions, but \" + this.assertions.length + \" were run\", this.stack );\n\t\t} else if ( this.expected == null && !this.assertions.length ) {\n\t\t\tQUnit.pushFailure( \"Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.\", this.stack );\n\t\t}\n\n\t\tvar assertion, a, b, i, li, ol,\n\t\t\ttest = this,\n\t\t\tgood = 0,\n\t\t\tbad = 0,\n\t\t\ttests = id( \"qunit-tests\" );\n\n\t\tconfig.stats.all += this.assertions.length;\n\t\tconfig.moduleStats.all += this.assertions.length;\n\n\t\tif ( tests ) {\n\t\t\tol = document.createElement( \"ol\" );\n\n\t\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\t\tassertion = this.assertions[i];\n\n\t\t\t\tli = document.createElement( \"li\" );\n\t\t\t\tli.className = assertion.result ? \"pass\" : \"fail\";\n\t\t\t\tli.innerHTML = assertion.message || ( assertion.result ? \"okay\" : \"failed\" );\n\t\t\t\tol.appendChild( li );\n\n\t\t\t\tif ( assertion.result ) {\n\t\t\t\t\tgood++;\n\t\t\t\t} else {\n\t\t\t\t\tbad++;\n\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// store result when possible\n\t\t\tif ( QUnit.config.reorder && defined.sessionStorage ) {\n\t\t\t\tif ( bad ) {\n\t\t\t\t\tsessionStorage.setItem( \"qunit-test-\" + this.module + \"-\" + this.testName, bad );\n\t\t\t\t} else {\n\t\t\t\t\tsessionStorage.removeItem( \"qunit-test-\" + this.module + \"-\" + this.testName );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( bad === 0 ) {\n\t\t\t\tol.style.display = \"none\";\n\t\t\t}\n\n\t\t\t// `b` initialized at top of scope\n\t\t\tb = document.createElement( \"strong\" );\n\t\t\tb.innerHTML = this.name + \" <b class='counts'>(<b class='failed'>\" + bad + \"</b>, <b class='passed'>\" + good + \"</b>, \" + this.assertions.length + \")</b>\";\n\n\t\t\taddEvent(b, \"click\", function() {\n\t\t\t\tvar next = b.nextSibling.nextSibling,\n\t\t\t\t\tdisplay = next.style.display;\n\t\t\t\tnext.style.display = display === \"none\" ? \"block\" : \"none\";\n\t\t\t});\n\n\t\t\taddEvent(b, \"dblclick\", function( e ) {\n\t\t\t\tvar target = e && e.target ? e.target : window.event.srcElement;\n\t\t\t\tif ( target.nodeName.toLowerCase() == \"span\" || target.nodeName.toLowerCase() == \"b\" ) {\n\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t}\n\t\t\t\tif ( window.location && target.nodeName.toLowerCase() === \"strong\" ) {\n\t\t\t\t\twindow.location = QUnit.url({ testNumber: test.testNumber });\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// `li` initialized at top of scope\n\t\t\tli = id( this.id );\n\t\t\tli.className = bad ? \"fail\" : \"pass\";\n\t\t\tli.removeChild( li.firstChild );\n\t\t\ta = li.firstChild;\n\t\t\tli.appendChild( b );\n\t\t\tli.appendChild ( a );\n\t\t\tli.appendChild( ol );\n\n\t\t} else {\n\t\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\t\tif ( !this.assertions[i].result ) {\n\t\t\t\t\tbad++;\n\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trunLoggingCallbacks( \"testDone\", QUnit, {\n\t\t\tname: this.testName,\n\t\t\tmodule: this.module,\n\t\t\tfailed: bad,\n\t\t\tpassed: this.assertions.length - bad,\n\t\t\ttotal: this.assertions.length\n\t\t});\n\n\t\tQUnit.reset();\n\n\t\tconfig.current = undefined;\n\t},\n\n\tqueue: function() {\n\t\tvar bad,\n\t\t\ttest = this;\n\n\t\tsynchronize(function() {\n\t\t\ttest.init();\n\t\t});\n\t\tfunction run() {\n\t\t\t// each of these can by async\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.setup();\n\t\t\t});\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.run();\n\t\t\t});\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.teardown();\n\t\t\t});\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.finish();\n\t\t\t});\n\t\t}\n\n\t\t// `bad` initialized at top of scope\n\t\t// defer when previous test run passed, if storage is available\n\t\tbad = QUnit.config.reorder && defined.sessionStorage &&\n\t\t\t\t\t\t+sessionStorage.getItem( \"qunit-test-\" + this.module + \"-\" + this.testName );\n\n\t\tif ( bad ) {\n\t\t\trun();\n\t\t} else {\n\t\t\tsynchronize( run, true );\n\t\t}\n\t}\n};\n\n// Root QUnit object.\n// `QUnit` initialized at top of scope\nQUnit = {\n\n\t// call on start of module test to prepend name to all tests\n\tmodule: function( name, testEnvironment ) {\n\t\tconfig.currentModule = name;\n\t\tconfig.currentModuleTestEnviroment = testEnvironment;\n\t},\n\n\tasyncTest: function( testName, expected, callback ) {\n\t\tif ( arguments.length === 2 ) {\n\t\t\tcallback = expected;\n\t\t\texpected = null;\n\t\t}\n\n\t\tQUnit.test( testName, expected, callback, true );\n\t},\n\n\ttest: function( testName, expected, callback, async ) {\n\t\tvar test,\n\t\t\tname = \"<span class='test-name'>\" + escapeInnerText( testName ) + \"</span>\";\n\n\t\tif ( arguments.length === 2 ) {\n\t\t\tcallback = expected;\n\t\t\texpected = null;\n\t\t}\n\n\t\tif ( config.currentModule ) {\n\t\t\tname = \"<span class='module-name'>\" + config.currentModule + \"</span>: \" + name;\n\t\t}\n\n\t\ttest = new Test({\n\t\t\tname: name,\n\t\t\ttestName: testName,\n\t\t\texpected: expected,\n\t\t\tasync: async,\n\t\t\tcallback: callback,\n\t\t\tmodule: config.currentModule,\n\t\t\tmoduleTestEnvironment: config.currentModuleTestEnviroment,\n\t\t\tstack: sourceFromStacktrace( 2 )\n\t\t});\n\n\t\tif ( !validTest( test ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttest.queue();\n\t},\n\n\t// Specify the number of expected assertions to gurantee that failed test (no assertions are run at all) don't slip through.\n\texpect: function( asserts ) {\n\t\tconfig.current.expected = asserts;\n\t},\n\n\tstart: function( count ) {\n\t\tconfig.semaphore -= count || 1;\n\t\t// don't start until equal number of stop-calls\n\t\tif ( config.semaphore > 0 ) {\n\t\t\treturn;\n\t\t}\n\t\t// ignore if start is called more often then stop\n\t\tif ( config.semaphore < 0 ) {\n\t\t\tconfig.semaphore = 0;\n\t\t}\n\t\t// A slight delay, to avoid any current callbacks\n\t\tif ( defined.setTimeout ) {\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tif ( config.semaphore > 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( config.timeout ) {\n\t\t\t\t\tclearTimeout( config.timeout );\n\t\t\t\t}\n\n\t\t\t\tconfig.blocking = false;\n\t\t\t\tprocess( true );\n\t\t\t}, 13);\n\t\t} else {\n\t\t\tconfig.blocking = false;\n\t\t\tprocess( true );\n\t\t}\n\t},\n\n\tstop: function( count ) {\n\t\tconfig.semaphore += count || 1;\n\t\tconfig.blocking = true;\n\n\t\tif ( config.testTimeout && defined.setTimeout ) {\n\t\t\tclearTimeout( config.timeout );\n\t\t\tconfig.timeout = window.setTimeout(function() {\n\t\t\t\tQUnit.ok( false, \"Test timed out\" );\n\t\t\t\tconfig.semaphore = 1;\n\t\t\t\tQUnit.start();\n\t\t\t}, config.testTimeout );\n\t\t}\n\t}\n};\n\n// Asssert helpers\n// All of these must call either QUnit.push() or manually do:\n// - runLoggingCallbacks( \"log\", .. );\n// - config.current.assertions.push({ .. });\nQUnit.assert = {\n\t/**\n\t * Asserts rough true-ish result.\n\t * @name ok\n\t * @function\n\t * @example ok( \"asdfasdf\".length > 5, \"There must be at least 5 chars\" );\n\t */\n\tok: function( result, msg ) {\n\t\tif ( !config.current ) {\n\t\t\tthrow new Error( \"ok() assertion outside test context, was \" + sourceFromStacktrace(2) );\n\t\t}\n\t\tresult = !!result;\n\n\t\tvar source,\n\t\t\tdetails = {\n\t\t\t\tresult: result,\n\t\t\t\tmessage: msg\n\t\t\t};\n\n\t\tmsg = escapeInnerText( msg || (result ? \"okay\" : \"failed\" ) );\n\t\tmsg = \"<span class='test-message'>\" + msg + \"</span>\";\n\n\t\tif ( !result ) {\n\t\t\tsource = sourceFromStacktrace( 2 );\n\t\t\tif ( source ) {\n\t\t\t\tdetails.source = source;\n\t\t\t\tmsg += \"<table><tr class='test-source'><th>Source: </th><td><pre>\" + escapeInnerText( source ) + \"</pre></td></tr></table>\";\n\t\t\t}\n\t\t}\n\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\t\tconfig.current.assertions.push({\n\t\t\tresult: result,\n\t\t\tmessage: msg\n\t\t});\n\t},\n\n\t/**\n\t * Assert that the first two arguments are equal, with an optional message.\n\t * Prints out both actual and expected values.\n\t * @name equal\n\t * @function\n\t * @example equal( format( \"Received {0} bytes.\", 2), \"Received 2 bytes.\", \"format() replaces {0} with next argument\" );\n\t */\n\tequal: function( actual, expected, message ) {\n\t\tQUnit.push( expected == actual, actual, expected, message );\n\t},\n\n\t/**\n\t * @name notEqual\n\t * @function\n\t */\n\tnotEqual: function( actual, expected, message ) {\n\t\tQUnit.push( expected != actual, actual, expected, message );\n\t},\n\n\t/**\n\t * @name deepEqual\n\t * @function\n\t */\n\tdeepEqual: function( actual, expected, message ) {\n\t\tQUnit.push( QUnit.equiv(actual, expected), actual, expected, message );\n\t},\n\n\t/**\n\t * @name notDeepEqual\n\t * @function\n\t */\n\tnotDeepEqual: function( actual, expected, message ) {\n\t\tQUnit.push( !QUnit.equiv(actual, expected), actual, expected, message );\n\t},\n\n\t/**\n\t * @name strictEqual\n\t * @function\n\t */\n\tstrictEqual: function( actual, expected, message ) {\n\t\tQUnit.push( expected === actual, actual, expected, message );\n\t},\n\n\t/**\n\t * @name notStrictEqual\n\t * @function\n\t */\n\tnotStrictEqual: function( actual, expected, message ) {\n\t\tQUnit.push( expected !== actual, actual, expected, message );\n\t},\n\n\tthrows: function( block, expected, message ) {\n\t\tvar actual,\n\t\t\tok = false;\n\n\t\t// 'expected' is optional\n\t\tif ( typeof expected === \"string\" ) {\n\t\t\tmessage = expected;\n\t\t\texpected = null;\n\t\t}\n\n\t\tconfig.current.ignoreGlobalErrors = true;\n\t\ttry {\n\t\t\tblock.call( config.current.testEnvironment );\n\t\t} catch (e) {\n\t\t\tactual = e;\n\t\t}\n\t\tconfig.current.ignoreGlobalErrors = false;\n\n\t\tif ( actual ) {\n\t\t\t// we don't want to validate thrown error\n\t\t\tif ( !expected ) {\n\t\t\t\tok = true;\n\t\t\t// expected is a regexp\n\t\t\t} else if ( QUnit.objectType( expected ) === \"regexp\" ) {\n\t\t\t\tok = expected.test( actual );\n\t\t\t// expected is a constructor\n\t\t\t} else if ( actual instanceof expected ) {\n\t\t\t\tok = true;\n\t\t\t// expected is a validation function which returns true is validation passed\n\t\t\t} else if ( expected.call( {}, actual ) === true ) {\n\t\t\t\tok = true;\n\t\t\t}\n\n\t\t\tQUnit.push( ok, actual, null, message );\n\t\t} else {\n\t\t\tQUnit.pushFailure( message, null, 'No exception was thrown.' );\n\t\t}\n\t}\n};\n\n/**\n * @deprecate since 1.8.0\n * Kept assertion helpers in root for backwards compatibility\n */\nextend( QUnit, QUnit.assert );\n\n/**\n * @deprecated since 1.9.0\n * Kept global \"raises()\" for backwards compatibility\n */\nQUnit.raises = QUnit.assert.throws;\n\n/**\n * @deprecated since 1.0.0, replaced with error pushes since 1.3.0\n * Kept to avoid TypeErrors for undefined methods.\n */\nQUnit.equals = function() {\n\tQUnit.push( false, false, false, \"QUnit.equals has been deprecated since 2009 (e88049a0), use QUnit.equal instead\" );\n};\nQUnit.same = function() {\n\tQUnit.push( false, false, false, \"QUnit.same has been deprecated since 2009 (e88049a0), use QUnit.deepEqual instead\" );\n};\n\n// We want access to the constructor's prototype\n(function() {\n\tfunction F() {}\n\tF.prototype = QUnit;\n\tQUnit = new F();\n\t// Make F QUnit's constructor so that we can add to the prototype later\n\tQUnit.constructor = F;\n}());\n\n/**\n * Config object: Maintain internal state\n * Later exposed as QUnit.config\n * `config` initialized at top of scope\n */\nconfig = {\n\t// The queue of tests to run\n\tqueue: [],\n\n\t// block until document ready\n\tblocking: true,\n\n\t// when enabled, show only failing tests\n\t// gets persisted through sessionStorage and can be changed in UI via checkbox\n\thidepassed: false,\n\n\t// by default, run previously failed tests first\n\t// very useful in combination with \"Hide passed tests\" checked\n\treorder: true,\n\n\t// by default, modify document.title when suite is done\n\taltertitle: true,\n\n\t// when enabled, all tests must call expect()\n\trequireExpects: false,\n\n\t// add checkboxes that are persisted in the query-string\n\t// when enabled, the id is set to `true` as a `QUnit.config` property\n\turlConfig: [\n\t\t{\n\t\t\tid: \"noglobals\",\n\t\t\tlabel: \"Check for Globals\",\n\t\t\ttooltip: \"Enabling this will test if any test introduces new properties on the `window` object. Stored as query-strings.\"\n\t\t},\n\t\t{\n\t\t\tid: \"notrycatch\",\n\t\t\tlabel: \"No try-catch\",\n\t\t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings.\"\n\t\t}\n\t],\n\n\t// logging callback queues\n\tbegin: [],\n\tdone: [],\n\tlog: [],\n\ttestStart: [],\n\ttestDone: [],\n\tmoduleStart: [],\n\tmoduleDone: []\n};\n\n// Initialize more QUnit.config and QUnit.urlParams\n(function() {\n\tvar i,\n\t\tlocation = window.location || { search: \"\", protocol: \"file:\" },\n\t\tparams = location.search.slice( 1 ).split( \"&\" ),\n\t\tlength = params.length,\n\t\turlParams = {},\n\t\tcurrent;\n\n\tif ( params[ 0 ] ) {\n\t\tfor ( i = 0; i < length; i++ ) {\n\t\t\tcurrent = params[ i ].split( \"=\" );\n\t\t\tcurrent[ 0 ] = decodeURIComponent( current[ 0 ] );\n\t\t\t// allow just a key to turn on a flag, e.g., test.html?noglobals\n\t\t\tcurrent[ 1 ] = current[ 1 ] ? decodeURIComponent( current[ 1 ] ) : true;\n\t\t\turlParams[ current[ 0 ] ] = current[ 1 ];\n\t\t}\n\t}\n\n\tQUnit.urlParams = urlParams;\n\n\t// String search anywhere in moduleName+testName\n\tconfig.filter = urlParams.filter;\n\n\t// Exact match of the module name\n\tconfig.module = urlParams.module;\n\n\tconfig.testNumber = parseInt( urlParams.testNumber, 10 ) || null;\n\n\t// Figure out if we're running the tests from a server or not\n\tQUnit.isLocal = location.protocol === \"file:\";\n}());\n\n// Export global variables, unless an 'exports' object exists,\n// in that case we assume we're in CommonJS (dealt with on the bottom of the script)\nif ( typeof exports === \"undefined\" ) {\n\textend( window, QUnit );\n\n\t// Expose QUnit object\n\twindow.QUnit = QUnit;\n}\n\n// Extend QUnit object,\n// these after set here because they should not be exposed as global functions\nextend( QUnit, {\n\tconfig: config,\n\n\t// Initialize the configuration options\n\tinit: function() {\n\t\textend( config, {\n\t\t\tstats: { all: 0, bad: 0 },\n\t\t\tmoduleStats: { all: 0, bad: 0 },\n\t\t\tstarted: +new Date(),\n\t\t\tupdateRate: 1000,\n\t\t\tblocking: false,\n\t\t\tautostart: true,\n\t\t\tautorun: false,\n\t\t\tfilter: \"\",\n\t\t\tqueue: [],\n\t\t\tsemaphore: 0\n\t\t});\n\n\t\tvar tests, banner, result,\n\t\t\tqunit = id( \"qunit\" );\n\n\t\tif ( qunit ) {\n\t\t\tqunit.innerHTML =\n\t\t\t\t\"<h1 id='qunit-header'>\" + escapeInnerText( document.title ) + \"</h1>\" +\n\t\t\t\t\"<h2 id='qunit-banner'></h2>\" +\n\t\t\t\t\"<div id='qunit-testrunner-toolbar'></div>\" +\n\t\t\t\t\"<h2 id='qunit-userAgent'></h2>\" +\n\t\t\t\t\"<ol id='qunit-tests'></ol>\";\n\t\t}\n\n\t\ttests = id( \"qunit-tests\" );\n\t\tbanner = id( \"qunit-banner\" );\n\t\tresult = id( \"qunit-testresult\" );\n\n\t\tif ( tests ) {\n\t\t\ttests.innerHTML = \"\";\n\t\t}\n\n\t\tif ( banner ) {\n\t\t\tbanner.className = \"\";\n\t\t}\n\n\t\tif ( result ) {\n\t\t\tresult.parentNode.removeChild( result );\n\t\t}\n\n\t\tif ( tests ) {\n\t\t\tresult = document.createElement( \"p\" );\n\t\t\tresult.id = \"qunit-testresult\";\n\t\t\tresult.className = \"result\";\n\t\t\ttests.parentNode.insertBefore( result, tests );\n\t\t\tresult.innerHTML = \"Running...<br/>&nbsp;\";\n\t\t}\n\t},\n\n\t// Resets the test setup. Useful for tests that modify the DOM.\n\t// If jQuery is available, uses jQuery's html(), otherwise just innerHTML.\n\treset: function() {\n\t\tvar fixture;\n\n\t\tif ( window.jQuery ) {\n\t\t\tjQuery( \"#qunit-fixture\" ).html( config.fixture );\n\t\t} else {\n\t\t\tfixture = id( \"qunit-fixture\" );\n\t\t\tif ( fixture ) {\n\t\t\t\tfixture.innerHTML = config.fixture;\n\t\t\t}\n\t\t}\n\t},\n\n\t// Trigger an event on an element.\n\t// @example triggerEvent( document.body, \"click\" );\n\ttriggerEvent: function( elem, type, event ) {\n\t\tif ( document.createEvent ) {\n\t\t\tevent = document.createEvent( \"MouseEvents\" );\n\t\t\tevent.initMouseEvent(type, true, true, elem.ownerDocument.defaultView,\n\t\t\t\t0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\n\t\t\telem.dispatchEvent( event );\n\t\t} else if ( elem.fireEvent ) {\n\t\t\telem.fireEvent( \"on\" + type );\n\t\t}\n\t},\n\n\t// Safe object type checking\n\tis: function( type, obj ) {\n\t\treturn QUnit.objectType( obj ) == type;\n\t},\n\n\tobjectType: function( obj ) {\n\t\tif ( typeof obj === \"undefined\" ) {\n\t\t\t\treturn \"undefined\";\n\t\t// consider: typeof null === object\n\t\t}\n\t\tif ( obj === null ) {\n\t\t\t\treturn \"null\";\n\t\t}\n\n\t\tvar type = toString.call( obj ).match(/^\\[object\\s(.*)\\]$/)[1] || \"\";\n\n\t\tswitch ( type ) {\n\t\t\tcase \"Number\":\n\t\t\t\tif ( isNaN(obj) ) {\n\t\t\t\t\treturn \"nan\";\n\t\t\t\t}\n\t\t\t\treturn \"number\";\n\t\t\tcase \"String\":\n\t\t\tcase \"Boolean\":\n\t\t\tcase \"Array\":\n\t\t\tcase \"Date\":\n\t\t\tcase \"RegExp\":\n\t\t\tcase \"Function\":\n\t\t\t\treturn type.toLowerCase();\n\t\t}\n\t\tif ( typeof obj === \"object\" ) {\n\t\t\treturn \"object\";\n\t\t}\n\t\treturn undefined;\n\t},\n\n\tpush: function( result, actual, expected, message ) {\n\t\tif ( !config.current ) {\n\t\t\tthrow new Error( \"assertion outside test context, was \" + sourceFromStacktrace() );\n\t\t}\n\n\t\tvar output, source,\n\t\t\tdetails = {\n\t\t\t\tresult: result,\n\t\t\t\tmessage: message,\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expected\n\t\t\t};\n\n\t\tmessage = escapeInnerText( message ) || ( result ? \"okay\" : \"failed\" );\n\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\toutput = message;\n\n\t\tif ( !result ) {\n\t\t\texpected = escapeInnerText( QUnit.jsDump.parse(expected) );\n\t\t\tactual = escapeInnerText( QUnit.jsDump.parse(actual) );\n\t\t\toutput += \"<table><tr class='test-expected'><th>Expected: </th><td><pre>\" + expected + \"</pre></td></tr>\";\n\n\t\t\tif ( actual != expected ) {\n\t\t\t\toutput += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + actual + \"</pre></td></tr>\";\n\t\t\t\toutput += \"<tr class='test-diff'><th>Diff: </th><td><pre>\" + QUnit.diff( expected, actual ) + \"</pre></td></tr>\";\n\t\t\t}\n\n\t\t\tsource = sourceFromStacktrace();\n\n\t\t\tif ( source ) {\n\t\t\t\tdetails.source = source;\n\t\t\t\toutput += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeInnerText( source ) + \"</pre></td></tr>\";\n\t\t\t}\n\n\t\t\toutput += \"</table>\";\n\t\t}\n\n\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\n\t\tconfig.current.assertions.push({\n\t\t\tresult: !!result,\n\t\t\tmessage: output\n\t\t});\n\t},\n\n\tpushFailure: function( message, source, actual ) {\n\t\tif ( !config.current ) {\n\t\t\tthrow new Error( \"pushFailure() assertion outside test context, was \" + sourceFromStacktrace(2) );\n\t\t}\n\n\t\tvar output,\n\t\t\tdetails = {\n\t\t\t\tresult: false,\n\t\t\t\tmessage: message\n\t\t\t};\n\n\t\tmessage = escapeInnerText( message ) || \"error\";\n\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\toutput = message;\n\n\t\toutput += \"<table>\";\n\n\t\tif ( actual ) {\n\t\t\toutput += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + escapeInnerText( actual ) + \"</pre></td></tr>\";\n\t\t}\n\n\t\tif ( source ) {\n\t\t\tdetails.source = source;\n\t\t\toutput += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeInnerText( source ) + \"</pre></td></tr>\";\n\t\t}\n\n\t\toutput += \"</table>\";\n\n\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\n\t\tconfig.current.assertions.push({\n\t\t\tresult: false,\n\t\t\tmessage: output\n\t\t});\n\t},\n\n\turl: function( params ) {\n\t\tparams = extend( extend( {}, QUnit.urlParams ), params );\n\t\tvar key,\n\t\t\tquerystring = \"?\";\n\n\t\tfor ( key in params ) {\n\t\t\tif ( !hasOwn.call( params, key ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tquerystring += encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( params[ key ] ) + \"&\";\n\t\t}\n\t\treturn window.location.pathname + querystring.slice( 0, -1 );\n\t},\n\n\textend: extend,\n\tid: id,\n\taddEvent: addEvent\n\t// load, equiv, jsDump, diff: Attached later\n});\n\n/**\n * @deprecated: Created for backwards compatibility with test runner that set the hook function\n * into QUnit.{hook}, instead of invoking it and passing the hook function.\n * QUnit.constructor is set to the empty F() above so that we can add to it's prototype here.\n * Doing this allows us to tell if the following methods have been overwritten on the actual\n * QUnit object.\n */\nextend( QUnit.constructor.prototype, {\n\n\t// Logging callbacks; all receive a single argument with the listed properties\n\t// run test/logs.html for any related changes\n\tbegin: registerLoggingCallback( \"begin\" ),\n\n\t// done: { failed, passed, total, runtime }\n\tdone: registerLoggingCallback( \"done\" ),\n\n\t// log: { result, actual, expected, message }\n\tlog: registerLoggingCallback( \"log\" ),\n\n\t// testStart: { name }\n\ttestStart: registerLoggingCallback( \"testStart\" ),\n\n\t// testDone: { name, failed, passed, total }\n\ttestDone: registerLoggingCallback( \"testDone\" ),\n\n\t// moduleStart: { name }\n\tmoduleStart: registerLoggingCallback( \"moduleStart\" ),\n\n\t// moduleDone: { name, failed, passed, total }\n\tmoduleDone: registerLoggingCallback( \"moduleDone\" )\n});\n\nif ( typeof document === \"undefined\" || document.readyState === \"complete\" ) {\n\tconfig.autorun = true;\n}\n\nQUnit.load = function() {\n\trunLoggingCallbacks( \"begin\", QUnit, {} );\n\n\t// Initialize the config, saving the execution queue\n\tvar banner, filter, i, label, len, main, ol, toolbar, userAgent, val, urlConfigCheckboxes,\n\t\turlConfigHtml = \"\",\n\t\toldconfig = extend( {}, config );\n\n\tQUnit.init();\n\textend(config, oldconfig);\n\n\tconfig.blocking = false;\n\n\tlen = config.urlConfig.length;\n\n\tfor ( i = 0; i < len; i++ ) {\n\t\tval = config.urlConfig[i];\n\t\tif ( typeof val === \"string\" ) {\n\t\t\tval = {\n\t\t\t\tid: val,\n\t\t\t\tlabel: val,\n\t\t\t\ttooltip: \"[no tooltip available]\"\n\t\t\t};\n\t\t}\n\t\tconfig[ val.id ] = QUnit.urlParams[ val.id ];\n\t\turlConfigHtml += \"<input id='qunit-urlconfig-\" + val.id + \"' name='\" + val.id + \"' type='checkbox'\" + ( config[ val.id ] ? \" checked='checked'\" : \"\" ) + \" title='\" + val.tooltip + \"'><label for='qunit-urlconfig-\" + val.id + \"' title='\" + val.tooltip + \"'>\" + val.label + \"</label>\";\n\t}\n\n\t// `userAgent` initialized at top of scope\n\tuserAgent = id( \"qunit-userAgent\" );\n\tif ( userAgent ) {\n\t\tuserAgent.innerHTML = navigator.userAgent;\n\t}\n\n\t// `banner` initialized at top of scope\n\tbanner = id( \"qunit-header\" );\n\tif ( banner ) {\n\t\tbanner.innerHTML = \"<a href='\" + QUnit.url({ filter: undefined, module: undefined, testNumber: undefined }) + \"'>\" + banner.innerHTML + \"</a> \";\n\t}\n\n\t// `toolbar` initialized at top of scope\n\ttoolbar = id( \"qunit-testrunner-toolbar\" );\n\tif ( toolbar ) {\n\t\t// `filter` initialized at top of scope\n\t\tfilter = document.createElement( \"input\" );\n\t\tfilter.type = \"checkbox\";\n\t\tfilter.id = \"qunit-filter-pass\";\n\n\t\taddEvent( filter, \"click\", function() {\n\t\t\tvar tmp,\n\t\t\t\tol = document.getElementById( \"qunit-tests\" );\n\n\t\t\tif ( filter.checked ) {\n\t\t\t\tol.className = ol.className + \" hidepass\";\n\t\t\t} else {\n\t\t\t\ttmp = \" \" + ol.className.replace( /[\\n\\t\\r]/g, \" \" ) + \" \";\n\t\t\t\tol.className = tmp.replace( / hidepass /, \" \" );\n\t\t\t}\n\t\t\tif ( defined.sessionStorage ) {\n\t\t\t\tif (filter.checked) {\n\t\t\t\t\tsessionStorage.setItem( \"qunit-filter-passed-tests\", \"true\" );\n\t\t\t\t} else {\n\t\t\t\t\tsessionStorage.removeItem( \"qunit-filter-passed-tests\" );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif ( config.hidepassed || defined.sessionStorage && sessionStorage.getItem( \"qunit-filter-passed-tests\" ) ) {\n\t\t\tfilter.checked = true;\n\t\t\t// `ol` initialized at top of scope\n\t\t\tol = document.getElementById( \"qunit-tests\" );\n\t\t\tol.className = ol.className + \" hidepass\";\n\t\t}\n\t\ttoolbar.appendChild( filter );\n\n\t\t// `label` initialized at top of scope\n\t\tlabel = document.createElement( \"label\" );\n\t\tlabel.setAttribute( \"for\", \"qunit-filter-pass\" );\n\t\tlabel.setAttribute( \"title\", \"Only show tests and assertons that fail. Stored in sessionStorage.\" );\n\t\tlabel.innerHTML = \"Hide passed tests\";\n\t\ttoolbar.appendChild( label );\n\n\t\turlConfigCheckboxes = document.createElement( 'span' );\n\t\turlConfigCheckboxes.innerHTML = urlConfigHtml;\n\t\taddEvent( urlConfigCheckboxes, \"change\", function( event ) {\n\t\t\tvar params = {};\n\t\t\tparams[ event.target.name ] = event.target.checked ? true : undefined;\n\t\t\twindow.location = QUnit.url( params );\n\t\t});\n\t\ttoolbar.appendChild( urlConfigCheckboxes );\n\t}\n\n\t// `main` initialized at top of scope\n\tmain = id( \"qunit-fixture\" );\n\tif ( main ) {\n\t\tconfig.fixture = main.innerHTML;\n\t}\n\n\tif ( config.autostart ) {\n\t\tQUnit.start();\n\t}\n};\n\naddEvent( window, \"load\", QUnit.load );\n\n// `onErrorFnPrev` initialized at top of scope\n// Preserve other handlers\nonErrorFnPrev = window.onerror;\n\n// Cover uncaught exceptions\n// Returning true will surpress the default browser handler,\n// returning false will let it run.\nwindow.onerror = function ( error, filePath, linerNr ) {\n\tvar ret = false;\n\tif ( onErrorFnPrev ) {\n\t\tret = onErrorFnPrev( error, filePath, linerNr );\n\t}\n\n\t// Treat return value as window.onerror itself does,\n\t// Only do our handling if not surpressed.\n\tif ( ret !== true ) {\n\t\tif ( QUnit.config.current ) {\n\t\t\tif ( QUnit.config.current.ignoreGlobalErrors ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t} else {\n\t\t\tQUnit.test( \"global failure\", function() {\n\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t});\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn ret;\n};\n\nfunction done() {\n\tconfig.autorun = true;\n\n\t// Log the last module results\n\tif ( config.currentModule ) {\n\t\trunLoggingCallbacks( \"moduleDone\", QUnit, {\n\t\t\tname: config.currentModule,\n\t\t\tfailed: config.moduleStats.bad,\n\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\ttotal: config.moduleStats.all\n\t\t});\n\t}\n\n\tvar i, key,\n\t\tbanner = id( \"qunit-banner\" ),\n\t\ttests = id( \"qunit-tests\" ),\n\t\truntime = +new Date() - config.started,\n\t\tpassed = config.stats.all - config.stats.bad,\n\t\thtml = [\n\t\t\t\"Tests completed in \",\n\t\t\truntime,\n\t\t\t\" milliseconds.<br/>\",\n\t\t\t\"<span class='passed'>\",\n\t\t\tpassed,\n\t\t\t\"</span> tests of <span class='total'>\",\n\t\t\tconfig.stats.all,\n\t\t\t\"</span> passed, <span class='failed'>\",\n\t\t\tconfig.stats.bad,\n\t\t\t\"</span> failed.\"\n\t\t].join( \"\" );\n\n\tif ( banner ) {\n\t\tbanner.className = ( config.stats.bad ? \"qunit-fail\" : \"qunit-pass\" );\n\t}\n\n\tif ( tests ) {\n\t\tid( \"qunit-testresult\" ).innerHTML = html;\n\t}\n\n\tif ( config.altertitle && typeof document !== \"undefined\" && document.title ) {\n\t\t// show â for good, â for bad suite result in title\n\t\t// use escape sequences in case file gets loaded with non-utf-8-charset\n\t\tdocument.title = [\n\t\t\t( config.stats.bad ? \"\\u2716\" : \"\\u2714\" ),\n\t\t\tdocument.title.replace( /^[\\u2714\\u2716] /i, \"\" )\n\t\t].join( \" \" );\n\t}\n\n\t// clear own sessionStorage items if all tests passed\n\tif ( config.reorder && defined.sessionStorage && config.stats.bad === 0 ) {\n\t\t// `key` & `i` initialized at top of scope\n\t\tfor ( i = 0; i < sessionStorage.length; i++ ) {\n\t\t\tkey = sessionStorage.key( i++ );\n\t\t\tif ( key.indexOf( \"qunit-test-\" ) === 0 ) {\n\t\t\t\tsessionStorage.removeItem( key );\n\t\t\t}\n\t\t}\n\t}\n\n\trunLoggingCallbacks( \"done\", QUnit, {\n\t\tfailed: config.stats.bad,\n\t\tpassed: passed,\n\t\ttotal: config.stats.all,\n\t\truntime: runtime\n\t});\n}\n\n/** @return Boolean: true if this test should be ran */\nfunction validTest( test ) {\n\tvar include,\n\t\tfilter = config.filter && config.filter.toLowerCase(),\n\t\tmodule = config.module && config.module.toLowerCase(),\n\t\tfullName = (test.module + \": \" + test.testName).toLowerCase();\n\n\tif ( config.testNumber ) {\n\t\treturn test.testNumber === config.testNumber;\n\t}\n\n\tif ( module && ( !test.module || test.module.toLowerCase() !== module ) ) {\n\t\treturn false;\n\t}\n\n\tif ( !filter ) {\n\t\treturn true;\n\t}\n\n\tinclude = filter.charAt( 0 ) !== \"!\";\n\tif ( !include ) {\n\t\tfilter = filter.slice( 1 );\n\t}\n\n\t// If the filter matches, we need to honour include\n\tif ( fullName.indexOf( filter ) !== -1 ) {\n\t\treturn include;\n\t}\n\n\t// Otherwise, do the opposite\n\treturn !include;\n}\n\n// so far supports only Firefox, Chrome and Opera (buggy), Safari (for real exceptions)\n// Later Safari and IE10 are supposed to support error.stack as well\n// See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\nfunction extractStacktrace( e, offset ) {\n\toffset = offset === undefined ? 3 : offset;\n\n\tvar stack, include, i, regex;\n\n\tif ( e.stacktrace ) {\n\t\t// Opera\n\t\treturn e.stacktrace.split( \"\\n\" )[ offset + 3 ];\n\t} else if ( e.stack ) {\n\t\t// Firefox, Chrome\n\t\tstack = e.stack.split( \"\\n\" );\n\t\tif (/^error$/i.test( stack[0] ) ) {\n\t\t\tstack.shift();\n\t\t}\n\t\tif ( fileName ) {\n\t\t\tinclude = [];\n\t\t\tfor ( i = offset; i < stack.length; i++ ) {\n\t\t\t\tif ( stack[ i ].indexOf( fileName ) != -1 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tinclude.push( stack[ i ] );\n\t\t\t}\n\t\t\tif ( include.length ) {\n\t\t\t\treturn include.join( \"\\n\" );\n\t\t\t}\n\t\t}\n\t\treturn stack[ offset ];\n\t} else if ( e.sourceURL ) {\n\t\t// Safari, PhantomJS\n\t\t// hopefully one day Safari provides actual stacktraces\n\t\t// exclude useless self-reference for generated Error objects\n\t\tif ( /qunit.js$/.test( e.sourceURL ) ) {\n\t\t\treturn;\n\t\t}\n\t\t// for actual exceptions, this is useful\n\t\treturn e.sourceURL + \":\" + e.line;\n\t}\n}\nfunction sourceFromStacktrace( offset ) {\n\ttry {\n\t\tthrow new Error();\n\t} catch ( e ) {\n\t\treturn extractStacktrace( e, offset );\n\t}\n}\n\nfunction escapeInnerText( s ) {\n\tif ( !s ) {\n\t\treturn \"\";\n\t}\n\ts = s + \"\";\n\treturn s.replace( /[\\&<>]/g, function( s ) {\n\t\tswitch( s ) {\n\t\t\tcase \"&\": return \"&amp;\";\n\t\t\tcase \"<\": return \"&lt;\";\n\t\t\tcase \">\": return \"&gt;\";\n\t\t\tdefault: return s;\n\t\t}\n\t});\n}\n\nfunction synchronize( callback, last ) {\n\tconfig.queue.push( callback );\n\n\tif ( config.autorun && !config.blocking ) {\n\t\tprocess( last );\n\t}\n}\n\nfunction process( last ) {\n\tfunction next() {\n\t\tprocess( last );\n\t}\n\tvar start = new Date().getTime();\n\tconfig.depth = config.depth ? config.depth + 1 : 1;\n\n\twhile ( config.queue.length && !config.blocking ) {\n\t\tif ( !defined.setTimeout || config.updateRate <= 0 || ( ( new Date().getTime() - start ) < config.updateRate ) ) {\n\t\t\tconfig.queue.shift()();\n\t\t} else {\n\t\t\twindow.setTimeout( next, 13 );\n\t\t\tbreak;\n\t\t}\n\t}\n\tconfig.depth--;\n\tif ( last && !config.blocking && !config.queue.length && config.depth === 0 ) {\n\t\tdone();\n\t}\n}\n\nfunction saveGlobal() {\n\tconfig.pollution = [];\n\n\tif ( config.noglobals ) {\n\t\tfor ( var key in window ) {\n\t\t\t// in Opera sometimes DOM element ids show up here, ignore them\n\t\t\tif ( !hasOwn.call( window, key ) || /^qunit-test-output/.test( key ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconfig.pollution.push( key );\n\t\t}\n\t}\n}\n\nfunction checkPollution( name ) {\n\tvar newGlobals,\n\t\tdeletedGlobals,\n\t\told = config.pollution;\n\n\tsaveGlobal();\n\n\tnewGlobals = diff( config.pollution, old );\n\tif ( newGlobals.length > 0 ) {\n\t\tQUnit.pushFailure( \"Introduced global variable(s): \" + newGlobals.join(\", \") );\n\t}\n\n\tdeletedGlobals = diff( old, config.pollution );\n\tif ( deletedGlobals.length > 0 ) {\n\t\tQUnit.pushFailure( \"Deleted global variable(s): \" + deletedGlobals.join(\", \") );\n\t}\n}\n\n// returns a new Array with the elements that are in a but not in b\nfunction diff( a, b ) {\n\tvar i, j,\n\t\tresult = a.slice();\n\n\tfor ( i = 0; i < result.length; i++ ) {\n\t\tfor ( j = 0; j < b.length; j++ ) {\n\t\t\tif ( result[i] === b[j] ) {\n\t\t\t\tresult.splice( i, 1 );\n\t\t\t\ti--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction extend( a, b ) {\n\tfor ( var prop in b ) {\n\t\tif ( b[ prop ] === undefined ) {\n\t\t\tdelete a[ prop ];\n\n\t\t// Avoid \"Member not found\" error in IE8 caused by setting window.constructor\n\t\t} else if ( prop !== \"constructor\" || a !== window ) {\n\t\t\ta[ prop ] = b[ prop ];\n\t\t}\n\t}\n\n\treturn a;\n}\n\nfunction addEvent( elem, type, fn ) {\n\tif ( elem.addEventListener ) {\n\t\telem.addEventListener( type, fn, false );\n\t} else if ( elem.attachEvent ) {\n\t\telem.attachEvent( \"on\" + type, fn );\n\t} else {\n\t\tfn();\n\t}\n}\n\nfunction id( name ) {\n\treturn !!( typeof document !== \"undefined\" && document && document.getElementById ) &&\n\t\tdocument.getElementById( name );\n}\n\nfunction registerLoggingCallback( key ) {\n\treturn function( callback ) {\n\t\tconfig[key].push( callback );\n\t};\n}\n\n// Supports deprecated method of completely overwriting logging callbacks\nfunction runLoggingCallbacks( key, scope, args ) {\n\t//debugger;\n\tvar i, callbacks;\n\tif ( QUnit.hasOwnProperty( key ) ) {\n\t\tQUnit[ key ].call(scope, args );\n\t} else {\n\t\tcallbacks = config[ key ];\n\t\tfor ( i = 0; i < callbacks.length; i++ ) {\n\t\t\tcallbacks[ i ].call( scope, args );\n\t\t}\n\t}\n}\n\n// Test for equality any JavaScript type.\n// Author: Philippe RathÃ© <prathe@gmail.com>\nQUnit.equiv = (function() {\n\n\t// Call the o related callback with the given arguments.\n\tfunction bindCallbacks( o, callbacks, args ) {\n\t\tvar prop = QUnit.objectType( o );\n\t\tif ( prop ) {\n\t\t\tif ( QUnit.objectType( callbacks[ prop ] ) === \"function\" ) {\n\t\t\t\treturn callbacks[ prop ].apply( callbacks, args );\n\t\t\t} else {\n\t\t\t\treturn callbacks[ prop ]; // or undefined\n\t\t\t}\n\t\t}\n\t}\n\n\t// the real equiv function\n\tvar innerEquiv,\n\t\t// stack to decide between skip/abort functions\n\t\tcallers = [],\n\t\t// stack to avoiding loops from circular referencing\n\t\tparents = [],\n\n\t\tgetProto = Object.getPrototypeOf || function ( obj ) {\n\t\t\treturn obj.__proto__;\n\t\t},\n\t\tcallbacks = (function () {\n\n\t\t\t// for string, boolean, number and null\n\t\t\tfunction useStrictEquality( b, a ) {\n\t\t\t\tif ( b instanceof a.constructor || a instanceof b.constructor ) {\n\t\t\t\t\t// to catch short annotaion VS 'new' annotation of a\n\t\t\t\t\t// declaration\n\t\t\t\t\t// e.g. var i = 1;\n\t\t\t\t\t// var j = new Number(1);\n\t\t\t\t\treturn a == b;\n\t\t\t\t} else {\n\t\t\t\t\treturn a === b;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t\"string\": useStrictEquality,\n\t\t\t\t\"boolean\": useStrictEquality,\n\t\t\t\t\"number\": useStrictEquality,\n\t\t\t\t\"null\": useStrictEquality,\n\t\t\t\t\"undefined\": useStrictEquality,\n\n\t\t\t\t\"nan\": function( b ) {\n\t\t\t\t\treturn isNaN( b );\n\t\t\t\t},\n\n\t\t\t\t\"date\": function( b, a ) {\n\t\t\t\t\treturn QUnit.objectType( b ) === \"date\" && a.valueOf() === b.valueOf();\n\t\t\t\t},\n\n\t\t\t\t\"regexp\": function( b, a ) {\n\t\t\t\t\treturn QUnit.objectType( b ) === \"regexp\" &&\n\t\t\t\t\t\t// the regex itself\n\t\t\t\t\t\ta.source === b.source &&\n\t\t\t\t\t\t// and its modifers\n\t\t\t\t\t\ta.global === b.global &&\n\t\t\t\t\t\t// (gmi) ...\n\t\t\t\t\t\ta.ignoreCase === b.ignoreCase &&\n\t\t\t\t\t\ta.multiline === b.multiline;\n\t\t\t\t},\n\n\t\t\t\t// - skip when the property is a method of an instance (OOP)\n\t\t\t\t// - abort otherwise,\n\t\t\t\t// initial === would have catch identical references anyway\n\t\t\t\t\"function\": function() {\n\t\t\t\t\tvar caller = callers[callers.length - 1];\n\t\t\t\t\treturn caller !== Object && typeof caller !== \"undefined\";\n\t\t\t\t},\n\n\t\t\t\t\"array\": function( b, a ) {\n\t\t\t\t\tvar i, j, len, loop;\n\n\t\t\t\t\t// b could be an object literal here\n\t\t\t\t\tif ( QUnit.objectType( b ) !== \"array\" ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tlen = a.length;\n\t\t\t\t\tif ( len !== b.length ) {\n\t\t\t\t\t\t// safe and faster\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// track reference to avoid circular references\n\t\t\t\t\tparents.push( a );\n\t\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\t\tloop = false;\n\t\t\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\t\t\tif ( parents[j] === a[i] ) {\n\t\t\t\t\t\t\t\tloop = true;// dont rewalk array\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( !loop && !innerEquiv(a[i], b[i]) ) {\n\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tparents.pop();\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\n\t\t\t\t\"object\": function( b, a ) {\n\t\t\t\t\tvar i, j, loop,\n\t\t\t\t\t\t// Default to true\n\t\t\t\t\t\teq = true,\n\t\t\t\t\t\taProperties = [],\n\t\t\t\t\t\tbProperties = [];\n\n\t\t\t\t\t// comparing constructors is more strict than using\n\t\t\t\t\t// instanceof\n\t\t\t\t\tif ( a.constructor !== b.constructor ) {\n\t\t\t\t\t\t// Allow objects with no prototype to be equivalent to\n\t\t\t\t\t\t// objects with Object as their constructor.\n\t\t\t\t\t\tif ( !(( getProto(a) === null && getProto(b) === Object.prototype ) ||\n\t\t\t\t\t\t\t( getProto(b) === null && getProto(a) === Object.prototype ) ) ) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// stack constructor before traversing properties\n\t\t\t\t\tcallers.push( a.constructor );\n\t\t\t\t\t// track reference to avoid circular references\n\t\t\t\t\tparents.push( a );\n\n\t\t\t\t\tfor ( i in a ) { // be strict: don't ensures hasOwnProperty\n\t\t\t\t\t\t\t\t\t// and go deep\n\t\t\t\t\t\tloop = false;\n\t\t\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\t\t\tif ( parents[j] === a[i] ) {\n\t\t\t\t\t\t\t\t// don't go down the same path twice\n\t\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taProperties.push(i); // collect a's properties\n\n\t\t\t\t\t\tif (!loop && !innerEquiv( a[i], b[i] ) ) {\n\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallers.pop(); // unstack, we are done\n\t\t\t\t\tparents.pop();\n\n\t\t\t\t\tfor ( i in b ) {\n\t\t\t\t\t\tbProperties.push( i ); // collect b's properties\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ensures identical properties name\n\t\t\t\t\treturn eq && innerEquiv( aProperties.sort(), bProperties.sort() );\n\t\t\t\t}\n\t\t\t};\n\t\t}());\n\n\tinnerEquiv = function() { // can take multiple arguments\n\t\tvar args = [].slice.apply( arguments );\n\t\tif ( args.length < 2 ) {\n\t\t\treturn true; // end transition\n\t\t}\n\n\t\treturn (function( a, b ) {\n\t\t\tif ( a === b ) {\n\t\t\t\treturn true; // catch the most you can\n\t\t\t} else if ( a === null || b === null || typeof a === \"undefined\" ||\n\t\t\t\t\ttypeof b === \"undefined\" ||\n\t\t\t\t\tQUnit.objectType(a) !== QUnit.objectType(b) ) {\n\t\t\t\treturn false; // don't lose time with error prone cases\n\t\t\t} else {\n\t\t\t\treturn bindCallbacks(a, callbacks, [ b, a ]);\n\t\t\t}\n\n\t\t\t// apply transition with (1..n) arguments\n\t\t}( args[0], args[1] ) && arguments.callee.apply( this, args.splice(1, args.length - 1 )) );\n\t};\n\n\treturn innerEquiv;\n}());\n\n/**\n * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n * http://flesler.blogspot.com Licensed under BSD\n * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n *\n * @projectDescription Advanced and extensible data dumping for Javascript.\n * @version 1.0.0\n * @author Ariel Flesler\n * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n */\nQUnit.jsDump = (function() {\n\tfunction quote( str ) {\n\t\treturn '\"' + str.toString().replace( /\"/g, '\\\\\"' ) + '\"';\n\t}\n\tfunction literal( o ) {\n\t\treturn o + \"\";\n\t}\n\tfunction join( pre, arr, post ) {\n\t\tvar s = jsDump.separator(),\n\t\t\tbase = jsDump.indent(),\n\t\t\tinner = jsDump.indent(1);\n\t\tif ( arr.join ) {\n\t\t\tarr = arr.join( \",\" + s + inner );\n\t\t}\n\t\tif ( !arr ) {\n\t\t\treturn pre + post;\n\t\t}\n\t\treturn [ pre, inner + arr, base + post ].join(s);\n\t}\n\tfunction array( arr, stack ) {\n\t\tvar i = arr.length, ret = new Array(i);\n\t\tthis.up();\n\t\twhile ( i-- ) {\n\t\t\tret[i] = this.parse( arr[i] , undefined , stack);\n\t\t}\n\t\tthis.down();\n\t\treturn join( \"[\", ret, \"]\" );\n\t}\n\n\tvar reName = /^function (\\w+)/,\n\t\tjsDump = {\n\t\t\tparse: function( obj, type, stack ) { //type is used mostly internally, you can fix a (custom)type in advance\n\t\t\t\tstack = stack || [ ];\n\t\t\t\tvar inStack, res,\n\t\t\t\t\tparser = this.parsers[ type || this.typeOf(obj) ];\n\n\t\t\t\ttype = typeof parser;\n\t\t\t\tinStack = inArray( obj, stack );\n\n\t\t\t\tif ( inStack != -1 ) {\n\t\t\t\t\treturn \"recursion(\" + (inStack - stack.length) + \")\";\n\t\t\t\t}\n\t\t\t\t//else\n\t\t\t\tif ( type == \"function\" )  {\n\t\t\t\t\tstack.push( obj );\n\t\t\t\t\tres = parser.call( this, obj, stack );\n\t\t\t\t\tstack.pop();\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t\t// else\n\t\t\t\treturn ( type == \"string\" ) ? parser : this.parsers.error;\n\t\t\t},\n\t\t\ttypeOf: function( obj ) {\n\t\t\t\tvar type;\n\t\t\t\tif ( obj === null ) {\n\t\t\t\t\ttype = \"null\";\n\t\t\t\t} else if ( typeof obj === \"undefined\" ) {\n\t\t\t\t\ttype = \"undefined\";\n\t\t\t\t} else if ( QUnit.is( \"regexp\", obj) ) {\n\t\t\t\t\ttype = \"regexp\";\n\t\t\t\t} else if ( QUnit.is( \"date\", obj) ) {\n\t\t\t\t\ttype = \"date\";\n\t\t\t\t} else if ( QUnit.is( \"function\", obj) ) {\n\t\t\t\t\ttype = \"function\";\n\t\t\t\t} else if ( typeof obj.setInterval !== undefined && typeof obj.document !== \"undefined\" && typeof obj.nodeType === \"undefined\" ) {\n\t\t\t\t\ttype = \"window\";\n\t\t\t\t} else if ( obj.nodeType === 9 ) {\n\t\t\t\t\ttype = \"document\";\n\t\t\t\t} else if ( obj.nodeType ) {\n\t\t\t\t\ttype = \"node\";\n\t\t\t\t} else if (\n\t\t\t\t\t// native arrays\n\t\t\t\t\ttoString.call( obj ) === \"[object Array]\" ||\n\t\t\t\t\t// NodeList objects\n\t\t\t\t\t( typeof obj.length === \"number\" && typeof obj.item !== \"undefined\" && ( obj.length ? obj.item(0) === obj[0] : ( obj.item( 0 ) === null && typeof obj[0] === \"undefined\" ) ) )\n\t\t\t\t) {\n\t\t\t\t\ttype = \"array\";\n\t\t\t\t} else {\n\t\t\t\t\ttype = typeof obj;\n\t\t\t\t}\n\t\t\t\treturn type;\n\t\t\t},\n\t\t\tseparator: function() {\n\t\t\t\treturn this.multiline ?\tthis.HTML ? \"<br />\" : \"\\n\" : this.HTML ? \"&nbsp;\" : \" \";\n\t\t\t},\n\t\t\tindent: function( extra ) {// extra can be a number, shortcut for increasing-calling-decreasing\n\t\t\t\tif ( !this.multiline ) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\tvar chr = this.indentChar;\n\t\t\t\tif ( this.HTML ) {\n\t\t\t\t\tchr = chr.replace( /\\t/g, \"   \" ).replace( / /g, \"&nbsp;\" );\n\t\t\t\t}\n\t\t\t\treturn new Array( this._depth_ + (extra||0) ).join(chr);\n\t\t\t},\n\t\t\tup: function( a ) {\n\t\t\t\tthis._depth_ += a || 1;\n\t\t\t},\n\t\t\tdown: function( a ) {\n\t\t\t\tthis._depth_ -= a || 1;\n\t\t\t},\n\t\t\tsetParser: function( name, parser ) {\n\t\t\t\tthis.parsers[name] = parser;\n\t\t\t},\n\t\t\t// The next 3 are exposed so you can use them\n\t\t\tquote: quote,\n\t\t\tliteral: literal,\n\t\t\tjoin: join,\n\t\t\t//\n\t\t\t_depth_: 1,\n\t\t\t// This is the list of parsers, to modify them, use jsDump.setParser\n\t\t\tparsers: {\n\t\t\t\twindow: \"[Window]\",\n\t\t\t\tdocument: \"[Document]\",\n\t\t\t\terror: \"[ERROR]\", //when no parser is found, shouldn\"t happen\n\t\t\t\tunknown: \"[Unknown]\",\n\t\t\t\t\"null\": \"null\",\n\t\t\t\t\"undefined\": \"undefined\",\n\t\t\t\t\"function\": function( fn ) {\n\t\t\t\t\tvar ret = \"function\",\n\t\t\t\t\t\tname = \"name\" in fn ? fn.name : (reName.exec(fn) || [])[1];//functions never have name in IE\n\n\t\t\t\t\tif ( name ) {\n\t\t\t\t\t\tret += \" \" + name;\n\t\t\t\t\t}\n\t\t\t\t\tret += \"( \";\n\n\t\t\t\t\tret = [ ret, QUnit.jsDump.parse( fn, \"functionArgs\" ), \"){\" ].join( \"\" );\n\t\t\t\t\treturn join( ret, QUnit.jsDump.parse(fn,\"functionCode\" ), \"}\" );\n\t\t\t\t},\n\t\t\t\tarray: array,\n\t\t\t\tnodelist: array,\n\t\t\t\t\"arguments\": array,\n\t\t\t\tobject: function( map, stack ) {\n\t\t\t\t\tvar ret = [ ], keys, key, val, i;\n\t\t\t\t\tQUnit.jsDump.up();\n\t\t\t\t\tif ( Object.keys ) {\n\t\t\t\t\t\tkeys = Object.keys( map );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeys = [];\n\t\t\t\t\t\tfor ( key in map ) {\n\t\t\t\t\t\t\tkeys.push( key );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tkeys.sort();\n\t\t\t\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t\t\t\tkey = keys[ i ];\n\t\t\t\t\t\tval = map[ key ];\n\t\t\t\t\t\tret.push( QUnit.jsDump.parse( key, \"key\" ) + \": \" + QUnit.jsDump.parse( val, undefined, stack ) );\n\t\t\t\t\t}\n\t\t\t\t\tQUnit.jsDump.down();\n\t\t\t\t\treturn join( \"{\", ret, \"}\" );\n\t\t\t\t},\n\t\t\t\tnode: function( node ) {\n\t\t\t\t\tvar a, val,\n\t\t\t\t\t\topen = QUnit.jsDump.HTML ? \"&lt;\" : \"<\",\n\t\t\t\t\t\tclose = QUnit.jsDump.HTML ? \"&gt;\" : \">\",\n\t\t\t\t\t\ttag = node.nodeName.toLowerCase(),\n\t\t\t\t\t\tret = open + tag;\n\n\t\t\t\t\tfor ( a in QUnit.jsDump.DOMAttrs ) {\n\t\t\t\t\t\tval = node[ QUnit.jsDump.DOMAttrs[a] ];\n\t\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\t\tret += \" \" + a + \"=\" + QUnit.jsDump.parse( val, \"attribute\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn ret + close + open + \"/\" + tag + close;\n\t\t\t\t},\n\t\t\t\tfunctionArgs: function( fn ) {//function calls it internally, it's the arguments part of the function\n\t\t\t\t\tvar args,\n\t\t\t\t\t\tl = fn.length;\n\n\t\t\t\t\tif ( !l ) {\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\n\t\t\t\t\targs = new Array(l);\n\t\t\t\t\twhile ( l-- ) {\n\t\t\t\t\t\targs[l] = String.fromCharCode(97+l);//97 is 'a'\n\t\t\t\t\t}\n\t\t\t\t\treturn \" \" + args.join( \", \" ) + \" \";\n\t\t\t\t},\n\t\t\t\tkey: quote, //object calls it internally, the key part of an item in a map\n\t\t\t\tfunctionCode: \"[code]\", //function calls it internally, it's the content of the function\n\t\t\t\tattribute: quote, //node calls it internally, it's an html attribute value\n\t\t\t\tstring: quote,\n\t\t\t\tdate: quote,\n\t\t\t\tregexp: literal, //regex\n\t\t\t\tnumber: literal,\n\t\t\t\t\"boolean\": literal\n\t\t\t},\n\t\t\tDOMAttrs: {\n\t\t\t\t//attributes to dump from nodes, name=>realName\n\t\t\t\tid: \"id\",\n\t\t\t\tname: \"name\",\n\t\t\t\t\"class\": \"className\"\n\t\t\t},\n\t\t\tHTML: false,//if true, entities are escaped ( <, >, \\t, space and \\n )\n\t\t\tindentChar: \"  \",//indentation unit\n\t\t\tmultiline: true //if true, items in a collection, are separated by a \\n, else just a space.\n\t\t};\n\n\treturn jsDump;\n}());\n\n// from Sizzle.js\nfunction getText( elems ) {\n\tvar i, elem,\n\t\tret = \"\";\n\n\tfor ( i = 0; elems[i]; i++ ) {\n\t\telem = elems[i];\n\n\t\t// Get the text from text nodes and CDATA nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 4 ) {\n\t\t\tret += elem.nodeValue;\n\n\t\t// Traverse everything else, except comment nodes\n\t\t} else if ( elem.nodeType !== 8 ) {\n\t\t\tret += getText( elem.childNodes );\n\t\t}\n\t}\n\n\treturn ret;\n}\n\n// from jquery.js\nfunction inArray( elem, array ) {\n\tif ( array.indexOf ) {\n\t\treturn array.indexOf( elem );\n\t}\n\n\tfor ( var i = 0, length = array.length; i < length; i++ ) {\n\t\tif ( array[ i ] === elem ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/*\n * Javascript Diff Algorithm\n *  By John Resig (http://ejohn.org/)\n *  Modified by Chu Alan \"sprite\"\n *\n * Released under the MIT license.\n *\n * More Info:\n *  http://ejohn.org/projects/javascript-diff-algorithm/\n *\n * Usage: QUnit.diff(expected, actual)\n *\n * QUnit.diff( \"the quick brown fox jumped over\", \"the quick fox jumps over\" ) == \"the  quick <del>brown </del> fox <del>jumped </del><ins>jumps </ins> over\"\n */\nQUnit.diff = (function() {\n\tfunction diff( o, n ) {\n\t\tvar i,\n\t\t\tns = {},\n\t\t\tos = {};\n\n\t\tfor ( i = 0; i < n.length; i++ ) {\n\t\t\tif ( ns[ n[i] ] == null ) {\n\t\t\t\tns[ n[i] ] = {\n\t\t\t\t\trows: [],\n\t\t\t\t\to: null\n\t\t\t\t};\n\t\t\t}\n\t\t\tns[ n[i] ].rows.push( i );\n\t\t}\n\n\t\tfor ( i = 0; i < o.length; i++ ) {\n\t\t\tif ( os[ o[i] ] == null ) {\n\t\t\t\tos[ o[i] ] = {\n\t\t\t\t\trows: [],\n\t\t\t\t\tn: null\n\t\t\t\t};\n\t\t\t}\n\t\t\tos[ o[i] ].rows.push( i );\n\t\t}\n\n\t\tfor ( i in ns ) {\n\t\t\tif ( !hasOwn.call( ns, i ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( ns[i].rows.length == 1 && typeof os[i] != \"undefined\" && os[i].rows.length == 1 ) {\n\t\t\t\tn[ ns[i].rows[0] ] = {\n\t\t\t\t\ttext: n[ ns[i].rows[0] ],\n\t\t\t\t\trow: os[i].rows[0]\n\t\t\t\t};\n\t\t\t\to[ os[i].rows[0] ] = {\n\t\t\t\t\ttext: o[ os[i].rows[0] ],\n\t\t\t\t\trow: ns[i].rows[0]\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tfor ( i = 0; i < n.length - 1; i++ ) {\n\t\t\tif ( n[i].text != null && n[ i + 1 ].text == null && n[i].row + 1 < o.length && o[ n[i].row + 1 ].text == null &&\n\t\t\t\t\t\tn[ i + 1 ] == o[ n[i].row + 1 ] ) {\n\n\t\t\t\tn[ i + 1 ] = {\n\t\t\t\t\ttext: n[ i + 1 ],\n\t\t\t\t\trow: n[i].row + 1\n\t\t\t\t};\n\t\t\t\to[ n[i].row + 1 ] = {\n\t\t\t\t\ttext: o[ n[i].row + 1 ],\n\t\t\t\t\trow: i + 1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tfor ( i = n.length - 1; i > 0; i-- ) {\n\t\t\tif ( n[i].text != null && n[ i - 1 ].text == null && n[i].row > 0 && o[ n[i].row - 1 ].text == null &&\n\t\t\t\t\t\tn[ i - 1 ] == o[ n[i].row - 1 ]) {\n\n\t\t\t\tn[ i - 1 ] = {\n\t\t\t\t\ttext: n[ i - 1 ],\n\t\t\t\t\trow: n[i].row - 1\n\t\t\t\t};\n\t\t\t\to[ n[i].row - 1 ] = {\n\t\t\t\t\ttext: o[ n[i].row - 1 ],\n\t\t\t\t\trow: i - 1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\to: o,\n\t\t\tn: n\n\t\t};\n\t}\n\n\treturn function( o, n ) {\n\t\to = o.replace( /\\s+$/, \"\" );\n\t\tn = n.replace( /\\s+$/, \"\" );\n\n\t\tvar i, pre,\n\t\t\tstr = \"\",\n\t\t\tout = diff( o === \"\" ? [] : o.split(/\\s+/), n === \"\" ? [] : n.split(/\\s+/) ),\n\t\t\toSpace = o.match(/\\s+/g),\n\t\t\tnSpace = n.match(/\\s+/g);\n\n\t\tif ( oSpace == null ) {\n\t\t\toSpace = [ \" \" ];\n\t\t}\n\t\telse {\n\t\t\toSpace.push( \" \" );\n\t\t}\n\n\t\tif ( nSpace == null ) {\n\t\t\tnSpace = [ \" \" ];\n\t\t}\n\t\telse {\n\t\t\tnSpace.push( \" \" );\n\t\t}\n\n\t\tif ( out.n.length === 0 ) {\n\t\t\tfor ( i = 0; i < out.o.length; i++ ) {\n\t\t\t\tstr += \"<del>\" + out.o[i] + oSpace[i] + \"</del>\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( out.n[0].text == null ) {\n\t\t\t\tfor ( n = 0; n < out.o.length && out.o[n].text == null; n++ ) {\n\t\t\t\t\tstr += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( i = 0; i < out.n.length; i++ ) {\n\t\t\t\tif (out.n[i].text == null) {\n\t\t\t\t\tstr += \"<ins>\" + out.n[i] + nSpace[i] + \"</ins>\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// `pre` initialized at top of scope\n\t\t\t\t\tpre = \"\";\n\n\t\t\t\t\tfor ( n = out.n[i].row + 1; n < out.o.length && out.o[n].text == null; n++ ) {\n\t\t\t\t\t\tpre += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n\t\t\t\t\t}\n\t\t\t\t\tstr += \" \" + out.n[i].text + nSpace[i] + pre;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn str;\n\t};\n}());\n\n// for CommonJS enviroments, export everything\nif ( typeof exports !== \"undefined\" ) {\n\textend(exports, QUnit);\n}\n\n// get at whatever the global object is, like window in browsers\n}( (function() {return this;}.call()) ));\n"]},"hash":"a6b04b33e456713ba49d65977ee1f98137fca2f9"}
