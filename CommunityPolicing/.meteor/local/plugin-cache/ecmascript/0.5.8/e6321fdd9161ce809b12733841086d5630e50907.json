{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/plugins/autolinker/prism-autolinker.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/plugins/autolinker/prism-autolinker.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/plugins/autolinker/prism-autolinker.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/plugins/autolinker/prism-autolinker.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"prism-autolinker"},"ignored":false,"code":"(function () {\n\n\tif (typeof self !== 'undefined' && !self.Prism || typeof global !== 'undefined' && !global.Prism) {\n\t\treturn;\n\t}\n\n\tvar url = /\\b([a-z]{3,7}:\\/\\/|tel:)[\\w\\-+%~/.:#=?&amp;]+/,\n\t    email = /\\b\\S+@[\\w.]+[a-z]{2}/,\n\t    linkMd = /\\[([^\\]]+)]\\(([^)]+)\\)/,\n\n\n\t// Tokens that may contain URLs and emails\n\tcandidates = ['comment', 'url', 'attr-value', 'string'];\n\n\tPrism.hooks.add('before-highlight', function (env) {\n\t\t// Abort if grammar has already been processed\n\t\tif (!env.grammar || env.grammar['url-link']) {\n\t\t\treturn;\n\t\t}\n\t\tPrism.languages.DFS(env.grammar, function (key, def, type) {\n\t\t\tif (candidates.indexOf(type) > -1 && Prism.util.type(def) !== 'Array') {\n\t\t\t\tif (!def.pattern) {\n\t\t\t\t\tdef = this[key] = {\n\t\t\t\t\t\tpattern: def\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tdef.inside = def.inside || {};\n\n\t\t\t\tif (type == 'comment') {\n\t\t\t\t\tdef.inside['md-link'] = linkMd;\n\t\t\t\t}\n\t\t\t\tif (type == 'attr-value') {\n\t\t\t\t\tPrism.languages.insertBefore('inside', 'punctuation', { 'url-link': url }, def);\n\t\t\t\t} else {\n\t\t\t\t\tdef.inside['url-link'] = url;\n\t\t\t\t}\n\n\t\t\t\tdef.inside['email-link'] = email;\n\t\t\t}\n\t\t});\n\t\tenv.grammar['url-link'] = url;\n\t\tenv.grammar['email-link'] = email;\n\t});\n\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (/-link$/.test(env.type)) {\n\t\t\tenv.tag = 'a';\n\n\t\t\tvar href = env.content;\n\n\t\t\tif (env.type == 'email-link' && href.indexOf('mailto:') != 0) {\n\t\t\t\thref = 'mailto:' + href;\n\t\t\t} else if (env.type == 'md-link') {\n\t\t\t\t// Markdown\n\t\t\t\tvar match = env.content.match(linkMd);\n\n\t\t\t\thref = match[2];\n\t\t\t\tenv.content = match[1];\n\t\t\t}\n\n\t\t\tenv.attributes.href = href;\n\t\t}\n\t});\n})();","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/plugins/autolinker/prism-autolinker.js"],"names":[],"mappings":"AAAA,CAAC,YAAU;;AAEX,KACC,OAAO,IAAP,KAAgB,WAAhB,IAA+B,CAAC,KAAK,KAArC,IACA,OAAO,MAAP,KAAkB,WAAlB,IAAiC,CAAC,OAAO,KAF1C,EAGE;AACD;AACA;;AAED,KAAI,MAAM,+CAAV;AAAA,KACI,QAAQ,sBADZ;AAAA,KAEI,SAAS,wBAFb;AAAA;;;AAKI,cAAa,CAAC,SAAD,EAAY,KAAZ,EAAmB,YAAnB,EAAiC,QAAjC,CALjB;;AAOA,OAAM,KAAN,CAAY,GAAZ,CAAgB,kBAAhB,EAAoC,UAAS,GAAT,EAAc;;AAEjD,MAAI,CAAC,IAAI,OAAL,IAAgB,IAAI,OAAJ,CAAY,UAAZ,CAApB,EAA6C;AAC5C;AACA;AACD,QAAM,SAAN,CAAgB,GAAhB,CAAoB,IAAI,OAAxB,EAAiC,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAC1D,OAAI,WAAW,OAAX,CAAmB,IAAnB,IAA2B,CAAC,CAA5B,IAAiC,MAAM,IAAN,CAAW,IAAX,CAAgB,GAAhB,MAAyB,OAA9D,EAAuE;AACtE,QAAI,CAAC,IAAI,OAAT,EAAkB;AACjB,WAAM,KAAK,GAAL,IAAY;AACjB,eAAS;AADQ,MAAlB;AAGA;;AAED,QAAI,MAAJ,GAAa,IAAI,MAAJ,IAAc,EAA3B;;AAEA,QAAI,QAAQ,SAAZ,EAAuB;AACtB,SAAI,MAAJ,CAAW,SAAX,IAAwB,MAAxB;AACA;AACD,QAAI,QAAQ,YAAZ,EAA0B;AACzB,WAAM,SAAN,CAAgB,YAAhB,CAA6B,QAA7B,EAAuC,aAAvC,EAAsD,EAAE,YAAY,GAAd,EAAtD,EAA2E,GAA3E;AACA,KAFD,MAGK;AACJ,SAAI,MAAJ,CAAW,UAAX,IAAyB,GAAzB;AACA;;AAED,QAAI,MAAJ,CAAW,YAAX,IAA2B,KAA3B;AACA;AACD,GAtBD;AAuBA,MAAI,OAAJ,CAAY,UAAZ,IAA0B,GAA1B;AACA,MAAI,OAAJ,CAAY,YAAZ,IAA4B,KAA5B;AACA,EA9BD;;AAgCA,OAAM,KAAN,CAAY,GAAZ,CAAgB,MAAhB,EAAwB,UAAS,GAAT,EAAc;AACrC,MAAI,SAAS,IAAT,CAAc,IAAI,IAAlB,CAAJ,EAA6B;AAC5B,OAAI,GAAJ,GAAU,GAAV;;AAEA,OAAI,OAAO,IAAI,OAAf;;AAEA,OAAI,IAAI,IAAJ,IAAY,YAAZ,IAA4B,KAAK,OAAL,CAAa,SAAb,KAA2B,CAA3D,EAA8D;AAC7D,WAAO,YAAY,IAAnB;AACA,IAFD,MAGK,IAAI,IAAI,IAAJ,IAAY,SAAhB,EAA2B;;AAE/B,QAAI,QAAQ,IAAI,OAAJ,CAAY,KAAZ,CAAkB,MAAlB,CAAZ;;AAEA,WAAO,MAAM,CAAN,CAAP;AACA,QAAI,OAAJ,GAAc,MAAM,CAAN,CAAd;AACA;;AAED,OAAI,UAAJ,CAAe,IAAf,GAAsB,IAAtB;AACA;AACD,EAnBD;AAqBC,CArED","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/plugins/autolinker/prism-autolinker.js.map","sourcesContent":["(function(){\n\nif (\n\ttypeof self !== 'undefined' && !self.Prism ||\n\ttypeof global !== 'undefined' && !global.Prism\n) {\n\treturn;\n}\n\nvar url = /\\b([a-z]{3,7}:\\/\\/|tel:)[\\w\\-+%~/.:#=?&amp;]+/,\n    email = /\\b\\S+@[\\w.]+[a-z]{2}/,\n    linkMd = /\\[([^\\]]+)]\\(([^)]+)\\)/,\n    \n\t// Tokens that may contain URLs and emails\n    candidates = ['comment', 'url', 'attr-value', 'string'];\n\nPrism.hooks.add('before-highlight', function(env) {\n\t// Abort if grammar has already been processed\n\tif (!env.grammar || env.grammar['url-link']) {\n\t\treturn;\n\t}\n\tPrism.languages.DFS(env.grammar, function (key, def, type) {\n\t\tif (candidates.indexOf(type) > -1 && Prism.util.type(def) !== 'Array') {\n\t\t\tif (!def.pattern) {\n\t\t\t\tdef = this[key] = {\n\t\t\t\t\tpattern: def\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tdef.inside = def.inside || {};\n\n\t\t\tif (type == 'comment') {\n\t\t\t\tdef.inside['md-link'] = linkMd;\n\t\t\t}\n\t\t\tif (type == 'attr-value') {\n\t\t\t\tPrism.languages.insertBefore('inside', 'punctuation', { 'url-link': url }, def);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdef.inside['url-link'] = url;\n\t\t\t}\n\n\t\t\tdef.inside['email-link'] = email;\n\t\t}\n\t});\n\tenv.grammar['url-link'] = url;\n\tenv.grammar['email-link'] = email;\n});\n\nPrism.hooks.add('wrap', function(env) {\n\tif (/-link$/.test(env.type)) {\n\t\tenv.tag = 'a';\n\t\t\n\t\tvar href = env.content;\n\t\t\n\t\tif (env.type == 'email-link' && href.indexOf('mailto:') != 0) {\n\t\t\thref = 'mailto:' + href;\n\t\t}\n\t\telse if (env.type == 'md-link') {\n\t\t\t// Markdown\n\t\t\tvar match = env.content.match(linkMd);\n\t\t\t\n\t\t\thref = match[2];\n\t\t\tenv.content = match[1];\n\t\t}\n\t\t\n\t\tenv.attributes.href = href;\n\t}\n});\n\n})();"]},"hash":"e6321fdd9161ce809b12733841086d5630e50907"}
