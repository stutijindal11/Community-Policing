{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.tooltip.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.tooltip.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.tooltip.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.tooltip.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.tooltip"},"ignored":false,"code":"/**\n * Tooltip module.\n * @module foundation.tooltip\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n */\n!function ($, document, Foundation) {\n  'use strict';\n\n  /**\n   * Creates a new instance of a Tooltip.\n   * @class\n   * @fires Tooltip#init\n   * @param {jQuery} element - jQuery object to attach a tooltip to.\n   * @param {Object} options - object to extend the default configuration.\n   */\n\n  function Tooltip(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n\n    this.isActive = false;\n    this.isClick = false;\n    this._init();\n\n    Foundation.registerPlugin(this);\n  }\n\n  Tooltip.defaults = {\n    disableForTouch: false,\n    /**\n     * Time, in ms, before a tooltip should open on hover.\n     * @option\n     * @example 200\n     */\n    hoverDelay: 200,\n    /**\n     * Time, in ms, a tooltip should take to fade into view.\n     * @option\n     * @example 150\n     */\n    fadeInDuration: 150,\n    /**\n     * Time, in ms, a tooltip should take to fade out of view.\n     * @option\n     * @example 150\n     */\n    fadeOutDuration: 150,\n    /**\n     * Disables hover events from opening the tooltip if set to true\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Optional addtional classes to apply to the tooltip template on init.\n     * @option\n     * @example 'my-cool-tip-class'\n     */\n    templateClasses: '',\n    /**\n     * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\n     * @option\n     * @example 'tooltip'\n     */\n    tooltipClass: 'tooltip',\n    /**\n     * Class applied to the tooltip anchor element.\n     * @option\n     * @example 'has-tip'\n     */\n    triggerClass: 'has-tip',\n    /**\n     * Minimum breakpoint size at which to open the tooltip.\n     * @option\n     * @example 'small'\n     */\n    showOn: 'small',\n    /**\n     * Custom template to be used to generate markup for tooltip.\n     * @option\n     * @example '<div class=\"tooltip\"></div>'\n     */\n    template: '',\n    /**\n     * Text displayed in the tooltip template on open.\n     * @option\n     * @example 'Some cool space fact here.'\n     */\n    tipText: '',\n    touchCloseText: 'Tap to close.',\n    /**\n     * Allows the tooltip to remain open if triggered with a click or touch event.\n     * @option\n     * @example true\n     */\n    clickOpen: true,\n    /**\n     * Additional positioning classes, set by the JS\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the Y axis.\n     * @option\n     * @example 10\n     */\n    vOffset: 10,\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\n     * @option\n     * @example 12\n     */\n    hOffset: 12\n  };\n\n  /**\n   * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\n   * @private\n   */\n  Tooltip.prototype._init = function () {\n    var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\n\n    this.options.positionClass = this._getPositionClass(this.$element);\n    this.options.tipText = this.options.tipText || this.$element.attr('title');\n    this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n    this.template.appendTo(document.body).text(this.options.tipText).hide();\n\n    this.$element.attr({\n      'title': '',\n      'aria-describedby': elemId,\n      'data-yeti-box': elemId,\n      'data-toggle': elemId,\n      'data-resize': elemId\n    }).addClass(this.triggerClass);\n\n    //helper variables to track movement on collisions\n    this.usedPositions = [];\n    this.counter = 4;\n    this.classChanged = false;\n\n    this._events();\n  };\n\n  /**\n   * Grabs the current positioning class, if present, and returns the value or an empty string.\n   * @private\n   */\n  Tooltip.prototype._getPositionClass = function (element) {\n    if (!element) {\n      return '';\n    }\n    // var position = element.attr('class').match(/top|left|right/g);\n    var position = element[0].className.match(/(top|left|right)/g);\n    position = position ? position[0] : '';\n    return position;\n  };\n  /**\n   * builds the tooltip element, adds attributes, and returns the template.\n   * @private\n   */\n  Tooltip.prototype._buildTemplate = function (id) {\n    var templateClasses = (this.options.tooltipClass + ' ' + this.options.positionClass).trim();\n    var $template = $('<div></div>').addClass(templateClasses).attr({\n      'role': 'tooltip',\n      'aria-hidden': true,\n      'data-is-active': false,\n      'data-is-focus': false,\n      'id': id\n    });\n    return $template;\n  };\n\n  /**\n   * Function that gets called if a collision event is detected.\n   * @param {String} position - positioning class to try\n   * @private\n   */\n  Tooltip.prototype._reposition = function (position) {\n    this.usedPositions.push(position ? position : 'bottom');\n\n    //default, try switching to opposite side\n    if (!position && this.usedPositions.indexOf('top') < 0) {\n      this.template.addClass('top');\n    } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n      this.template.removeClass(position);\n    } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n      this.template.removeClass(position).addClass('right');\n    } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n      this.template.removeClass(position).addClass('left');\n    }\n\n    //if default change didn't work, try bottom or left first\n    else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n        this.template.addClass('left');\n      } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n        this.template.removeClass(position).addClass('left');\n      } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n        this.template.removeClass(position);\n      } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n        this.template.removeClass(position);\n      }\n      //if nothing cleared, set to bottom\n      else {\n          this.template.removeClass(position);\n        }\n    this.classChanged = true;\n    this.counter--;\n  };\n\n  /**\n   * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\n   * if the tooltip is larger than the screen width, default to full width - any user selected margin\n   * @private\n   */\n  Tooltip.prototype._setPosition = function () {\n    var position = this._getPositionClass(this.template),\n        $tipDims = Foundation.Box.GetDimensions(this.template),\n        $anchorDims = Foundation.Box.GetDimensions(this.$element),\n        direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n        param = direction === 'top' ? 'height' : 'width',\n        offset = param === 'height' ? this.options.vOffset : this.options.hOffset,\n        _this = this;\n\n    if ($tipDims.width >= $tipDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.template)) {\n      this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n        // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n        'width': $anchorDims.windowDims.width - this.options.hOffset * 2,\n        'height': 'auto'\n      });\n      return false;\n    }\n\n    this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\n\n    while (!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\n      this._reposition(position);\n      this._setPosition();\n    }\n  };\n\n  /**\n   * reveals the tooltip, and fires an event to close any other open tooltips on the page\n   * @fires Closeme#tooltip\n   * @fires Tooltip#show\n   * @function\n   */\n  Tooltip.prototype.show = function () {\n    if (this.options.showOn !== 'all' && !Foundation.MediaQuery.atLeast(this.options.showOn)) {\n      // console.error('The screen is too small to display this tooltip');\n      return false;\n    }\n\n    var _this = this;\n    this.template.css('visibility', 'hidden').show();\n    this._setPosition();\n\n    /**\n     * Fires to close all other open tooltips on the page\n     * @event Closeme#tooltip\n     */\n    this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n\n    this.template.attr({\n      'data-is-active': true,\n      'aria-hidden': false\n    });\n    _this.isActive = true;\n    // console.log(this.template);\n    this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function () {\n      //maybe do stuff?\n    });\n    /**\n     * Fires when the tooltip is shown\n     * @event Tooltip#show\n     */\n    this.$element.trigger('show.zf.tooltip');\n  };\n\n  /**\n   * Hides the current tooltip, and resets the positioning class if it was changed due to collision\n   * @fires Tooltip#hide\n   * @function\n   */\n  Tooltip.prototype.hide = function () {\n    // console.log('hiding', this.$element.data('yeti-box'));\n    var _this = this;\n    this.template.stop().attr({\n      'aria-hidden': true,\n      'data-is-active': false\n    }).fadeOut(this.options.fadeOutDuration, function () {\n      _this.isActive = false;\n      _this.isClick = false;\n      if (_this.classChanged) {\n        _this.template.removeClass(_this._getPositionClass(_this.template)).addClass(_this.options.positionClass);\n\n        _this.usedPositions = [];\n        _this.counter = 4;\n        _this.classChanged = false;\n      }\n    });\n    /**\n     * fires when the tooltip is hidden\n     * @event Tooltip#hide\n     */\n    this.$element.trigger('hide.zf.tooltip');\n  };\n\n  /**\n   * adds event listeners for the tooltip and its anchor\n   * TODO combine some of the listeners like focus and mouseenter, etc.\n   * @private\n   */\n  Tooltip.prototype._events = function () {\n    var _this = this;\n    var $template = this.template;\n    var isFocus = false;\n\n    if (!this.options.disableHover) {\n\n      this.$element.on('mouseenter.zf.tooltip', function (e) {\n        if (!_this.isActive) {\n          _this.timeout = setTimeout(function () {\n            _this.show();\n          }, _this.options.hoverDelay);\n        }\n      }).on('mouseleave.zf.tooltip', function (e) {\n        clearTimeout(_this.timeout);\n        if (!isFocus || !_this.isClick && _this.options.clickOpen) {\n          _this.hide();\n        }\n      });\n    }\n    if (this.options.clickOpen) {\n      this.$element.on('mousedown.zf.tooltip', function (e) {\n        e.stopImmediatePropagation();\n        if (_this.isClick) {\n          _this.hide();\n          // _this.isClick = false;\n        } else {\n            _this.isClick = true;\n            if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\n              _this.show();\n            }\n          }\n      });\n    }\n\n    if (!this.options.disableForTouch) {\n      this.$element.on('tap.zf.tooltip touchend.zf.tooltip', function (e) {\n        _this.isActive ? _this.hide() : _this.show();\n      });\n    }\n\n    this.$element.on({\n      // 'toggle.zf.trigger': this.toggle.bind(this),\n      // 'close.zf.trigger': this.hide.bind(this)\n      'close.zf.trigger': this.hide.bind(this)\n    });\n\n    this.$element.on('focus.zf.tooltip', function (e) {\n      isFocus = true;\n      console.log(_this.isClick);\n      if (_this.isClick) {\n        return false;\n      } else {\n        // $(window)\n        _this.show();\n      }\n    }).on('focusout.zf.tooltip', function (e) {\n      isFocus = false;\n      _this.isClick = false;\n      _this.hide();\n    }).on('resizeme.zf.trigger', function () {\n      if (_this.isActive) {\n        _this._setPosition();\n      }\n    });\n  };\n  /**\n   * adds a toggle method, in addition to the static show() & hide() functions\n   * @function\n   */\n  Tooltip.prototype.toggle = function () {\n    if (this.isActive) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n  /**\n   * Destroys an instance of tooltip, removes template element from the view.\n   * @function\n   */\n  Tooltip.prototype.destroy = function () {\n    this.$element.attr('title', this.template.text()).off('.zf.trigger .zf.tootip')\n    //  .removeClass('has-tip')\n    .removeAttr('aria-describedby').removeAttr('data-yeti-box').removeAttr('data-toggle').removeAttr('data-resize');\n\n    this.template.remove();\n\n    Foundation.unregisterPlugin(this);\n  };\n  /**\n   * TODO utilize resize event trigger\n   */\n\n  Foundation.plugin(Tooltip, 'Tooltip');\n}(jQuery, window.document, window.Foundation);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.tooltip.js"],"names":[],"mappings":"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","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.tooltip.js.map","sourcesContent":["/**\n * Tooltip module.\n * @module foundation.tooltip\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n */\n!function($, document, Foundation){\n  'use strict';\n\n  /**\n   * Creates a new instance of a Tooltip.\n   * @class\n   * @fires Tooltip#init\n   * @param {jQuery} element - jQuery object to attach a tooltip to.\n   * @param {Object} options - object to extend the default configuration.\n   */\n  function Tooltip(element, options){\n    this.$element = element;\n    this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n\n    this.isActive = false;\n    this.isClick = false;\n    this._init();\n\n    Foundation.registerPlugin(this);\n  }\n\n  Tooltip.defaults = {\n    disableForTouch: false,\n    /**\n     * Time, in ms, before a tooltip should open on hover.\n     * @option\n     * @example 200\n     */\n    hoverDelay: 200,\n    /**\n     * Time, in ms, a tooltip should take to fade into view.\n     * @option\n     * @example 150\n     */\n    fadeInDuration: 150,\n    /**\n     * Time, in ms, a tooltip should take to fade out of view.\n     * @option\n     * @example 150\n     */\n    fadeOutDuration: 150,\n    /**\n     * Disables hover events from opening the tooltip if set to true\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Optional addtional classes to apply to the tooltip template on init.\n     * @option\n     * @example 'my-cool-tip-class'\n     */\n    templateClasses: '',\n    /**\n     * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\n     * @option\n     * @example 'tooltip'\n     */\n    tooltipClass: 'tooltip',\n    /**\n     * Class applied to the tooltip anchor element.\n     * @option\n     * @example 'has-tip'\n     */\n    triggerClass: 'has-tip',\n    /**\n     * Minimum breakpoint size at which to open the tooltip.\n     * @option\n     * @example 'small'\n     */\n    showOn: 'small',\n    /**\n     * Custom template to be used to generate markup for tooltip.\n     * @option\n     * @example '<div class=\"tooltip\"></div>'\n     */\n    template: '',\n    /**\n     * Text displayed in the tooltip template on open.\n     * @option\n     * @example 'Some cool space fact here.'\n     */\n    tipText: '',\n    touchCloseText: 'Tap to close.',\n    /**\n     * Allows the tooltip to remain open if triggered with a click or touch event.\n     * @option\n     * @example true\n     */\n    clickOpen: true,\n    /**\n     * Additional positioning classes, set by the JS\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the Y axis.\n     * @option\n     * @example 10\n     */\n    vOffset: 10,\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\n     * @option\n     * @example 12\n     */\n    hOffset: 12\n  };\n\n  /**\n   * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\n   * @private\n   */\n  Tooltip.prototype._init = function(){\n    var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\n\n    this.options.positionClass = this._getPositionClass(this.$element);\n    this.options.tipText = this.options.tipText || this.$element.attr('title');\n    this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n    this.template.appendTo(document.body)\n        .text(this.options.tipText)\n        .hide();\n\n    this.$element.attr({\n      'title': '',\n      'aria-describedby': elemId,\n      'data-yeti-box': elemId,\n      'data-toggle': elemId,\n      'data-resize': elemId\n    }).addClass(this.triggerClass);\n\n    //helper variables to track movement on collisions\n    this.usedPositions = [];\n    this.counter = 4;\n    this.classChanged = false;\n\n    this._events();\n  };\n\n  /**\n   * Grabs the current positioning class, if present, and returns the value or an empty string.\n   * @private\n   */\n  Tooltip.prototype._getPositionClass = function(element){\n    if(!element){ return ''; }\n    // var position = element.attr('class').match(/top|left|right/g);\n    var position = element[0].className.match(/(top|left|right)/g);\n        position = position ? position[0] : '';\n    return position;\n  };\n  /**\n   * builds the tooltip element, adds attributes, and returns the template.\n   * @private\n   */\n  Tooltip.prototype._buildTemplate = function(id){\n    var templateClasses = (this.options.tooltipClass + ' ' + this.options.positionClass).trim();\n    var $template =  $('<div></div>').addClass(templateClasses).attr({\n      'role': 'tooltip',\n      'aria-hidden': true,\n      'data-is-active': false,\n      'data-is-focus': false,\n      'id': id\n    });\n    return $template;\n  };\n\n  /**\n   * Function that gets called if a collision event is detected.\n   * @param {String} position - positioning class to try\n   * @private\n   */\n  Tooltip.prototype._reposition = function(position){\n    this.usedPositions.push(position ? position : 'bottom');\n\n    //default, try switching to opposite side\n    if(!position && (this.usedPositions.indexOf('top') < 0)){\n      this.template.addClass('top');\n    }else if(position === 'top' && (this.usedPositions.indexOf('bottom') < 0)){\n      this.template.removeClass(position);\n    }else if(position === 'left' && (this.usedPositions.indexOf('right') < 0)){\n      this.template.removeClass(position)\n          .addClass('right');\n    }else if(position === 'right' && (this.usedPositions.indexOf('left') < 0)){\n      this.template.removeClass(position)\n          .addClass('left');\n    }\n\n    //if default change didn't work, try bottom or left first\n    else if(!position && (this.usedPositions.indexOf('top') > -1) && (this.usedPositions.indexOf('left') < 0)){\n      this.template.addClass('left');\n    }else if(position === 'top' && (this.usedPositions.indexOf('bottom') > -1) && (this.usedPositions.indexOf('left') < 0)){\n      this.template.removeClass(position)\n          .addClass('left');\n    }else if(position === 'left' && (this.usedPositions.indexOf('right') > -1) && (this.usedPositions.indexOf('bottom') < 0)){\n      this.template.removeClass(position);\n    }else if(position === 'right' && (this.usedPositions.indexOf('left') > -1) && (this.usedPositions.indexOf('bottom') < 0)){\n      this.template.removeClass(position);\n    }\n    //if nothing cleared, set to bottom\n    else{\n      this.template.removeClass(position);\n    }\n    this.classChanged = true;\n    this.counter--;\n\n  };\n\n  /**\n   * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\n   * if the tooltip is larger than the screen width, default to full width - any user selected margin\n   * @private\n   */\n  Tooltip.prototype._setPosition = function(){\n    var position = this._getPositionClass(this.template),\n        $tipDims = Foundation.Box.GetDimensions(this.template),\n        $anchorDims = Foundation.Box.GetDimensions(this.$element),\n        direction = (position === 'left' ? 'left' : ((position === 'right') ? 'left' : 'top')),\n        param = (direction === 'top') ? 'height' : 'width',\n        offset = (param === 'height') ? this.options.vOffset : this.options.hOffset,\n        _this = this;\n\n    if(($tipDims.width >= $tipDims.windowDims.width) || (!this.counter && !Foundation.Box.ImNotTouchingYou(this.template))){\n      this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n      // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n        'width': $anchorDims.windowDims.width - (this.options.hOffset * 2),\n        'height': 'auto'\n      });\n      return false;\n    }\n\n    this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element,'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\n\n    while(!Foundation.Box.ImNotTouchingYou(this.template) && this.counter){\n      this._reposition(position);\n      this._setPosition();\n    }\n  };\n\n  /**\n   * reveals the tooltip, and fires an event to close any other open tooltips on the page\n   * @fires Closeme#tooltip\n   * @fires Tooltip#show\n   * @function\n   */\n  Tooltip.prototype.show = function(){\n    if(this.options.showOn !== 'all' && !Foundation.MediaQuery.atLeast(this.options.showOn)){\n      // console.error('The screen is too small to display this tooltip');\n      return false;\n    }\n\n    var _this = this;\n    this.template.css('visibility', 'hidden').show();\n    this._setPosition();\n\n    /**\n     * Fires to close all other open tooltips on the page\n     * @event Closeme#tooltip\n     */\n    this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n\n\n    this.template.attr({\n      'data-is-active': true,\n      'aria-hidden': false\n    });\n    _this.isActive = true;\n    // console.log(this.template);\n    this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function(){\n      //maybe do stuff?\n    });\n    /**\n     * Fires when the tooltip is shown\n     * @event Tooltip#show\n     */\n    this.$element.trigger('show.zf.tooltip');\n  };\n\n  /**\n   * Hides the current tooltip, and resets the positioning class if it was changed due to collision\n   * @fires Tooltip#hide\n   * @function\n   */\n  Tooltip.prototype.hide = function(){\n    // console.log('hiding', this.$element.data('yeti-box'));\n    var _this = this;\n    this.template.stop().attr({\n      'aria-hidden': true,\n      'data-is-active': false\n    }).fadeOut(this.options.fadeOutDuration, function(){\n      _this.isActive = false;\n      _this.isClick = false;\n      if(_this.classChanged){\n        _this.template\n             .removeClass(_this._getPositionClass(_this.template))\n             .addClass(_this.options.positionClass);\n\n       _this.usedPositions = [];\n       _this.counter = 4;\n       _this.classChanged = false;\n      }\n    });\n    /**\n     * fires when the tooltip is hidden\n     * @event Tooltip#hide\n     */\n    this.$element.trigger('hide.zf.tooltip');\n  };\n\n  /**\n   * adds event listeners for the tooltip and its anchor\n   * TODO combine some of the listeners like focus and mouseenter, etc.\n   * @private\n   */\n  Tooltip.prototype._events = function(){\n    var _this = this;\n    var $template = this.template;\n    var isFocus = false;\n\n    if(!this.options.disableHover){\n\n      this.$element\n      .on('mouseenter.zf.tooltip', function(e){\n        if(!_this.isActive){\n          _this.timeout = setTimeout(function(){\n            _this.show();\n          }, _this.options.hoverDelay);\n        }\n      })\n      .on('mouseleave.zf.tooltip', function(e){\n        clearTimeout(_this.timeout);\n        if(!isFocus || (!_this.isClick && _this.options.clickOpen)){\n          _this.hide();\n        }\n      });\n    }\n    if(this.options.clickOpen){\n      this.$element.on('mousedown.zf.tooltip', function(e){\n        e.stopImmediatePropagation();\n        if(_this.isClick){\n          _this.hide();\n          // _this.isClick = false;\n        }else{\n          _this.isClick = true;\n          if((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive){\n            _this.show();\n          }\n        }\n      });\n    }\n\n    if(!this.options.disableForTouch){\n      this.$element\n      .on('tap.zf.tooltip touchend.zf.tooltip', function(e){\n        _this.isActive ? _this.hide() : _this.show();\n      });\n    }\n\n    this.$element.on({\n      // 'toggle.zf.trigger': this.toggle.bind(this),\n      // 'close.zf.trigger': this.hide.bind(this)\n      'close.zf.trigger': this.hide.bind(this)\n    });\n\n    this.$element\n      .on('focus.zf.tooltip', function(e){\n        isFocus = true;\n        console.log(_this.isClick);\n        if(_this.isClick){\n          return false;\n        }else{\n          // $(window)\n          _this.show();\n        }\n      })\n\n      .on('focusout.zf.tooltip', function(e){\n        isFocus = false;\n        _this.isClick = false;\n        _this.hide();\n      })\n\n      .on('resizeme.zf.trigger', function(){\n        if(_this.isActive){\n          _this._setPosition();\n        }\n      });\n  };\n  /**\n   * adds a toggle method, in addition to the static show() & hide() functions\n   * @function\n   */\n  Tooltip.prototype.toggle = function(){\n    if(this.isActive){\n      this.hide();\n    }else{\n      this.show();\n    }\n  };\n  /**\n   * Destroys an instance of tooltip, removes template element from the view.\n   * @function\n   */\n  Tooltip.prototype.destroy = function(){\n    this.$element.attr('title', this.template.text())\n                 .off('.zf.trigger .zf.tootip')\n                //  .removeClass('has-tip')\n                 .removeAttr('aria-describedby')\n                 .removeAttr('data-yeti-box')\n                 .removeAttr('data-toggle')\n                 .removeAttr('data-resize');\n\n    this.template.remove();\n\n    Foundation.unregisterPlugin(this);\n  };\n  /**\n   * TODO utilize resize event trigger\n   */\n\n  Foundation.plugin(Tooltip, 'Tooltip');\n}(jQuery, window.document, window.Foundation);\n"]},"hash":"744fc33f11ca7b59d614c5d24206ec1a64e3e57c"}
