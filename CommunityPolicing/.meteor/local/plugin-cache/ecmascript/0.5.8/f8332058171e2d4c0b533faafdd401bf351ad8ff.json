{"metadata":{"usedHelpers":["typeof"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.tabs.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.tabs.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.tabs.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.tabs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.tabs"},"ignored":false,"code":"var _typeof;module.import('babel-runtime/helpers/typeof',{\"default\":function(v){_typeof=v}});\n/**\n * Tabs module.\n * @module foundation.tabs\n * @requires foundation.util.keyboard\n * @requires foundation.util.timerAndImageLoader if tabs contain images\n */\n!function ($, Foundation) {\n  'use strict';\n\n  /**\n   * Creates a new instance of tabs.\n   * @class\n   * @fires Tabs#init\n   * @param {jQuery} element - jQuery object to make into tabs.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n\n  function Tabs(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n    this._init();\n    Foundation.registerPlugin(this);\n    Foundation.Keyboard.register('Tabs', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'previous',\n      'ARROW_DOWN': 'next',\n      'ARROW_LEFT': 'previous'\n    });\n  }\n\n  // 'TAB': 'next',\n  // 'SHIFT_TAB': 'previous'\n  Tabs.defaults = {\n    // /**\n    //  * Allows the JS to alter the url of the window. Not yet implemented.\n    //  */\n    // deepLinking: false,\n    // /**\n    //  * If deepLinking is enabled, allows the window to scroll to content if window is loaded with a hash including a tab-pane id\n    //  */\n    // scrollToContent: false,\n    /**\n     * Allows the window to scroll to content of active pane on load if set to true.\n     * @option\n     * @example false\n     */\n    autoFocus: false,\n    /**\n     * Allows keyboard input to 'wrap' around the tab links.\n     * @option\n     * @example true\n     */\n    wrapOnKeys: true,\n    /**\n     * Allows the tab content panes to match heights if set to true.\n     * @option\n     * @example false\n     */\n    matchHeight: false,\n    /**\n     * Class applied to `li`'s in tab link list.\n     * @option\n     * @example 'tabs-title'\n     */\n    linkClass: 'tabs-title',\n    // contentClass: 'tabs-content',\n    /**\n     * Class applied to the content containers.\n     * @option\n     * @example 'tabs-panel'\n     */\n    panelClass: 'tabs-panel'\n  };\n\n  /**\n   * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n   * @private\n   */\n  Tabs.prototype._init = function () {\n    var _this = this;\n\n    this.$tabTitles = this.$element.find('.' + this.options.linkClass);\n    this.$tabContent = $('[data-tabs-content=\"' + this.$element[0].id + '\"]');\n\n    this.$tabTitles.each(function () {\n      var $elem = $(this),\n          $link = $elem.find('a'),\n          isActive = $elem.hasClass('is-active'),\n          hash = $link.attr('href').slice(1),\n          linkId = hash + '-label',\n          $tabContent = $(hash);\n\n      $elem.attr({ 'role': 'presentation' });\n\n      $link.attr({\n        'role': 'tab',\n        'aria-controls': hash,\n        'aria-selected': isActive,\n        'id': linkId\n      });\n\n      $tabContent.attr({\n        'role': 'tabpanel',\n        'aria-hidden': !isActive,\n        'aria-labelledby': linkId\n      });\n\n      if (isActive && _this.options.autoFocus) {\n        $link.focus();\n      }\n    });\n    if (this.options.matchHeight) {\n      var $images = this.$tabContent.find('img');\n      if ($images.length) {\n        Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n      } else {\n        this._setHeight();\n      }\n    }\n    this._events();\n  };\n  /**\n   * Adds event handlers for items within the tabs.\n   * @private\n   */\n  Tabs.prototype._events = function () {\n    this._addKeyHandler();\n    this._addClickHandler();\n    if (this.options.matchHeight) {\n      $(window).on('changed.zf.mediaquery', this._setHeight.bind(this));\n    }\n  };\n\n  /**\n   * Adds click handlers for items within the tabs.\n   * @private\n   */\n  Tabs.prototype._addClickHandler = function () {\n    var _this = this;\n    this.$tabTitles.off('click.zf.tabs').on('click.zf.tabs', function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      if ($(this).hasClass('is-active')) {\n        return;\n      }\n      _this._handleTabChange($(this));\n    });\n  };\n\n  /**\n   * Adds keyboard event handlers for items within the tabs.\n   * @private\n   */\n  Tabs.prototype._addKeyHandler = function () {\n    var _this = this;\n    var $firstTab = _this.$element.find('li:first-of-type');\n    var $lastTab = _this.$element.find('li:last-of-type');\n\n    this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      var $element = $(this),\n          $elements = $element.parent('ul').children('li'),\n          $prevElement,\n          $nextElement;\n\n      $elements.each(function (i) {\n        if ($(this).is($element)) {\n          if (_this.options.wrapOnKeys) {\n            $prevElement = i === 0 ? $elements.last() : $elements.eq(i - 1);\n            $nextElement = i === $elements.length - 1 ? $elements.first() : $elements.eq(i + 1);\n          } else {\n            $prevElement = $elements.eq(Math.max(0, i - 1));\n            $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n          }\n          return;\n        }\n      });\n\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, _this, {\n        open: function () {\n          function open() {\n            $element.find('[role=\"tab\"]').focus();\n            _this._handleTabChange($element);\n          }\n\n          return open;\n        }(),\n        previous: function () {\n          function previous() {\n            $prevElement.find('[role=\"tab\"]').focus();\n            _this._handleTabChange($prevElement);\n          }\n\n          return previous;\n        }(),\n        next: function () {\n          function next() {\n            $nextElement.find('[role=\"tab\"]').focus();\n            _this._handleTabChange($nextElement);\n          }\n\n          return next;\n        }()\n      });\n    });\n  };\n\n  /**\n   * Opens the tab `$targetContent` defined by `$target`.\n   * @param {jQuery} $target - Tab to open.\n   * @fires Tabs#change\n   * @function\n   */\n  Tabs.prototype._handleTabChange = function ($target) {\n    var $tabLink = $target.find('[role=\"tab\"]'),\n        hash = $tabLink.attr('href'),\n        $targetContent = $(hash),\n        $oldTab = this.$element.find('.' + this.options.linkClass + '.is-active').removeClass('is-active').find('[role=\"tab\"]').attr({ 'aria-selected': 'false' }).attr('href');\n\n    $($oldTab).removeClass('is-active').attr({ 'aria-hidden': 'true' });\n\n    $target.addClass('is-active');\n\n    $tabLink.attr({ 'aria-selected': 'true' });\n\n    $targetContent.addClass('is-active').attr({ 'aria-hidden': 'false' });\n\n    /**\n     * Fires when the plugin has successfully changed tabs.\n     * @event Tabs#change\n     */\n    this.$element.trigger('change.zf.tabs', [$target]);\n    // Foundation.reflow(this.$element, 'tabs');\n  };\n\n  /**\n   * Public method for selecting a content pane to display.\n   * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n   * @function\n   */\n  Tabs.prototype.selectTab = function (elem) {\n    var idStr;\n    if ((typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object') {\n      idStr = elem[0].id;\n    } else {\n      idStr = elem;\n    }\n\n    if (idStr.indexOf('#') < 0) {\n      idStr = '#' + idStr;\n    }\n    var $target = this.$tabTitles.find('[href=\"' + idStr + '\"]').parent('.' + this.options.linkClass);\n\n    this._handleTabChange($target);\n  };\n  /**\n   * Sets the height of each panel to the height of the tallest panel.\n   * If enabled in options, gets called on media query change.\n   * If loading content via external source, can be called directly or with _reflow.\n   * @function\n   * @private\n   */\n  Tabs.prototype._setHeight = function () {\n    var max = 0;\n    this.$tabContent.find('.' + this.options.panelClass).css('height', '').each(function () {\n      var panel = $(this),\n          isActive = panel.hasClass('is-active');\n\n      if (!isActive) {\n        panel.css({ 'visibility': 'hidden', 'display': 'block' });\n      }\n      var temp = this.getBoundingClientRect().height;\n\n      if (!isActive) {\n        panel.css({ 'visibility': '', 'display': '' });\n      }\n\n      max = temp > max ? temp : max;\n    }).css('height', max + 'px');\n  };\n\n  /**\n   * Destroys an instance of an tabs.\n   * @fires Tabs#destroyed\n   */\n  Tabs.prototype.destroy = function () {\n    this.$element.find('.' + this.options.linkClass).off('.zf.tabs').hide().end().find('.' + this.options.panelClass).hide();\n    if (this.options.matchHeight) {\n      $(window).off('changed.zf.mediaquery');\n    }\n    Foundation.unregisterPlugin(this);\n  };\n\n  Foundation.plugin(Tabs, 'Tabs');\n\n  function checkClass($elem) {\n    return $elem.hasClass('is-active');\n  }\n}(jQuery, window.Foundation);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.tabs.js"],"names":[],"mappings":"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","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.tabs.js.map","sourcesContent":["/**\n * Tabs module.\n * @module foundation.tabs\n * @requires foundation.util.keyboard\n * @requires foundation.util.timerAndImageLoader if tabs contain images\n */\n!function($, Foundation) {\n  'use strict';\n\n  /**\n   * Creates a new instance of tabs.\n   * @class\n   * @fires Tabs#init\n   * @param {jQuery} element - jQuery object to make into tabs.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  function Tabs(element, options){\n    this.$element = element;\n    this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n    this._init();\n    Foundation.registerPlugin(this);\n    Foundation.Keyboard.register('Tabs', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'previous',\n      'ARROW_DOWN': 'next',\n      'ARROW_LEFT': 'previous',\n      // 'TAB': 'next',\n      // 'SHIFT_TAB': 'previous'\n    });\n  }\n\n  Tabs.defaults = {\n    // /**\n    //  * Allows the JS to alter the url of the window. Not yet implemented.\n    //  */\n    // deepLinking: false,\n    // /**\n    //  * If deepLinking is enabled, allows the window to scroll to content if window is loaded with a hash including a tab-pane id\n    //  */\n    // scrollToContent: false,\n    /**\n     * Allows the window to scroll to content of active pane on load if set to true.\n     * @option\n     * @example false\n     */\n    autoFocus: false,\n    /**\n     * Allows keyboard input to 'wrap' around the tab links.\n     * @option\n     * @example true\n     */\n    wrapOnKeys: true,\n    /**\n     * Allows the tab content panes to match heights if set to true.\n     * @option\n     * @example false\n     */\n    matchHeight: false,\n    /**\n     * Class applied to `li`'s in tab link list.\n     * @option\n     * @example 'tabs-title'\n     */\n    linkClass: 'tabs-title',\n    // contentClass: 'tabs-content',\n    /**\n     * Class applied to the content containers.\n     * @option\n     * @example 'tabs-panel'\n     */\n    panelClass: 'tabs-panel'\n  };\n\n  /**\n   * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n   * @private\n   */\n  Tabs.prototype._init = function(){\n    var _this = this;\n\n    this.$tabTitles = this.$element.find('.' + this.options.linkClass);\n    this.$tabContent = $('[data-tabs-content=\"' + this.$element[0].id + '\"]');\n\n    this.$tabTitles.each(function(){\n      var $elem = $(this),\n          $link = $elem.find('a'),\n          isActive = $elem.hasClass('is-active'),\n          hash = $link.attr('href').slice(1),\n          linkId = hash + '-label',\n          $tabContent = $(hash);\n\n      $elem.attr({'role': 'presentation'});\n\n      $link.attr({\n        'role': 'tab',\n        'aria-controls': hash,\n        'aria-selected': isActive,\n        'id': linkId\n      });\n\n      $tabContent.attr({\n        'role': 'tabpanel',\n        'aria-hidden': !isActive,\n        'aria-labelledby': linkId\n      });\n\n      if(isActive && _this.options.autoFocus){\n        $link.focus();\n      }\n    });\n    if(this.options.matchHeight){\n      var $images = this.$tabContent.find('img');\n      if($images.length){\n        Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n      }else{\n        this._setHeight();\n      }\n    }\n    this._events();\n  };\n  /**\n   * Adds event handlers for items within the tabs.\n   * @private\n   */\n   Tabs.prototype._events = function(){\n    this._addKeyHandler();\n    this._addClickHandler();\n    if(this.options.matchHeight){\n      $(window).on('changed.zf.mediaquery', this._setHeight.bind(this));\n    }\n  };\n\n  /**\n   * Adds click handlers for items within the tabs.\n   * @private\n   */\n  Tabs.prototype._addClickHandler = function(){\n    var _this = this;\n    this.$tabTitles.off('click.zf.tabs')\n                   .on('click.zf.tabs', function(e){\n                     e.preventDefault();\n                     e.stopPropagation();\n                     if($(this).hasClass('is-active')){\n                       return;\n                     }\n                     _this._handleTabChange($(this));\n                   });\n  };\n\n  /**\n   * Adds keyboard event handlers for items within the tabs.\n   * @private\n   */\n  Tabs.prototype._addKeyHandler = function(){\n    var _this = this;\n    var $firstTab = _this.$element.find('li:first-of-type');\n    var $lastTab = _this.$element.find('li:last-of-type');\n\n    this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function(e){\n      e.stopPropagation();\n      e.preventDefault();\n\n      var $element = $(this),\n        $elements = $element.parent('ul').children('li'),\n        $prevElement,\n        $nextElement;\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          if (_this.options.wrapOnKeys) {\n            $prevElement = i === 0 ? $elements.last() : $elements.eq(i-1);\n            $nextElement = i === $elements.length -1 ? $elements.first() : $elements.eq(i+1);\n          } else {\n            $prevElement = $elements.eq(Math.max(0, i-1));\n            $nextElement = $elements.eq(Math.min(i+1, $elements.length-1));\n          }\n          return;\n        }\n      });\n\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, _this, {\n        open: function() {\n          $element.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($element);\n        },\n        previous: function() {\n          $prevElement.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($prevElement);\n        },\n        next: function() {\n          $nextElement.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($nextElement);\n        }\n      });\n    });\n  };\n\n\n  /**\n   * Opens the tab `$targetContent` defined by `$target`.\n   * @param {jQuery} $target - Tab to open.\n   * @fires Tabs#change\n   * @function\n   */\n  Tabs.prototype._handleTabChange = function($target){\n    var $tabLink = $target.find('[role=\"tab\"]'),\n        hash = $tabLink.attr('href'),\n        $targetContent = $(hash),\n\n        $oldTab = this.$element.find('.' + this.options.linkClass + '.is-active')\n                  .removeClass('is-active').find('[role=\"tab\"]')\n                  .attr({'aria-selected': 'false'}).attr('href');\n\n    $($oldTab).removeClass('is-active').attr({'aria-hidden': 'true'});\n\n    $target.addClass('is-active');\n\n    $tabLink.attr({'aria-selected': 'true'});\n\n    $targetContent\n      .addClass('is-active')\n      .attr({'aria-hidden': 'false'});\n\n    /**\n     * Fires when the plugin has successfully changed tabs.\n     * @event Tabs#change\n     */\n    this.$element.trigger('change.zf.tabs', [$target]);\n    // Foundation.reflow(this.$element, 'tabs');\n  };\n\n  /**\n   * Public method for selecting a content pane to display.\n   * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n   * @function\n   */\n  Tabs.prototype.selectTab = function(elem){\n    var idStr;\n    if(typeof elem === 'object'){\n      idStr = elem[0].id;\n    }else{\n      idStr = elem;\n    }\n\n    if(idStr.indexOf('#') < 0){\n      idStr = '#' + idStr;\n    }\n    var $target = this.$tabTitles.find('[href=\"' + idStr + '\"]').parent('.' + this.options.linkClass);\n\n    this._handleTabChange($target);\n  };\n  /**\n   * Sets the height of each panel to the height of the tallest panel.\n   * If enabled in options, gets called on media query change.\n   * If loading content via external source, can be called directly or with _reflow.\n   * @function\n   * @private\n   */\n  Tabs.prototype._setHeight = function(){\n    var max = 0;\n    this.$tabContent.find('.' + this.options.panelClass)\n                    .css('height', '')\n                    .each(function(){\n                      var panel = $(this),\n                          isActive = panel.hasClass('is-active');\n\n                      if(!isActive){\n                        panel.css({'visibility': 'hidden', 'display': 'block'});\n                      }\n                      var temp = this.getBoundingClientRect().height;\n\n                      if(!isActive){\n                        panel.css({'visibility': '', 'display': ''});\n                      }\n\n                      max = temp > max ? temp : max;\n                    })\n                    .css('height', max + 'px');\n  };\n\n  /**\n   * Destroys an instance of an tabs.\n   * @fires Tabs#destroyed\n   */\n  Tabs.prototype.destroy = function() {\n    this.$element.find('.' + this.options.linkClass)\n                 .off('.zf.tabs').hide().end()\n                 .find('.' + this.options.panelClass)\n                 .hide();\n    if(this.options.matchHeight){\n      $(window).off('changed.zf.mediaquery');\n    }\n    Foundation.unregisterPlugin(this);\n  };\n\n  Foundation.plugin(Tabs, 'Tabs');\n\n  function checkClass($elem){\n    return $elem.hasClass('is-active');\n  }\n}(jQuery, window.Foundation);\n"]},"hash":"f8332058171e2d4c0b533faafdd401bf351ad8ff"}
