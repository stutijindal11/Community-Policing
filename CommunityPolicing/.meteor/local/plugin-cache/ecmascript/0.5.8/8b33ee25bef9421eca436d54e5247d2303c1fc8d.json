{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.responsiveToggle.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.responsiveToggle.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.responsiveToggle.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.responsiveToggle.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.responsiveToggle"},"ignored":false,"code":"/**\n * ResponsiveToggle module.\n * @module foundation.responsiveToggle\n * @requires foundation.util.mediaQuery\n */\n!function ($, Foundation) {\n\n  'use strict';\n\n  /**\n   * Creates a new instance of Tab Bar.\n   * @class\n   * @fires ResponsiveToggle#init\n   * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n\n  function ResponsiveToggle(element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, ResponsiveToggle.defaults, options);\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this);\n  }\n\n  ResponsiveToggle.defaults = {\n    /**\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n     * @option\n     * @example 'medium'\n     */\n    hideFor: 'medium'\n  };\n\n  /**\n   * Initializes the tab bar by finding the target element, toggling element, and running update().\n   * @function\n   * @private\n   */\n  ResponsiveToggle.prototype._init = function () {\n    var targetID = this.$element.data('responsive-toggle');\n    if (!targetID) {\n      console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n    }\n\n    this.$targetMenu = $('#' + targetID);\n    this.$toggler = this.$element.find('[data-toggle]');\n\n    this._update();\n  };\n\n  /**\n   * Adds necessary event handlers for the tab bar to work.\n   * @function\n   * @private\n   */\n  ResponsiveToggle.prototype._events = function () {\n    var _this = this;\n\n    $(window).on('changed.zf.mediaquery', this._update.bind(this));\n\n    this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n  };\n\n  /**\n   * Checks the current media query to determine if the tab bar should be visible or hidden.\n   * @function\n   * @private\n   */\n  ResponsiveToggle.prototype._update = function () {\n    // Mobile\n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n      this.$element.show();\n      this.$targetMenu.hide();\n    }\n\n    // Desktop\n    else {\n        this.$element.hide();\n        this.$targetMenu.show();\n      }\n  };\n\n  /**\n   * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n   * @function\n   * @fires ResponsiveToggle#toggled\n   */\n  ResponsiveToggle.prototype.toggleMenu = function () {\n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n      this.$targetMenu.toggle(0);\n\n      /**\n       * Fires when the element attached to the tab bar toggles.\n       * @event ResponsiveToggle#toggled\n       */\n      this.$element.trigger('toggled.zf.responsiveToggle');\n    }\n  };\n  ResponsiveToggle.prototype.destroy = function () {\n    //TODO this...\n  };\n  Foundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n}(jQuery, Foundation);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.responsiveToggle.js"],"names":[],"mappings":";;;;;AAKA,CAAC,UAAS,CAAT,EAAY,UAAZ,EAAwB;;AAEzB;;;;;;;;;;AASA,WAAS,gBAAT,CAA0B,OAA1B,EAAmC,OAAnC,EAA4C;AAC1C,SAAK,QAAL,GAAgB,EAAE,OAAF,CAAhB;AACA,SAAK,OAAL,GAAe,EAAE,MAAF,CAAS,EAAT,EAAa,iBAAiB,QAA9B,EAAwC,OAAxC,CAAf;;AAEA,SAAK,KAAL;AACA,SAAK,OAAL;;AAEA,eAAW,cAAX,CAA0B,IAA1B;AACD;;AAED,mBAAiB,QAAjB,GAA4B;;;;;;AAM1B,aAAS;AANiB,GAA5B;;;;;;;AAcA,mBAAiB,SAAjB,CAA2B,KAA3B,GAAmC,YAAW;AAC5C,QAAI,WAAW,KAAK,QAAL,CAAc,IAAd,CAAmB,mBAAnB,CAAf;AACA,QAAI,CAAC,QAAL,EAAe;AACb,cAAQ,KAAR,CAAc,kEAAd;AACD;;AAED,SAAK,WAAL,GAAmB,EAAE,MAAI,QAAN,CAAnB;AACA,SAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,IAAd,CAAmB,eAAnB,CAAhB;;AAEA,SAAK,OAAL;AACD,GAVD;;;;;;;AAiBA,mBAAiB,SAAjB,CAA2B,OAA3B,GAAqC,YAAW;AAC9C,QAAI,QAAQ,IAAZ;;AAEA,MAAE,MAAF,EAAU,EAAV,CAAa,uBAAb,EAAsC,KAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB,CAAtC;;AAEA,SAAK,QAAL,CAAc,EAAd,CAAiB,2BAAjB,EAA8C,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAA9C;AACD,GAND;;;;;;;AAaA,mBAAiB,SAAjB,CAA2B,OAA3B,GAAqC,YAAW;;AAE9C,QAAI,CAAC,WAAW,UAAX,CAAsB,OAAtB,CAA8B,KAAK,OAAL,CAAa,OAA3C,CAAL,EAA0D;AACxD,WAAK,QAAL,CAAc,IAAd;AACA,WAAK,WAAL,CAAiB,IAAjB;AACD;;;AAHD,SAMK;AACH,aAAK,QAAL,CAAc,IAAd;AACA,aAAK,WAAL,CAAiB,IAAjB;AACD;AACF,GAZD;;;;;;;AAmBA,mBAAiB,SAAjB,CAA2B,UAA3B,GAAwC,YAAW;AACjD,QAAI,CAAC,WAAW,UAAX,CAAsB,OAAtB,CAA8B,KAAK,OAAL,CAAa,OAA3C,CAAL,EAA0D;AACxD,WAAK,WAAL,CAAiB,MAAjB,CAAwB,CAAxB;;;;;;AAMA,WAAK,QAAL,CAAc,OAAd,CAAsB,6BAAtB;AACD;AACF,GAVD;AAWA,mBAAiB,SAAjB,CAA2B,OAA3B,GAAqC,YAAU;;AAE9C,GAFD;AAGA,aAAW,MAAX,CAAkB,gBAAlB,EAAoC,kBAApC;AAEC,CApGA,CAoGC,MApGD,EAoGS,UApGT,CAAD","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.responsiveToggle.js.map","sourcesContent":["/**\n * ResponsiveToggle module.\n * @module foundation.responsiveToggle\n * @requires foundation.util.mediaQuery\n */\n!function($, Foundation) {\n\n'use strict';\n\n/**\n * Creates a new instance of Tab Bar.\n * @class\n * @fires ResponsiveToggle#init\n * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n * @param {Object} options - Overrides to the default plugin settings.\n */\nfunction ResponsiveToggle(element, options) {\n  this.$element = $(element);\n  this.options = $.extend({}, ResponsiveToggle.defaults, options);\n\n  this._init();\n  this._events();\n\n  Foundation.registerPlugin(this);\n}\n\nResponsiveToggle.defaults = {\n  /**\n   * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n   * @option\n   * @example 'medium'\n   */\n  hideFor: 'medium'\n};\n\n/**\n * Initializes the tab bar by finding the target element, toggling element, and running update().\n * @function\n * @private\n */\nResponsiveToggle.prototype._init = function() {\n  var targetID = this.$element.data('responsive-toggle');\n  if (!targetID) {\n    console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n  }\n\n  this.$targetMenu = $('#'+targetID);\n  this.$toggler = this.$element.find('[data-toggle]');\n\n  this._update();\n};\n\n/**\n * Adds necessary event handlers for the tab bar to work.\n * @function\n * @private\n */\nResponsiveToggle.prototype._events = function() {\n  var _this = this;\n\n  $(window).on('changed.zf.mediaquery', this._update.bind(this));\n\n  this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n};\n\n/**\n * Checks the current media query to determine if the tab bar should be visible or hidden.\n * @function\n * @private\n */\nResponsiveToggle.prototype._update = function() {\n  // Mobile\n  if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n    this.$element.show();\n    this.$targetMenu.hide();\n  }\n\n  // Desktop\n  else {\n    this.$element.hide();\n    this.$targetMenu.show();\n  }\n};\n\n/**\n * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n * @function\n * @fires ResponsiveToggle#toggled\n */\nResponsiveToggle.prototype.toggleMenu = function() {\n  if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n    this.$targetMenu.toggle(0);\n\n    /**\n     * Fires when the element attached to the tab bar toggles.\n     * @event ResponsiveToggle#toggled\n     */\n    this.$element.trigger('toggled.zf.responsiveToggle');\n  }\n};\nResponsiveToggle.prototype.destroy = function(){\n  //TODO this...\n};\nFoundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n\n}(jQuery, Foundation);\n"]},"hash":"8b33ee25bef9421eca436d54e5247d2303c1fc8d"}
