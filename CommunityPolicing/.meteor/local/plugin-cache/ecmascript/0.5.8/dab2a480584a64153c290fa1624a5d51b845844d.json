{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-haml.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-haml.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-haml.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-haml.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"prism-haml"},"ignored":false,"code":"/* TODO\n\tHandle multiline code after tag\n\t    %foo= some |\n\t\t\tmultiline |\n\t\t\tcode |\n*/\n\n(function (Prism) {\n\n\tPrism.languages.haml = {\n\t\t// Multiline stuff should appear before the rest\n\n\t\t'multiline-comment': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*((?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'comment'\n\t\t},\n\n\t\t'multiline-code': [{\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*((?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*((?:\\r?\\n|\\r)\\2[\\t ]+.+)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.ruby\n\t\t\t}\n\t\t}, {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*((?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.ruby\n\t\t\t}\n\t\t}],\n\n\t\t// See at the end of the file for known filters\n\t\t'filter': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+((?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'filter-name': {\n\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'markup': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.markup\n\t\t\t}\n\t\t},\n\t\t'doctype': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'tag': {\n\t\t\t// Allows for one nested group of braces\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attributes': [{\n\t\t\t\t\t// Lookbehind tries to prevent interpolations for breaking it all\n\t\t\t\t\t// Allows for one nested group of braces\n\t\t\t\t\tpattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\trest: Prism.languages.ruby\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tpattern: /\\([^)]+\\)/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\"(?:\\\\?.)*?\"|[^)\\s]+)/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n\t\t\t\t\t\t'punctuation': /[=(),]/\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tpattern: /\\[[^\\]]+\\]/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\trest: Prism.languages.ruby\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\t'punctuation': /[<>]/\n\t\t\t}\n\t\t},\n\t\t'code': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.ruby\n\t\t\t}\n\t\t},\n\t\t// Interpolations in plain text\n\t\t'interpolation': {\n\t\t\tpattern: /#\\{[^}]+\\}/,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^#\\{|\\}$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.ruby\n\t\t\t}\n\t\t},\n\t\t'punctuation': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n\t\t\tlookbehind: true\n\t\t}\n\t};\n\n\tvar filter_pattern = '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}((?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\n\t// Non exhaustive list of available filters and associated languages\n\tvar filters = ['css', { filter: 'coffee', language: 'coffeescript' }, 'erb', 'javascript', 'less', 'markdown', 'ruby', 'scss', 'textile'];\n\tvar all_filters = {};\n\tfor (var i = 0, l = filters.length; i < l; i++) {\n\t\tvar filter = filters[i];\n\t\tfilter = typeof filter === 'string' ? { filter: filter, language: filter } : filter;\n\t\tif (Prism.languages[filter.language]) {\n\t\t\tall_filters['filter-' + filter.filter] = {\n\t\t\t\tpattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter)),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'filter-name': {\n\t\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages[filter.language]\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tPrism.languages.insertBefore('haml', 'filter', all_filters);\n})(Prism);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-haml.js"],"names":[],"mappings":"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","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-haml.js.map","sourcesContent":["/* TODO\n\tHandle multiline code after tag\n\t    %foo= some |\n\t\t\tmultiline |\n\t\t\tcode |\n*/\n\n(function(Prism) {\n\n\tPrism.languages.haml = {\n\t\t// Multiline stuff should appear before the rest\n\n\t\t'multiline-comment': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*((?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'comment'\n\t\t},\n\n\t\t'multiline-code': [\n\t\t\t{\n\t\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*((?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*((?:\\r?\\n|\\r)\\2[\\t ]+.+)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: Prism.languages.ruby\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*((?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: Prism.languages.ruby\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\n\t\t// See at the end of the file for known filters\n\t\t'filter': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+((?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'filter-name': {\n\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'markup': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.markup\n\t\t\t}\n\t\t},\n\t\t'doctype': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'tag': {\n\t\t\t// Allows for one nested group of braces\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attributes': [\n\t\t\t\t\t{\n\t\t\t\t\t\t// Lookbehind tries to prevent interpolations for breaking it all\n\t\t\t\t\t\t// Allows for one nested group of braces\n\t\t\t\t\t\tpattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\trest: Prism.languages.ruby\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /\\([^)]+\\)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\"(?:\\\\?.)*?\"|[^)\\s]+)/,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n\t\t\t\t\t\t\t'punctuation': /[=(),]/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /\\[[^\\]]+\\]/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\trest: Prism.languages.ruby\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'punctuation': /[<>]/\n\t\t\t}\n\t\t},\n\t\t'code': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.ruby\n\t\t\t}\n\t\t},\n\t\t// Interpolations in plain text\n\t\t'interpolation': {\n\t\t\tpattern: /#\\{[^}]+\\}/,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^#\\{|\\}$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.ruby\n\t\t\t}\n\t\t},\n\t\t'punctuation': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n\t\t\tlookbehind: true\n\t\t}\n\t};\n\n\tvar filter_pattern = '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}((?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\n\t// Non exhaustive list of available filters and associated languages\n\tvar filters = [\n\t\t'css',\n\t\t{filter:'coffee',language:'coffeescript'},\n\t\t'erb',\n\t\t'javascript',\n\t\t'less',\n\t\t'markdown',\n\t\t'ruby',\n\t\t'scss',\n\t\t'textile'\n\t];\n\tvar all_filters = {};\n\tfor (var i = 0, l = filters.length; i < l; i++) {\n\t\tvar filter = filters[i];\n\t\tfilter = typeof filter === 'string' ? {filter: filter, language: filter} : filter;\n\t\tif (Prism.languages[filter.language]) {\n\t\t\tall_filters['filter-' + filter.filter] = {\n\t\t\t\tpattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter)),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'filter-name': {\n\t\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages[filter.language]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tPrism.languages.insertBefore('haml', 'filter', all_filters);\n\n}(Prism));"]},"hash":"dab2a480584a64153c290fa1624a5d51b845844d"}
