{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-http.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-http.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-http.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-http.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"prism-http"},"ignored":false,"code":"Prism.languages.http = {\n\t'request-line': {\n\t\tpattern: /^(POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b\\shttps?:\\/\\/\\S+\\sHTTP\\/[0-9.]+/m,\n\t\tinside: {\n\t\t\t// HTTP Verb\n\t\t\tproperty: /^(POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n\t\t\t// Path or query argument\n\t\t\t'attr-name': /:\\w+/\n\t\t}\n\t},\n\t'response-status': {\n\t\tpattern: /^HTTP\\/1.[01] [0-9]+.*/m,\n\t\tinside: {\n\t\t\t// Status, e.g. 200 OK\n\t\t\tproperty: {\n\t\t\t\tpattern: /(^HTTP\\/1.[01] )[0-9]+.*/i,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t}\n\t},\n\t// HTTP header name\n\t'header-name': {\n\t\tpattern: /^[\\w-]+:(?=.)/m,\n\t\talias: 'keyword'\n\t}\n};\n\n// Create a mapping of Content-Type headers to language definitions\nvar httpLanguages = {\n\t'application/json': Prism.languages.javascript,\n\t'application/xml': Prism.languages.markup,\n\t'text/xml': Prism.languages.markup,\n\t'text/html': Prism.languages.markup\n};\n\n// Insert each content type parser that has its associated language\n// currently loaded.\nfor (var contentType in meteorBabelHelpers.sanitizeForInObject(httpLanguages)) {\n\tif (httpLanguages[contentType]) {\n\t\tvar options = {};\n\t\toptions[contentType] = {\n\t\t\tpattern: new RegExp('(content-type:\\\\s*' + contentType + '[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*', 'i'),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: httpLanguages[contentType]\n\t\t\t}\n\t\t};\n\t\tPrism.languages.insertBefore('http', 'header-name', options);\n\t}\n}","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-http.js"],"names":[],"mappings":"AAAA,MAAM,SAAN,CAAgB,IAAhB,GAAuB;AACtB,iBAAgB;AACf,WAAS,sFADM;AAEf,UAAQ;;AAEP,aAAU,sDAFH;;AAIP,gBAAa;AAJN;AAFO,EADM;AAUtB,oBAAmB;AAClB,WAAS,yBADS;AAElB,UAAQ;;AAEP,aAAU;AACG,aAAS,2BADZ;AAEG,gBAAY;AAFf;AAFH;AAFU,EAVG;;AAqBtB,gBAAe;AACR,WAAS,gBADD;AAER,SAAO;AAFC;AArBO,CAAvB;;;AA4BA,IAAI,gBAAgB;AACnB,qBAAoB,MAAM,SAAN,CAAgB,UADjB;AAEnB,oBAAmB,MAAM,SAAN,CAAgB,MAFhB;AAGnB,aAAY,MAAM,SAAN,CAAgB,MAHT;AAInB,cAAa,MAAM,SAAN,CAAgB;AAJV,CAApB;;;;AASA,KAAK,IAAI,WAAT,2CAAwB,aAAxB,GAAuC;AACtC,KAAI,cAAc,WAAd,CAAJ,EAAgC;AAC/B,MAAI,UAAU,EAAd;AACA,UAAQ,WAAR,IAAuB;AACtB,YAAS,IAAI,MAAJ,CAAW,uBAAuB,WAAvB,GAAqC,wCAAhD,EAA0F,GAA1F,CADa;AAEtB,eAAY,IAFU;AAGtB,WAAQ;AACP,UAAM,cAAc,WAAd;AADC;AAHc,GAAvB;AAOA,QAAM,SAAN,CAAgB,YAAhB,CAA6B,MAA7B,EAAqC,aAArC,EAAoD,OAApD;AACA;AACD","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-http.js.map","sourcesContent":["Prism.languages.http = {\n\t'request-line': {\n\t\tpattern: /^(POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b\\shttps?:\\/\\/\\S+\\sHTTP\\/[0-9.]+/m,\n\t\tinside: {\n\t\t\t// HTTP Verb\n\t\t\tproperty: /^(POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n\t\t\t// Path or query argument\n\t\t\t'attr-name': /:\\w+/\n\t\t}\n\t},\n\t'response-status': {\n\t\tpattern: /^HTTP\\/1.[01] [0-9]+.*/m,\n\t\tinside: {\n\t\t\t// Status, e.g. 200 OK\n\t\t\tproperty: {\n                pattern: /(^HTTP\\/1.[01] )[0-9]+.*/i,\n                lookbehind: true\n            }\n\t\t}\n\t},\n\t// HTTP header name\n\t'header-name': {\n        pattern: /^[\\w-]+:(?=.)/m,\n        alias: 'keyword'\n    }\n};\n\n// Create a mapping of Content-Type headers to language definitions\nvar httpLanguages = {\n\t'application/json': Prism.languages.javascript,\n\t'application/xml': Prism.languages.markup,\n\t'text/xml': Prism.languages.markup,\n\t'text/html': Prism.languages.markup\n};\n\n// Insert each content type parser that has its associated language\n// currently loaded.\nfor (var contentType in httpLanguages) {\n\tif (httpLanguages[contentType]) {\n\t\tvar options = {};\n\t\toptions[contentType] = {\n\t\t\tpattern: new RegExp('(content-type:\\\\s*' + contentType + '[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*', 'i'),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: httpLanguages[contentType]\n\t\t\t}\n\t\t};\n\t\tPrism.languages.insertBefore('http', 'header-name', options);\n\t}\n}\n"]},"hash":"bbae1339faaa451d6248c162b6ccd2c4880dd249"}
