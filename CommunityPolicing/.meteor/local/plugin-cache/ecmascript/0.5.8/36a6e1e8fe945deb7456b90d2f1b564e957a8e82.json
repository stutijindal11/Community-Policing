{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/examples.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/examples.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/examples.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/examples.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"examples"},"ignored":false,"code":"/**\n * Manage examples\n */\n\n(function () {\n\n\tvar examples = {};\n\n\tvar treeURL = 'https://api.github.com/repos/PrismJS/prism/git/trees/gh-pages?recursive=1';\n\tvar treePromise = new Promise(function (resolve) {\n\t\t$u.xhr({\n\t\t\turl: treeURL,\n\t\t\tcallback: function () {\n\t\t\t\tfunction callback(xhr) {\n\t\t\t\t\tif (xhr.status < 400) {\n\t\t\t\t\t\tresolve(JSON.parse(xhr.responseText).tree);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn callback;\n\t\t\t}()\n\t\t});\n\t});\n\n\tvar languages = components.languages;\n\n\tfor (var id in meteorBabelHelpers.sanitizeForInObject(languages)) {\n\t\tif (id === 'meta') {\n\t\t\tcontinue;\n\t\t}\n\n\t\t(function (id) {\n\t\t\tvar language = languages[id];\n\t\t\tvar checked = false;\n\n\t\t\tif (language.option === 'default') {\n\t\t\t\tchecked = true;\n\t\t\t}\n\n\t\t\tlanguage.enabled = checked;\n\t\t\tlanguage.path = languages.meta.path.replace(/\\{id}/g, id) + '.js';\n\t\t\tlanguage.examplesPath = languages.meta.examplesPath.replace(/\\{id}/g, id) + '.html';\n\n\t\t\tfileExists(language.examplesPath).then(function (exists) {\n\t\t\t\t$u.element.create('label', {\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t'data-id': id,\n\t\t\t\t\t\t'title': !exists ? 'No examples are available for this language.' : ''\n\t\t\t\t\t},\n\t\t\t\t\tclassName: !exists ? 'unavailable' : '',\n\t\t\t\t\tcontents: [{\n\t\t\t\t\t\ttag: 'input',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t\t\tname: 'language',\n\t\t\t\t\t\t\tvalue: id,\n\t\t\t\t\t\t\tchecked: checked && exists,\n\t\t\t\t\t\t\tdisabled: !exists,\n\t\t\t\t\t\t\tonclick: function () {\n\t\t\t\t\t\t\t\tfunction onclick() {\n\t\t\t\t\t\t\t\t\t$$('input[name=\"' + this.name + '\"]').forEach(function (input) {\n\t\t\t\t\t\t\t\t\t\tlanguages[input.value].enabled = input.checked;\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tupdate(id);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn onclick;\n\t\t\t\t\t\t\t}()\n\t\t\t\t\t\t}\n\t\t\t\t\t}, language.title],\n\t\t\t\t\tinside: '#languages'\n\t\t\t\t});\n\t\t\t\texamples[id] = $u.element.create('section', {\n\t\t\t\t\t'id': 'language-' + id,\n\t\t\t\t\t'className': 'language-' + id,\n\t\t\t\t\tinside: '#examples'\n\t\t\t\t});\n\t\t\t\tif (checked) {\n\t\t\t\t\tupdate(id);\n\t\t\t\t}\n\t\t\t});\n\t\t})(id);\n\t}\n\n\tfunction fileExists(filepath) {\n\t\treturn treePromise.then(function (tree) {\n\t\t\tfor (var i = 0, l = tree.length; i < l; i++) {\n\t\t\t\tif (tree[i].path === filepath) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tfunction getFileContents(filepath) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\t$u.xhr({\n\t\t\t\turl: filepath,\n\t\t\t\tcallback: function () {\n\t\t\t\t\tfunction callback(xhr) {\n\t\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t\tresolve(xhr.responseText);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn callback;\n\t\t\t\t}()\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction update(id) {\n\t\tvar language = languages[id];\n\t\tif (language.enabled) {\n\t\t\tif (!language.examplesPromise) {\n\t\t\t\tlanguage.examplesPromise = getFileContents(language.examplesPath);\n\t\t\t}\n\t\t\tlanguage.examplesPromise.then(function (contents) {\n\t\t\t\texamples[id].innerHTML = contents;\n\n\t\t\t\tloadLanguage(id).then(function () {\n\t\t\t\t\tvar elements = examples[id].querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\n\n\t\t\t\t\tfor (var i = 0, element; element = elements[i++];) {\n\t\t\t\t\t\tPrism.highlightElement(element);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\texamples[id].innerHTML = '';\n\t\t}\n\t}\n\n\t/**\n  * Loads a language, including all dependencies\n  *\n  * @param {string} lang the language to load\n  * @type {Promise} the promise which resolves as soon as everything is loaded\n  */\n\tfunction loadLanguage(lang) {\n\t\t// at first we need to fetch all dependencies for the main language\n\t\t// Note: we need to do this, even if the main language already is loaded (just to be sure..)\n\t\t//\n\t\t// We load an array of all dependencies and call recursively this function on each entry\n\t\t//\n\t\t// dependencies is now an (possibly empty) array of loading-promises\n\t\tvar dependencies = getDependenciesOfLanguage(lang).map(loadLanguage);\n\n\t\t// We create a promise, which will resolve, as soon as all dependencies are loaded.\n\t\t// They need to be fully loaded because the main language may extend them.\n\t\treturn Promise.all(dependencies).then(function () {\n\n\t\t\t// If the main language itself isn't already loaded, load it now\n\t\t\t// and return the newly created promise (we chain the promises).\n\t\t\t// If the language is already loaded, just do nothing - the next .then()\n\t\t\t// will immediately be called\n\t\t\tif (!Prism.languages[lang]) {\n\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t$u.script('components/prism-' + lang + '.js', resolve);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n  * Returns all dependencies (as identifiers) of a specific language\n  *\n  * @param {string} lang\n  * @returns {Array.<string>} the list of dependencies. Empty if the language has none.\n  */\n\tfunction getDependenciesOfLanguage(lang) {\n\t\tif (!components.languages[lang] || !components.languages[lang].require) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn $u.type(components.languages[lang].require) === \"array\" ? components.languages[lang].require : [components.languages[lang].require];\n\t}\n})();","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/examples.js"],"names":[],"mappings":"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","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/examples.js.map","sourcesContent":["/**\n * Manage examples\n */\n\n(function() {\n\nvar examples = {};\n\nvar treeURL = 'https://api.github.com/repos/PrismJS/prism/git/trees/gh-pages?recursive=1';\nvar treePromise = new Promise(function (resolve) {\n\t$u.xhr({\n\t\turl: treeURL,\n\t\tcallback: function (xhr) {\n\t\t\tif (xhr.status < 400) {\n\t\t\t\tresolve(JSON.parse(xhr.responseText).tree);\n\t\t\t}\n\t\t}\n\t});\n});\n\nvar languages = components.languages;\n\nfor (var id in languages) {\n\tif (id === 'meta') {\n\t\tcontinue;\n\t}\n\n\t(function (id) {\n\t\tvar language = languages[id];\n\t\tvar checked = false;\n\n\t\tif (language.option === 'default') {\n\t\t\tchecked = true;\n\t\t}\n\n\t\tlanguage.enabled = checked;\n\t\tlanguage.path = languages.meta.path.replace(/\\{id}/g, id) + '.js';\n\t\tlanguage.examplesPath = languages.meta.examplesPath.replace(/\\{id}/g, id) + '.html';\n\n\t\tfileExists(language.examplesPath).then(function (exists) {\n\t\t\t$u.element.create('label', {\n\t\t\t\tattributes: {\n\t\t\t\t\t'data-id': id,\n\t\t\t\t\t'title': !exists ? 'No examples are available for this language.' : ''\n\t\t\t\t},\n\t\t\t\tclassName: !exists ? 'unavailable' : '',\n\t\t\t\tcontents: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttag: 'input',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t\t\tname: 'language',\n\t\t\t\t\t\t\tvalue: id,\n\t\t\t\t\t\t\tchecked: checked && exists,\n\t\t\t\t\t\t\tdisabled: !exists,\n\t\t\t\t\t\t\tonclick: function () {\n\t\t\t\t\t\t\t\t$$('input[name=\"' + this.name + '\"]').forEach(function (input) {\n\t\t\t\t\t\t\t\t\tlanguages[input.value].enabled = input.checked;\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tupdate(id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tlanguage.title\n\t\t\t\t],\n\t\t\t\tinside: '#languages'\n\t\t\t});\n\t\t\texamples[id] = $u.element.create('section', {\n\t\t\t\t'id': 'language-' + id,\n\t\t\t\t'className': 'language-' + id,\n\t\t\t\tinside: '#examples'\n\t\t\t});\n\t\t\tif (checked) {\n\t\t\t\tupdate(id);\n\t\t\t}\n\t\t});\n\t}(id));\n}\n\nfunction fileExists(filepath) {\n\treturn treePromise.then(function (tree) {\n\t\tfor (var i = 0, l = tree.length; i < l; i++) {\n\t\t\tif (tree[i].path === filepath) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t});\n}\n\nfunction getFileContents(filepath) {\n\treturn new Promise(function (resolve, reject) {\n\t\t$u.xhr({\n\t\t\turl: filepath,\n\t\t\tcallback: function (xhr) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tresolve(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\treject();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction update(id) {\n\tvar language = languages[id];\n\tif (language.enabled) {\n\t\tif (!language.examplesPromise) {\n\t\t\tlanguage.examplesPromise = getFileContents(language.examplesPath);\n\t\t}\n\t\tlanguage.examplesPromise.then(function (contents) {\n\t\t\texamples[id].innerHTML = contents;\n\n\t\t\tloadLanguage(id).then(function () {\n\t\t\t\tvar elements = examples[id].querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\n\n\t\t\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t\t\tPrism.highlightElement(element);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t} else {\n\t\texamples[id].innerHTML = '';\n\t}\n}\n\n/**\n * Loads a language, including all dependencies\n *\n * @param {string} lang the language to load\n * @type {Promise} the promise which resolves as soon as everything is loaded\n */\nfunction loadLanguage (lang)\n{\n\t// at first we need to fetch all dependencies for the main language\n\t// Note: we need to do this, even if the main language already is loaded (just to be sure..)\n\t//\n\t// We load an array of all dependencies and call recursively this function on each entry\n\t//\n\t// dependencies is now an (possibly empty) array of loading-promises\n\tvar dependencies = getDependenciesOfLanguage(lang).map(loadLanguage);\n\n\t// We create a promise, which will resolve, as soon as all dependencies are loaded.\n\t// They need to be fully loaded because the main language may extend them.\n\treturn Promise.all(dependencies)\n\t\t.then(function () {\n\n\t\t\t// If the main language itself isn't already loaded, load it now\n\t\t\t// and return the newly created promise (we chain the promises).\n\t\t\t// If the language is already loaded, just do nothing - the next .then()\n\t\t\t// will immediately be called\n\t\t\tif (!Prism.languages[lang]) {\n\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t$u.script('components/prism-' + lang + '.js', resolve);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n}\n\n\n/**\n * Returns all dependencies (as identifiers) of a specific language\n *\n * @param {string} lang\n * @returns {Array.<string>} the list of dependencies. Empty if the language has none.\n */\nfunction getDependenciesOfLanguage (lang)\n{\n\tif (!components.languages[lang] || !components.languages[lang].require)\n\t{\n\t\treturn [];\n\t}\n\n\treturn ($u.type(components.languages[lang].require) === \"array\")\n\t\t? components.languages[lang].require\n\t\t: [components.languages[lang].require];\n}\n\n}());\n"]},"hash":"36a6e1e8fe945deb7456b90d2f1b564e957a8e82"}
