{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/qunit/src/core/config.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/qunit/src/core/config.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/qunit/src/core/config.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/qunit/src/core/config.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"config"},"ignored":false,"code":"/**\n * Config object: Maintain internal state\n * Later exposed as QUnit.config\n * `config` initialized at top of scope\n */\nvar config = {\n\t// The queue of tests to run\n\tqueue: [],\n\n\t// block until document ready\n\tblocking: true,\n\n\t// by default, run previously failed tests first\n\t// very useful in combination with \"Hide passed tests\" checked\n\treorder: true,\n\n\t// by default, modify document.title when suite is done\n\taltertitle: true,\n\n\t// HTML Reporter: collapse every test except the first failing test\n\t// If false, all failing tests will be expanded\n\tcollapse: true,\n\n\t// by default, scroll to top of the page when suite is done\n\tscrolltop: true,\n\n\t// depth up-to which object will be dumped\n\tmaxDepth: 5,\n\n\t// when enabled, all tests must call expect()\n\trequireExpects: false,\n\n\t// add checkboxes that are persisted in the query-string\n\t// when enabled, the id is set to `true` as a `QUnit.config` property\n\turlConfig: [{\n\t\tid: \"hidepassed\",\n\t\tlabel: \"Hide passed tests\",\n\t\ttooltip: \"Only show tests and assertions that fail. Stored as query-strings.\"\n\t}, {\n\t\tid: \"noglobals\",\n\t\tlabel: \"Check for Globals\",\n\t\ttooltip: \"Enabling this will test if any test introduces new properties on the \" + \"global object (`window` in Browsers). Stored as query-strings.\"\n\t}, {\n\t\tid: \"notrycatch\",\n\t\tlabel: \"No try-catch\",\n\t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging \" + \"exceptions in IE reasonable. Stored as query-strings.\"\n\t}],\n\n\t// Set of all modules.\n\tmodules: [],\n\n\t// Stack of nested modules\n\tmoduleStack: [],\n\n\t// The first unnamed module\n\tcurrentModule: {\n\t\tname: \"\",\n\t\ttests: []\n\t},\n\n\tcallbacks: {}\n};\n\nvar urlParams = defined.document ? getUrlParams() : {};\n\n// Push a loose unnamed module to the modules collection\nconfig.modules.push(config.currentModule);\n\nif (urlParams.filter === true) {\n\tdelete urlParams.filter;\n}\n\n// String search anywhere in moduleName+testName\nconfig.filter = urlParams.filter;\n\nconfig.testId = [];\nif (urlParams.testId) {\n\t// Ensure that urlParams.testId is an array\n\turlParams.testId = decodeURIComponent(urlParams.testId).split(\",\");\n\tfor (var i = 0; i < urlParams.testId.length; i++) {\n\t\tconfig.testId.push(urlParams.testId[i]);\n\t}\n}","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/qunit/src/core/config.js"],"names":[],"mappings":";;;;;AAKA,IAAI,SAAS;;AAEZ,QAAO,EAFK;;;AAKZ,WAAU,IALE;;;;AASZ,UAAS,IATG;;;AAYZ,aAAY,IAZA;;;;AAgBZ,WAAU,IAhBE;;;AAmBZ,YAAW,IAnBC;;;AAsBZ,WAAU,CAtBE;;;AAyBZ,iBAAgB,KAzBJ;;;;AA6BZ,YAAW,CACV;AACC,MAAI,YADL;AAEC,SAAO,mBAFR;AAGC,WAAS;AAHV,EADU,EAMV;AACC,MAAI,WADL;AAEC,SAAO,mBAFR;AAGC,WAAS,0EACR;AAJF,EANU,EAYV;AACC,MAAI,YADL;AAEC,SAAO,cAFR;AAGC,WAAS,gFACR;AAJF,EAZU,CA7BC;;;AAkDZ,UAAS,EAlDG;;;AAqDZ,cAAa,EArDD;;;AAwDZ,gBAAe;AACd,QAAM,EADQ;AAEd,SAAO;AAFO,EAxDH;;AA6DZ,YAAW;AA7DC,CAAb;;AAgEA,IAAI,YAAY,QAAQ,QAAR,GAAmB,cAAnB,GAAoC,EAApD;;;AAGA,OAAO,OAAP,CAAe,IAAf,CAAqB,OAAO,aAA5B;;AAEA,IAAK,UAAU,MAAV,KAAqB,IAA1B,EAAiC;AAChC,QAAO,UAAU,MAAjB;AACA;;;AAGD,OAAO,MAAP,GAAgB,UAAU,MAA1B;;AAEA,OAAO,MAAP,GAAgB,EAAhB;AACA,IAAK,UAAU,MAAf,EAAwB;;AAEvB,WAAU,MAAV,GAAmB,mBAAoB,UAAU,MAA9B,EAAuC,KAAvC,CAA8C,GAA9C,CAAnB;AACA,MAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAAU,MAAV,CAAiB,MAArC,EAA6C,GAA7C,EAAmD;AAClD,SAAO,MAAP,CAAc,IAAd,CAAoB,UAAU,MAAV,CAAkB,CAAlB,CAApB;AACA;AACD","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/qunit/src/core/config.js.map","sourcesContent":["/**\n * Config object: Maintain internal state\n * Later exposed as QUnit.config\n * `config` initialized at top of scope\n */\nvar config = {\n\t// The queue of tests to run\n\tqueue: [],\n\n\t// block until document ready\n\tblocking: true,\n\n\t// by default, run previously failed tests first\n\t// very useful in combination with \"Hide passed tests\" checked\n\treorder: true,\n\n\t// by default, modify document.title when suite is done\n\taltertitle: true,\n\n\t// HTML Reporter: collapse every test except the first failing test\n\t// If false, all failing tests will be expanded\n\tcollapse: true,\n\n\t// by default, scroll to top of the page when suite is done\n\tscrolltop: true,\n\n\t// depth up-to which object will be dumped\n\tmaxDepth: 5,\n\n\t// when enabled, all tests must call expect()\n\trequireExpects: false,\n\n\t// add checkboxes that are persisted in the query-string\n\t// when enabled, the id is set to `true` as a `QUnit.config` property\n\turlConfig: [\n\t\t{\n\t\t\tid: \"hidepassed\",\n\t\t\tlabel: \"Hide passed tests\",\n\t\t\ttooltip: \"Only show tests and assertions that fail. Stored as query-strings.\"\n\t\t},\n\t\t{\n\t\t\tid: \"noglobals\",\n\t\t\tlabel: \"Check for Globals\",\n\t\t\ttooltip: \"Enabling this will test if any test introduces new properties on the \" +\n\t\t\t\t\"global object (`window` in Browsers). Stored as query-strings.\"\n\t\t},\n\t\t{\n\t\t\tid: \"notrycatch\",\n\t\t\tlabel: \"No try-catch\",\n\t\t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging \" +\n\t\t\t\t\"exceptions in IE reasonable. Stored as query-strings.\"\n\t\t}\n\t],\n\n\t// Set of all modules.\n\tmodules: [],\n\n\t// Stack of nested modules\n\tmoduleStack: [],\n\n\t// The first unnamed module\n\tcurrentModule: {\n\t\tname: \"\",\n\t\ttests: []\n\t},\n\n\tcallbacks: {}\n};\n\nvar urlParams = defined.document ? getUrlParams() : {};\n\n// Push a loose unnamed module to the modules collection\nconfig.modules.push( config.currentModule );\n\nif ( urlParams.filter === true ) {\n\tdelete urlParams.filter;\n}\n\n// String search anywhere in moduleName+testName\nconfig.filter = urlParams.filter;\n\nconfig.testId = [];\nif ( urlParams.testId ) {\n\t// Ensure that urlParams.testId is an array\n\turlParams.testId = decodeURIComponent( urlParams.testId ).split( \",\" );\n\tfor (var i = 0; i < urlParams.testId.length; i++ ) {\n\t\tconfig.testId.push( urlParams.testId[ i ] );\n\t}\n}\n"]},"hash":"f64d54132133aa86056ee435c308dae4ffe3f37b"}
