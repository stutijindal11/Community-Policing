{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.toggler.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.toggler.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.toggler.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.toggler.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.toggler"},"ignored":false,"code":"/**\n * Toggler module.\n * @module foundation.toggler\n * @requires foundation.util.motion\n */\n\n!function (Foundation, $) {\n  'use strict';\n\n  /**\n   * Creates a new instance of Toggler.\n   * @class\n   * @fires Toggler#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n\n  function Toggler(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Toggler.defaults, element.data(), options);\n    this.className = '';\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this);\n  }\n\n  Toggler.defaults = {\n    /**\n     * Tells the plugin if the element should animated when toggled.\n     * @option\n     * @example false\n     */\n    animate: false\n  };\n\n  /**\n   * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n   * @function\n   * @private\n   */\n  Toggler.prototype._init = function () {\n    var input;\n    // Parse animation classes if they were set\n    if (this.options.animate) {\n      input = this.options.animate.split(' ');\n\n      this.animationIn = input[0];\n      this.animationOut = input[1] || null;\n    }\n    // Otherwise, parse toggle class\n    else {\n        input = this.$element.data('toggler');\n\n        // Allow for a . at the beginning of the string\n        if (input[0] === '.') {\n          this.className = input.slice(1);\n        } else {\n          this.className = input;\n        }\n      }\n\n    // Add ARIA attributes to triggers\n    var id = this.$element[0].id;\n    $('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-controls', id);\n\n    // If the target is hidden, add aria-hidden\n    if (this.$element.is(':hidden')) {\n      this.$element.attr('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Initializes events for the toggle trigger.\n   * @function\n   * @private\n   */\n  Toggler.prototype._events = function () {\n    var _this = this;\n\n    this.$element.on('toggle.zf.trigger', function () {\n      _this.toggle();\n      return false;\n    });\n  };\n\n  /**\n   * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n   * @function\n   * @fires Toggler#on\n   * @fires Toggler#off\n   */\n  Toggler.prototype.toggle = function () {\n    if (!this.options.animate) {\n      this._toggleClass();\n    } else {\n      this._toggleAnimate();\n    }\n  };\n\n  Toggler.prototype._toggleClass = function () {\n    var _this = this;\n    this.$element.toggleClass(this.className);\n\n    if (this.$element.hasClass(this.className)) {\n      /**\n       * Fires if the target element has the class after a toggle.\n       * @event Toggler#on\n       */\n      this.$element.trigger('on.zf.toggler');\n    } else {\n      /**\n       * Fires if the target element does not have the class after a toggle.\n       * @event Toggler#off\n       */\n      this.$element.trigger('off.zf.toggler');\n    }\n\n    _this._updateARIA();\n  };\n\n  Toggler.prototype._toggleAnimate = function () {\n    var _this = this;\n\n    if (this.$element.is(':hidden')) {\n      Foundation.Motion.animateIn(this.$element, this.animationIn, function () {\n        this.trigger('on.zf.toggler');\n        _this._updateARIA();\n      });\n    } else {\n      Foundation.Motion.animateOut(this.$element, this.animationOut, function () {\n        this.trigger('off.zf.toggler');\n        _this._updateARIA();\n      });\n    }\n  };\n\n  Toggler.prototype._updateARIA = function () {\n    if (this.$element.is(':hidden')) {\n      this.$element.attr('aria-expanded', 'false');\n    } else {\n      this.$element.attr('aria-expanded', 'true');\n    }\n  };\n\n  /**\n   * Destroys the instance of Toggler on the element.\n   * @function\n   */\n  Toggler.prototype.destroy = function () {\n    this.$element.off('.zf.toggler');\n    Foundation.unregisterPlugin(this);\n  };\n\n  Foundation.plugin(Toggler, 'Toggler');\n\n  // Exports for AMD/Browserify\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') module.exports = Toggler;\n  if (typeof define === 'function') define(['foundation'], function () {\n    return Toggler;\n  });\n}(Foundation, jQuery);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.toggler.js"],"names":[],"mappings":"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","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.toggler.js.map","sourcesContent":["/**\n * Toggler module.\n * @module foundation.toggler\n * @requires foundation.util.motion\n */\n\n!function(Foundation, $) {\n  'use strict';\n\n  /**\n   * Creates a new instance of Toggler.\n   * @class\n   * @fires Toggler#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  function Toggler(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Toggler.defaults, element.data(), options);\n    this.className = '';\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this);\n  }\n\n  Toggler.defaults = {\n    /**\n     * Tells the plugin if the element should animated when toggled.\n     * @option\n     * @example false\n     */\n    animate: false\n  };\n\n  /**\n   * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n   * @function\n   * @private\n   */\n  Toggler.prototype._init = function() {\n    var input;\n    // Parse animation classes if they were set\n    if (this.options.animate) {\n      input = this.options.animate.split(' ');\n\n      this.animationIn = input[0];\n      this.animationOut = input[1] || null;\n    }\n    // Otherwise, parse toggle class\n    else {\n      input = this.$element.data('toggler');\n\n      // Allow for a . at the beginning of the string\n      if (input[0] === '.') {\n        this.className = input.slice(1);\n      }\n      else {\n        this.className = input;\n      }\n    }\n\n    // Add ARIA attributes to triggers\n    var id = this.$element[0].id;\n    $('[data-open=\"'+id+'\"], [data-close=\"'+id+'\"], [data-toggle=\"'+id+'\"]')\n      .attr('aria-controls', id);\n\n    // If the target is hidden, add aria-hidden\n    if (this.$element.is(':hidden')) {\n      this.$element.attr('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Initializes events for the toggle trigger.\n   * @function\n   * @private\n   */\n  Toggler.prototype._events = function() {\n    var _this = this;\n\n    this.$element.on('toggle.zf.trigger', function() {\n      _this.toggle();\n      return false;\n    });\n  };\n\n  /**\n   * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n   * @function\n   * @fires Toggler#on\n   * @fires Toggler#off\n   */\n  Toggler.prototype.toggle = function() {\n    if (!this.options.animate) {\n      this._toggleClass();\n    }\n    else {\n      this._toggleAnimate();\n    }\n  };\n\n  Toggler.prototype._toggleClass = function() {\n    var _this = this;\n    this.$element.toggleClass(this.className);\n\n    if (this.$element.hasClass(this.className)) {\n      /**\n       * Fires if the target element has the class after a toggle.\n       * @event Toggler#on\n       */\n      this.$element.trigger('on.zf.toggler');\n    }\n    else {\n      /**\n       * Fires if the target element does not have the class after a toggle.\n       * @event Toggler#off\n       */\n      this.$element.trigger('off.zf.toggler');\n    }\n\n    _this._updateARIA();\n  };\n\n  Toggler.prototype._toggleAnimate = function() {\n    var _this = this;\n\n    if (this.$element.is(':hidden')) {\n      Foundation.Motion.animateIn(this.$element, this.animationIn, function() {\n        this.trigger('on.zf.toggler');\n        _this._updateARIA();\n      });\n    }\n    else {\n      Foundation.Motion.animateOut(this.$element, this.animationOut, function() {\n        this.trigger('off.zf.toggler');\n        _this._updateARIA();\n      });\n    }\n  };\n\n  Toggler.prototype._updateARIA = function() {\n    if (this.$element.is(':hidden')) {\n      this.$element.attr('aria-expanded', 'false');\n    }\n    else {\n      this.$element.attr('aria-expanded', 'true');\n    }\n  };\n\n  /**\n   * Destroys the instance of Toggler on the element.\n   * @function\n   */\n  Toggler.prototype.destroy= function() {\n    this.$element.off('.zf.toggler');\n    Foundation.unregisterPlugin(this);\n  };\n\n  Foundation.plugin(Toggler, 'Toggler');\n\n  // Exports for AMD/Browserify\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined')\n    module.exports = Toggler;\n  if (typeof define === 'function')\n    define(['foundation'], function() {\n      return Toggler;\n    });\n\n}(Foundation, jQuery);\n"]},"hash":"0a255e0fa368a2918ed1d35097196d0cf20aefd0"}
