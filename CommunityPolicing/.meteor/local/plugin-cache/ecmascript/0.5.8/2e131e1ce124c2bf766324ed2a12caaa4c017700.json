{"metadata":{"usedHelpers":["typeof"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/modernizr/modernizr.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/modernizr/modernizr.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/modernizr/modernizr.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/modernizr/modernizr.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"modernizr"},"ignored":false,"code":"var _typeof;module.import('babel-runtime/helpers/typeof',{\"default\":function(v){_typeof=v}});\n/*!\n * Modernizr v2.8.3\n * www.modernizr.com\n *\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in\n * the current UA and makes the results available to you in two ways:\n * as properties on a global Modernizr object, and as classes on the\n * <html> element. This information allows you to progressively enhance\n * your pages with a granular level of control over the experience.\n *\n * Modernizr has an optional (not included) conditional resource loader\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\n * To get a build that includes Modernizr.load(), as well as choosing\n * which tests to include, go to www.modernizr.com/download/\n *\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\n * Contributors   Ryan Seddon, Ben Alman\n */\n\nwindow.Modernizr = function (window, document, undefined) {\n\n    var version = '2.8.3',\n        Modernizr = {},\n\n\n    /*>>cssclasses*/\n    // option for enabling the HTML classes to be added\n    enableClasses = true,\n\n    /*>>cssclasses*/\n\n    docElement = document.documentElement,\n\n\n    /**\n     * Create our \"modernizr\" element that we do most feature tests on.\n     */\n    mod = 'modernizr',\n        modElem = document.createElement(mod),\n        mStyle = modElem.style,\n\n\n    /**\n     * Create the input element for various Web Forms feature tests.\n     */\n    inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/\n\n    ,\n        /*>>smile*/\n    smile = ':)',\n\n    /*>>smile*/\n\n    toString = {}.toString,\n\n\n    // TODO :: make the prefixes more granular\n    /*>>prefixes*/\n    // List of property values to set for css tests. See ticket #21\n    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\n\n    /*>>prefixes*/\n\n    /*>>domprefixes*/\n    // Following spec is to expose vendor-specific style properties as:\n    //   elem.style.WebkitBorderRadius\n    // and the following would be incorrect:\n    //   elem.style.webkitBorderRadius\n\n    // Webkit ghosts their properties in lowercase but Opera & Moz do not.\n    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n    //   erik.eae.net/archives/2008/03/10/21.48.10/\n\n    // More here: github.com/Modernizr/Modernizr/issues/issue/21\n    omPrefixes = 'Webkit Moz O ms',\n        cssomPrefixes = omPrefixes.split(' '),\n        domPrefixes = omPrefixes.toLowerCase().split(' '),\n\n    /*>>domprefixes*/\n\n    /*>>ns*/\n    ns = { 'svg': 'http://www.w3.org/2000/svg' },\n\n    /*>>ns*/\n\n    tests = {},\n        inputs = {},\n        attrs = {},\n        classes = [],\n        slice = classes.slice,\n        featureName,\n        // used in testing loop\n\n    /*>>teststyles*/\n    // Inject element with style element and some CSS rules\n    injectElementWithStyles = function injectElementWithStyles(rule, callback, nodes, testnames) {\n\n        var style,\n            ret,\n            node,\n            docOverflow,\n            div = document.createElement('div'),\n\n        // After page load injecting a fake body doesn't work so check if body exists\n        body = document.body,\n\n        // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\n        fakeBody = body || document.createElement('body');\n\n        if (parseInt(nodes, 10)) {\n            // In order not to give false positives we create a node for each test\n            // This also allows the method to scale for unspecified uses\n            while (nodes--) {\n                node = document.createElement('div');\n                node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n                div.appendChild(node);\n            }\n        }\n\n        // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\n        // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\n        // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\n        // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\n        // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\n        style = ['&#173;', '<style id=\"s', mod, '\">', rule, '</style>'].join('');\n        div.id = mod;\n        // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n        // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n        (body ? div : fakeBody).innerHTML += style;\n        fakeBody.appendChild(div);\n        if (!body) {\n            //avoid crashing IE8, if background image is used\n            fakeBody.style.background = '';\n            //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n            fakeBody.style.overflow = 'hidden';\n            docOverflow = docElement.style.overflow;\n            docElement.style.overflow = 'hidden';\n            docElement.appendChild(fakeBody);\n        }\n\n        ret = callback(div, rule);\n        // If this is done after page load we don't want to remove the body so check if body exists\n        if (!body) {\n            fakeBody.parentNode.removeChild(fakeBody);\n            docElement.style.overflow = docOverflow;\n        } else {\n            div.parentNode.removeChild(div);\n        }\n\n        return !!ret;\n    },\n\n    /*>>teststyles*/\n\n    /*>>mq*/\n    // adapted from matchMedia polyfill\n    // by Scott Jehl and Paul Irish\n    // gist.github.com/786768\n    testMediaQuery = function testMediaQuery(mq) {\n\n        var matchMedia = window.matchMedia || window.msMatchMedia;\n        if (matchMedia) {\n            return matchMedia(mq) && matchMedia(mq).matches || false;\n        }\n\n        var bool;\n\n        injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function (node) {\n            bool = (window.getComputedStyle ? getComputedStyle(node, null) : node.currentStyle)['position'] == 'absolute';\n        });\n\n        return bool;\n    },\n\n    /*>>mq*/\n\n    /*>>hasevent*/\n    //\n    // isEventSupported determines if a given element supports the given event\n    // kangax.github.com/iseventsupported/\n    //\n    // The following results are known incorrects:\n    //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\n    //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\n    //   ...\n    isEventSupported = function () {\n\n        var TAGNAMES = {\n            'select': 'input', 'change': 'input',\n            'submit': 'form', 'reset': 'form',\n            'error': 'img', 'load': 'img', 'abort': 'img'\n        };\n\n        function isEventSupported(eventName, element) {\n\n            element = element || document.createElement(TAGNAMES[eventName] || 'div');\n            eventName = 'on' + eventName;\n\n            // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\n            var isSupported = eventName in element;\n\n            if (!isSupported) {\n                // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\n                if (!element.setAttribute) {\n                    element = document.createElement('div');\n                }\n                if (element.setAttribute && element.removeAttribute) {\n                    element.setAttribute(eventName, '');\n                    isSupported = is(element[eventName], 'function');\n\n                    // If property was created, \"remove it\" (by setting value to `undefined`)\n                    if (!is(element[eventName], 'undefined')) {\n                        element[eventName] = undefined;\n                    }\n                    element.removeAttribute(eventName);\n                }\n            }\n\n            element = null;\n            return isSupported;\n        }\n        return isEventSupported;\n    }(),\n\n    /*>>hasevent*/\n\n    // TODO :: Add flag for hasownprop ? didn't last time\n\n    // hasOwnProperty shim by kangax needed for Safari 2.0 support\n    _hasOwnProperty = {}.hasOwnProperty,\n        hasOwnProp;\n\n    if (!is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined')) {\n        hasOwnProp = function hasOwnProp(object, property) {\n            return _hasOwnProperty.call(object, property);\n        };\n    } else {\n        hasOwnProp = function hasOwnProp(object, property) {\n            /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n            return property in object && is(object.constructor.prototype[property], 'undefined');\n        };\n    }\n\n    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\n    // es5.github.com/#x15.3.4.5\n\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function bind(that) {\n\n            var target = this;\n\n            if (typeof target != \"function\") {\n                throw new TypeError();\n            }\n\n            var args = slice.call(arguments, 1),\n                bound = function bound() {\n\n                if (this instanceof bound) {\n\n                    var F = function F() {};\n                    F.prototype = target.prototype;\n                    var self = new F();\n\n                    var result = target.apply(self, args.concat(slice.call(arguments)));\n                    if (Object(result) === result) {\n                        return result;\n                    }\n                    return self;\n                } else {\n\n                    return target.apply(that, args.concat(slice.call(arguments)));\n                }\n            };\n\n            return bound;\n        };\n    }\n\n    /**\n     * setCss applies given styles to the Modernizr DOM node.\n     */\n    function setCss(str) {\n        mStyle.cssText = str;\n    }\n\n    /**\n     * setCssAll extrapolates all vendor-specific css strings.\n     */\n    function setCssAll(str1, str2) {\n        return setCss(prefixes.join(str1 + ';') + (str2 || ''));\n    }\n\n    /**\n     * is returns a boolean for if typeof obj is exactly type.\n     */\n    function is(obj, type) {\n        return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === type;\n    }\n\n    /**\n     * contains returns a boolean for if substr is found within str.\n     */\n    function contains(str, substr) {\n        return !!~('' + str).indexOf(substr);\n    }\n\n    /*>>testprop*/\n\n    // testProps is a generic CSS / DOM property test.\n\n    // In testing support for a given CSS property, it's legit to test:\n    //    `elem.style[styleName] !== undefined`\n    // If the property is supported it will return an empty string,\n    // if unsupported it will return undefined.\n\n    // We'll take advantage of this quick test and skip setting a style\n    // on our modernizr element, but instead just testing undefined vs\n    // empty string.\n\n    // Because the testing of the CSS property names (with \"-\", as\n    // opposed to the camelCase DOM properties) is non-portable and\n    // non-standard but works in WebKit and IE (but not Gecko or Opera),\n    // we explicitly reject properties with dashes so that authors\n    // developing in WebKit or IE first don't end up with\n    // browser-specific content by accident.\n\n    function testProps(props, prefixed) {\n        for (var i in props) {\n            var prop = props[i];\n            if (!contains(prop, \"-\") && mStyle[prop] !== undefined) {\n                return prefixed == 'pfx' ? prop : true;\n            }\n        }\n        return false;\n    }\n    /*>>testprop*/\n\n    // TODO :: add testDOMProps\n    /**\n     * testDOMProps is a generic DOM property test; if a browser supports\n     *   a certain property, it won't return undefined for it.\n     */\n    function testDOMProps(props, obj, elem) {\n        for (var i in props) {\n            var item = obj[props[i]];\n            if (item !== undefined) {\n\n                // return the property name as a string\n                if (elem === false) return props[i];\n\n                // let's bind a function\n                if (is(item, 'function')) {\n                    // default to autobind unless override\n                    return item.bind(elem || obj);\n                }\n\n                // return the unbound function or obj or value\n                return item;\n            }\n        }\n        return false;\n    }\n\n    /*>>testallprops*/\n    /**\n     * testPropsAll tests a list of DOM properties we want to check against.\n     *   We specify literally ALL possible (known and/or likely) properties on\n     *   the element including the non-vendor prefixed one, for forward-\n     *   compatibility.\n     */\n    function testPropsAll(prop, prefixed, elem) {\n\n        var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n            props = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n        // did they call .prefixed('boxSizing') or are we just testing a prop?\n        if (is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\n            return testProps(props, prefixed);\n\n            // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n        } else {\n                props = (prop + ' ' + domPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n                return testDOMProps(props, prefixed, elem);\n            }\n    }\n    /*>>testallprops*/\n\n    /**\n     * Tests\n     * -----\n     */\n\n    // The *new* flexbox\n    // dev.w3.org/csswg/css3-flexbox\n\n    tests['flexbox'] = function () {\n        return testPropsAll('flexWrap');\n    };\n\n    // The *old* flexbox\n    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\n\n    tests['flexboxlegacy'] = function () {\n        return testPropsAll('boxDirection');\n    };\n\n    // On the S60 and BB Storm, getContext exists, but always returns undefined\n    // so we actually have to call getContext() to verify\n    // github.com/Modernizr/Modernizr/issues/issue/97/\n\n    tests['canvas'] = function () {\n        var elem = document.createElement('canvas');\n        return !!(elem.getContext && elem.getContext('2d'));\n    };\n\n    tests['canvastext'] = function () {\n        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\n    };\n\n    // webk.it/70117 is tracking a legit WebGL feature detect proposal\n\n    // We do a soft detect which may false positive in order to avoid\n    // an expensive context creation: bugzil.la/732441\n\n    tests['webgl'] = function () {\n        return !!window.WebGLRenderingContext;\n    };\n\n    /*\n     * The Modernizr.touch test only indicates if the browser supports\n     *    touch events, which does not necessarily reflect a touchscreen\n     *    device, as evidenced by tablets running Windows 7 or, alas,\n     *    the Palm Pre / WebOS (touch) phones.\n     *\n     * Additionally, Chrome (desktop) used to lie about its support on this,\n     *    but that has since been rectified: crbug.com/36415\n     *\n     * We also test for Firefox 4 Multitouch Support.\n     *\n     * For more info, see: modernizr.github.com/Modernizr/touch.html\n     */\n\n    tests['touch'] = function () {\n        var bool;\n\n        if ('ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch) {\n            bool = true;\n        } else {\n            injectElementWithStyles(['@media (', prefixes.join('touch-enabled),('), mod, ')', '{#modernizr{top:9px;position:absolute}}'].join(''), function (node) {\n                bool = node.offsetTop === 9;\n            });\n        }\n\n        return bool;\n    };\n\n    // geolocation is often considered a trivial feature detect...\n    // Turns out, it's quite tricky to get right:\n    //\n    // Using !!navigator.geolocation does two things we don't want. It:\n    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\n    //   2. Disables page caching in WebKit: webk.it/43956\n    //\n    // Meanwhile, in Firefox < 8, an about:config setting could expose\n    // a false positive that would throw an exception: bugzil.la/688158\n\n    tests['geolocation'] = function () {\n        return 'geolocation' in navigator;\n    };\n\n    tests['postmessage'] = function () {\n        return !!window.postMessage;\n    };\n\n    // Chrome incognito mode used to throw an exception when using openDatabase\n    // It doesn't anymore.\n    tests['websqldatabase'] = function () {\n        return !!window.openDatabase;\n    };\n\n    // Vendors had inconsistent prefixing with the experimental Indexed DB:\n    // - Webkit's implementation is accessible through webkitIndexedDB\n    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\n    // For speed, we don't test the legacy (and beta-only) indexedDB\n    tests['indexedDB'] = function () {\n        return !!testPropsAll(\"indexedDB\", window);\n    };\n\n    // documentMode logic from YUI to filter out IE8 Compat Mode\n    //   which false positives.\n    tests['hashchange'] = function () {\n        return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\n    };\n\n    // Per 1.6:\n    // This used to be Modernizr.historymanagement but the longer\n    // name has been deprecated in favor of a shorter and property-matching one.\n    // The old API is still available in 1.6, but as of 2.0 will throw a warning,\n    // and in the first release thereafter disappear entirely.\n    tests['history'] = function () {\n        return !!(window.history && history.pushState);\n    };\n\n    tests['draganddrop'] = function () {\n        var div = document.createElement('div');\n        return 'draggable' in div || 'ondragstart' in div && 'ondrop' in div;\n    };\n\n    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\n    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\n    // FF10 still uses prefixes, so check for it until then.\n    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\n    tests['websockets'] = function () {\n        return 'WebSocket' in window || 'MozWebSocket' in window;\n    };\n\n    // css-tricks.com/rgba-browser-support/\n    tests['rgba'] = function () {\n        // Set an rgba() color and check the returned value\n\n        setCss('background-color:rgba(150,255,150,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba');\n    };\n\n    tests['hsla'] = function () {\n        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\n        //   except IE9 who retains it as hsla\n\n        setCss('background-color:hsla(120,40%,100%,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\n    };\n\n    tests['multiplebgs'] = function () {\n        // Setting multiple images AND a color on the background shorthand property\n        //  and then querying the style.background property value for the number of\n        //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\n\n        setCss('background:url(https://),url(https://),red url(https://)');\n\n        // If the UA supports multiple backgrounds, there should be three occurrences\n        //   of the string \"url(\" in the return value for elemStyle.background\n\n        return (/(url\\s*\\(.*?){3}/.test(mStyle.background)\n        );\n    };\n\n    // this will false positive in Opera Mini\n    //   github.com/Modernizr/Modernizr/issues/396\n\n    tests['backgroundsize'] = function () {\n        return testPropsAll('backgroundSize');\n    };\n\n    tests['borderimage'] = function () {\n        return testPropsAll('borderImage');\n    };\n\n    // Super comprehensive table about all the unique implementations of\n    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\n\n    tests['borderradius'] = function () {\n        return testPropsAll('borderRadius');\n    };\n\n    // WebOS unfortunately false positives on this test.\n    tests['boxshadow'] = function () {\n        return testPropsAll('boxShadow');\n    };\n\n    // FF3.0 will false positive on this test\n    tests['textshadow'] = function () {\n        return document.createElement('div').style.textShadow === '';\n    };\n\n    tests['opacity'] = function () {\n        // Browsers that actually have CSS Opacity implemented have done so\n        //  according to spec, which means their return values are within the\n        //  range of [0.0,1.0] - including the leading zero.\n\n        setCssAll('opacity:.55');\n\n        // The non-literal . in this regex is intentional:\n        //   German Chrome returns this value as 0,55\n        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\n        return (/^0.55$/.test(mStyle.opacity)\n        );\n    };\n\n    // Note, Android < 4 will pass this test, but can only animate\n    //   a single property at a time\n    //   goo.gl/v3V4Gp\n    tests['cssanimations'] = function () {\n        return testPropsAll('animationName');\n    };\n\n    tests['csscolumns'] = function () {\n        return testPropsAll('columnCount');\n    };\n\n    tests['cssgradients'] = function () {\n        /**\n         * For CSS Gradients syntax, please see:\n         * webkit.org/blog/175/introducing-css-gradients/\n         * developer.mozilla.org/en/CSS/-moz-linear-gradient\n         * developer.mozilla.org/en/CSS/-moz-radial-gradient\n         * dev.w3.org/csswg/css3-images/#gradients-\n         */\n\n        var str1 = 'background-image:',\n            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\n            str3 = 'linear-gradient(left top,#9f9, white);';\n\n        setCss(\n        // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\n        (str1 + '-webkit- '.split(' ').join(str2 + str1) +\n        // standard syntax             // trailing 'background-image:'\n        prefixes.join(str3 + str1)).slice(0, -str1.length));\n\n        return contains(mStyle.backgroundImage, 'gradient');\n    };\n\n    tests['cssreflections'] = function () {\n        return testPropsAll('boxReflect');\n    };\n\n    tests['csstransforms'] = function () {\n        return !!testPropsAll('transform');\n    };\n\n    tests['csstransforms3d'] = function () {\n\n        var ret = !!testPropsAll('perspective');\n\n        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\n        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\n        //   some conditions. As a result, Webkit typically recognizes the syntax but\n        //   will sometimes throw a false positive, thus we must do a more thorough check:\n        if (ret && 'webkitPerspective' in docElement.style) {\n\n            // Webkit allows this media query to succeed only if the feature is enabled.\n            // `@media (transform-3d),(-webkit-transform-3d){ ... }`\n            injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function (node, rule) {\n                ret = node.offsetLeft === 9 && node.offsetHeight === 3;\n            });\n        }\n        return ret;\n    };\n\n    tests['csstransitions'] = function () {\n        return testPropsAll('transition');\n    };\n\n    /*>>fontface*/\n    // @font-face detection routine by Diego Perini\n    // javascript.nwbox.com/CSSSupport/\n\n    // false positives:\n    //   WebOS github.com/Modernizr/Modernizr/issues/342\n    //   WP7   github.com/Modernizr/Modernizr/issues/538\n    tests['fontface'] = function () {\n        var bool;\n\n        injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function (node, rule) {\n            var style = document.getElementById('smodernizr'),\n                sheet = style.sheet || style.styleSheet,\n                cssText = sheet ? sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '' : '';\n\n            bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\n        });\n\n        return bool;\n    };\n    /*>>fontface*/\n\n    // CSS generated content detection\n    tests['generatedcontent'] = function () {\n        var bool;\n\n        injectElementWithStyles(['#', mod, '{font:0/0 a}#', mod, ':after{content:\"', smile, '\";visibility:hidden;font:3px/1 a}'].join(''), function (node) {\n            bool = node.offsetHeight >= 3;\n        });\n\n        return bool;\n    };\n\n    // These tests evaluate support of the video/audio elements, as well as\n    // testing what types of content they support.\n    //\n    // We're using the Boolean constructor here, so that we can extend the value\n    // e.g.  Modernizr.video     // true\n    //       Modernizr.video.ogg // 'probably'\n    //\n    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n    //                     thx to NielsLeenheer and zcorpan\n\n    // Note: in some older browsers, \"no\" was a return value instead of empty string.\n    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n\n    tests['video'] = function () {\n        var elem = document.createElement('video'),\n            bool = false;\n\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\n        try {\n            if (bool = !!elem.canPlayType) {\n                bool = new Boolean(bool);\n                bool.ogg = elem.canPlayType('video/ogg; codecs=\"theora\"').replace(/^no$/, '');\n\n                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\n                bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"').replace(/^no$/, '');\n\n                bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/, '');\n            }\n        } catch (e) {}\n\n        return bool;\n    };\n\n    tests['audio'] = function () {\n        var elem = document.createElement('audio'),\n            bool = false;\n\n        try {\n            if (bool = !!elem.canPlayType) {\n                bool = new Boolean(bool);\n                bool.ogg = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, '');\n                bool.mp3 = elem.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n                // Mimetypes accepted:\n                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n                //   bit.ly/iphoneoscodecs\n                bool.wav = elem.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, '');\n                bool.m4a = (elem.canPlayType('audio/x-m4a;') || elem.canPlayType('audio/aac;')).replace(/^no$/, '');\n            }\n        } catch (e) {}\n\n        return bool;\n    };\n\n    // In FF4, if disabled, window.localStorage should === null.\n\n    // Normally, we could not test that directly and need to do a\n    //   `('localStorage' in window) && ` test first because otherwise Firefox will\n    //   throw bugzil.la/365772 if cookies are disabled\n\n    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\n    // will throw the exception:\n    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n    // Peculiarly, getItem and removeItem calls do not throw.\n\n    // Because we are forced to try/catch this, we'll go aggressive.\n\n    // Just FWIW: IE8 Compat mode supports these features completely:\n    //   www.quirksmode.org/dom/html5.html\n    // But IE8 doesn't support either with local files\n\n    tests['localstorage'] = function () {\n        try {\n            localStorage.setItem(mod, mod);\n            localStorage.removeItem(mod);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    tests['sessionstorage'] = function () {\n        try {\n            sessionStorage.setItem(mod, mod);\n            sessionStorage.removeItem(mod);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    tests['webworkers'] = function () {\n        return !!window.Worker;\n    };\n\n    tests['applicationcache'] = function () {\n        return !!window.applicationCache;\n    };\n\n    // Thanks to Erik Dahlstrom\n    tests['svg'] = function () {\n        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\n    };\n\n    // specifically for SVG inline in HTML, not within XHTML\n    // test page: paulirish.com/demo/inline-svg\n    tests['inlinesvg'] = function () {\n        var div = document.createElement('div');\n        div.innerHTML = '<svg/>';\n        return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\n    };\n\n    // SVG SMIL animation\n    tests['smil'] = function () {\n        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\n    };\n\n    // This test is only for clip paths in SVG proper, not clip paths on HTML content\n    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\n\n    // However read the comments to dig into applying SVG clippaths to HTML content here:\n    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\n    tests['svgclippaths'] = function () {\n        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\n    };\n\n    /*>>webforms*/\n    // input features and input types go directly onto the ret object, bypassing the tests loop.\n    // Hold this guy to execute in a moment.\n    function webforms() {\n        /*>>input*/\n        // Run through HTML5's new input attributes to see if the UA understands any.\n        // We're using f which is the <input> element created early on\n        // Mike Taylr has created a comprehensive resource for testing these attributes\n        //   when applied to all input types:\n        //   miketaylr.com/code/input-type-attr.html\n        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\n        // Only input placeholder is tested while textarea's placeholder is not.\n        // Currently Safari 4 and Opera 11 have support only for the input placeholder\n        // Both tests are available in feature-detects/forms-placeholder.js\n        Modernizr['input'] = function (props) {\n            for (var i = 0, len = props.length; i < len; i++) {\n                attrs[props[i]] = !!(props[i] in inputElem);\n            }\n            if (attrs.list) {\n                // safari false positive's on datalist: webk.it/74252\n                // see also github.com/Modernizr/Modernizr/issues/146\n                attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\n            }\n            return attrs;\n        }('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\n        /*>>input*/\n\n        /*>>inputtypes*/\n        // Run through HTML5's new input types to see if the UA understands any.\n        //   This is put behind the tests runloop because it doesn't return a\n        //   true/false like all the other tests; instead, it returns an object\n        //   containing each input type with its corresponding true/false value\n\n        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\n        Modernizr['inputtypes'] = function (props) {\n\n            for (var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++) {\n\n                inputElem.setAttribute('type', inputElemType = props[i]);\n                bool = inputElem.type !== 'text';\n\n                // We first check to see if the type we give it sticks..\n                // If the type does, we feed it a textual value, which shouldn't be valid.\n                // If the value doesn't stick, we know there's input sanitization which infers a custom UI\n                if (bool) {\n\n                    inputElem.value = smile;\n                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';\n\n                    if (/^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined) {\n\n                        docElement.appendChild(inputElem);\n                        defaultView = document.defaultView;\n\n                        // Safari 2-4 allows the smiley as a value, despite making a slider\n                        bool = defaultView.getComputedStyle && defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\n                        // Mobile android web browser has false positive, so must\n                        // check the height to see if the widget is actually there.\n                        inputElem.offsetHeight !== 0;\n\n                        docElement.removeChild(inputElem);\n                    } else if (/^(search|tel)$/.test(inputElemType)) {\n                        // Spec doesn't define any special parsing or detectable UI\n                        //   behaviors so we pass these through as true\n\n                        // Interestingly, opera fails the earlier test, so it doesn't\n                        //  even make it here.\n\n                    } else if (/^(url|email)$/.test(inputElemType)) {\n                            // Real url and email support comes with prebaked validation.\n                            bool = inputElem.checkValidity && inputElem.checkValidity() === false;\n                        } else {\n                            // If the upgraded input compontent rejects the :) text, we got a winner\n                            bool = inputElem.value != smile;\n                        }\n                }\n\n                inputs[props[i]] = !!bool;\n            }\n            return inputs;\n        }('search tel url email datetime date month week time datetime-local number range color'.split(' '));\n        /*>>inputtypes*/\n    }\n    /*>>webforms*/\n\n    // End of test definitions\n    // -----------------------\n\n    // Run through all tests and detect their support in the current UA.\n    // todo: hypothetically we could be doing an array of tests and use a basic loop here.\n    for (var feature in tests) {\n        if (hasOwnProp(tests, feature)) {\n            // run the test, throw the return value into the Modernizr,\n            //   then based on that boolean, define an appropriate className\n            //   and push it into an array of classes we'll join later.\n            featureName = feature.toLowerCase();\n            Modernizr[featureName] = tests[feature]();\n\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\n        }\n    }\n\n    /*>>webforms*/\n    // input tests need to run.\n    Modernizr.input || webforms();\n    /*>>webforms*/\n\n    /**\n     * addTest allows the user to define their own feature tests\n     * the result will be added onto the Modernizr object,\n     * as well as an appropriate className set on the html element\n     *\n     * @param feature - String naming the feature\n     * @param test - Function returning true if feature is supported, false if not\n     */\n    Modernizr.addTest = function (feature, test) {\n        if ((typeof feature === 'undefined' ? 'undefined' : _typeof(feature)) == 'object') {\n            for (var key in feature) {\n                if (hasOwnProp(feature, key)) {\n                    Modernizr.addTest(key, feature[key]);\n                }\n            }\n        } else {\n\n            feature = feature.toLowerCase();\n\n            if (Modernizr[feature] !== undefined) {\n                // we're going to quit if you're trying to overwrite an existing test\n                // if we were to allow it, we'd do this:\n                //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n                //   docElement.className = docElement.className.replace( re, '' );\n                // but, no rly, stuff 'em.\n                return Modernizr;\n            }\n\n            test = typeof test == 'function' ? test() : test;\n\n            if (typeof enableClasses !== \"undefined\" && enableClasses) {\n                docElement.className += ' ' + (test ? '' : 'no-') + feature;\n            }\n            Modernizr[feature] = test;\n        }\n\n        return Modernizr; // allow chaining.\n    };\n\n    // Reset modElem.cssText to nothing to reduce memory footprint.\n    setCss('');\n    modElem = inputElem = null;\n\n    /*>>shiv*/\n    /**\n     * @preserve HTML5 Shiv prev3.7.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n     */\n    ;(function (window, document) {\n        /*jshint evil:true */\n        /** version */\n        var version = '3.7.0';\n\n        /** Preset options */\n        var options = window.html5 || {};\n\n        /** Used to skip problem elements */\n        var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n        /** Not all elements can be cloned in IE **/\n        var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n        /** Detect whether the browser supports default html5 styles */\n        var supportsHtml5Styles;\n\n        /** Name of the expando, to work with multiple documents or to re-shiv one document */\n        var expando = '_html5shiv';\n\n        /** The id for the the documents expando */\n        var expanID = 0;\n\n        /** Cached data for each document */\n        var expandoData = {};\n\n        /** Detect whether the browser supports unknown elements */\n        var supportsUnknownElements;\n\n        (function () {\n            try {\n                var a = document.createElement('a');\n                a.innerHTML = '<xyz></xyz>';\n                //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n                supportsHtml5Styles = 'hidden' in a;\n\n                supportsUnknownElements = a.childNodes.length == 1 || function () {\n                    // assign a false positive if unable to shiv\n                    document.createElement('a');\n                    var frag = document.createDocumentFragment();\n                    return typeof frag.cloneNode == 'undefined' || typeof frag.createDocumentFragment == 'undefined' || typeof frag.createElement == 'undefined';\n                }();\n            } catch (e) {\n                // assign a false positive if detection fails => unable to shiv\n                supportsHtml5Styles = true;\n                supportsUnknownElements = true;\n            }\n        })();\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * Creates a style sheet with the given CSS text and adds it to the document.\n         * @private\n         * @param {Document} ownerDocument The document.\n         * @param {String} cssText The CSS text.\n         * @returns {StyleSheet} The style element.\n         */\n        function addStyleSheet(ownerDocument, cssText) {\n            var p = ownerDocument.createElement('p'),\n                parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n            p.innerHTML = 'x<style>' + cssText + '</style>';\n            return parent.insertBefore(p.lastChild, parent.firstChild);\n        }\n\n        /**\n         * Returns the value of `html5.elements` as an array.\n         * @private\n         * @returns {Array} An array of shived element node names.\n         */\n        function getElements() {\n            var elements = html5.elements;\n            return typeof elements == 'string' ? elements.split(' ') : elements;\n        }\n\n        /**\n         * Returns the data associated to the given document\n         * @private\n         * @param {Document} ownerDocument The document.\n         * @returns {Object} An object of data.\n         */\n        function getExpandoData(ownerDocument) {\n            var data = expandoData[ownerDocument[expando]];\n            if (!data) {\n                data = {};\n                expanID++;\n                ownerDocument[expando] = expanID;\n                expandoData[expanID] = data;\n            }\n            return data;\n        }\n\n        /**\n         * returns a shived element for the given nodeName and document\n         * @memberOf html5\n         * @param {String} nodeName name of the element\n         * @param {Document} ownerDocument The context document.\n         * @returns {Object} The shived element.\n         */\n        function createElement(nodeName, ownerDocument, data) {\n            if (!ownerDocument) {\n                ownerDocument = document;\n            }\n            if (supportsUnknownElements) {\n                return ownerDocument.createElement(nodeName);\n            }\n            if (!data) {\n                data = getExpandoData(ownerDocument);\n            }\n            var node;\n\n            if (data.cache[nodeName]) {\n                node = data.cache[nodeName].cloneNode();\n            } else if (saveClones.test(nodeName)) {\n                node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n            } else {\n                node = data.createElem(nodeName);\n            }\n\n            // Avoid adding some elements to fragments in IE < 9 because\n            // * Attributes like `name` or `type` cannot be set/changed once an element\n            //   is inserted into a document/fragment\n            // * Link elements with `src` attributes that are inaccessible, as with\n            //   a 403 response, will cause the tab/window to crash\n            // * Script elements appended to fragments will execute when their `src`\n            //   or `text` property is set\n            return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n        }\n\n        /**\n         * returns a shived DocumentFragment for the given document\n         * @memberOf html5\n         * @param {Document} ownerDocument The context document.\n         * @returns {Object} The shived DocumentFragment.\n         */\n        function createDocumentFragment(ownerDocument, data) {\n            if (!ownerDocument) {\n                ownerDocument = document;\n            }\n            if (supportsUnknownElements) {\n                return ownerDocument.createDocumentFragment();\n            }\n            data = data || getExpandoData(ownerDocument);\n            var clone = data.frag.cloneNode(),\n                i = 0,\n                elems = getElements(),\n                l = elems.length;\n            for (; i < l; i++) {\n                clone.createElement(elems[i]);\n            }\n            return clone;\n        }\n\n        /**\n         * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n         * @private\n         * @param {Document|DocumentFragment} ownerDocument The document.\n         * @param {Object} data of the document.\n         */\n        function shivMethods(ownerDocument, data) {\n            if (!data.cache) {\n                data.cache = {};\n                data.createElem = ownerDocument.createElement;\n                data.createFrag = ownerDocument.createDocumentFragment;\n                data.frag = data.createFrag();\n            }\n\n            ownerDocument.createElement = function (nodeName) {\n                //abort shiv\n                if (!html5.shivMethods) {\n                    return data.createElem(nodeName);\n                }\n                return createElement(nodeName, ownerDocument, data);\n            };\n\n            ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' + 'var n=f.cloneNode(),c=n.createElement;' + 'h.shivMethods&&(' +\n            // unroll the `createElement` calls\n            getElements().join().replace(/[\\w\\-]+/g, function (nodeName) {\n                data.createElem(nodeName);\n                data.frag.createElement(nodeName);\n                return 'c(\"' + nodeName + '\")';\n            }) + ');return n}')(html5, data.frag);\n        }\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * Shivs the given document.\n         * @memberOf html5\n         * @param {Document} ownerDocument The document to shiv.\n         * @returns {Document} The shived document.\n         */\n        function shivDocument(ownerDocument) {\n            if (!ownerDocument) {\n                ownerDocument = document;\n            }\n            var data = getExpandoData(ownerDocument);\n\n            if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n                data.hasCSS = !!addStyleSheet(ownerDocument,\n                // corrects block display not defined in IE6/7/8/9\n                'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n                // adds styling not present in IE6/7/8/9\n                'mark{background:#FF0;color:#000}' +\n                // hides non-rendered elements\n                'template{display:none}');\n            }\n            if (!supportsUnknownElements) {\n                shivMethods(ownerDocument, data);\n            }\n            return ownerDocument;\n        }\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * The `html5` object is exposed so that more elements can be shived and\n         * existing shiving can be detected on iframes.\n         * @type Object\n         * @example\n         *\n         * // options can be changed before the script is included\n         * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n         */\n        var html5 = {\n\n            /**\n             * An array or space separated string of node names of the elements to shiv.\n             * @memberOf html5\n             * @type Array|String\n             */\n            'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video',\n\n            /**\n             * current version of html5shiv\n             */\n            'version': version,\n\n            /**\n             * A flag to indicate that the HTML5 style sheet should be inserted.\n             * @memberOf html5\n             * @type Boolean\n             */\n            'shivCSS': options.shivCSS !== false,\n\n            /**\n             * Is equal to true if a browser supports creating unknown/HTML5 elements\n             * @memberOf html5\n             * @type boolean\n             */\n            'supportsUnknownElements': supportsUnknownElements,\n\n            /**\n             * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n             * methods should be overwritten.\n             * @memberOf html5\n             * @type Boolean\n             */\n            'shivMethods': options.shivMethods !== false,\n\n            /**\n             * A string to describe the type of `html5` object (\"default\" or \"default print\").\n             * @memberOf html5\n             * @type String\n             */\n            'type': 'default',\n\n            // shivs the document according to the specified `html5` object options\n            'shivDocument': shivDocument,\n\n            //creates a shived element\n            createElement: createElement,\n\n            //creates a shived documentFragment\n            createDocumentFragment: createDocumentFragment\n        };\n\n        /*--------------------------------------------------------------------------*/\n\n        // expose html5\n        window.html5 = html5;\n\n        // shiv the document\n        shivDocument(document);\n    })(this, document);\n    /*>>shiv*/\n\n    // Assign private properties to the return object with prefix\n    Modernizr._version = version;\n\n    // expose these for the plugin API. Look in the source for how to join() them against your input\n    /*>>prefixes*/\n    Modernizr._prefixes = prefixes;\n    /*>>prefixes*/\n    /*>>domprefixes*/\n    Modernizr._domPrefixes = domPrefixes;\n    Modernizr._cssomPrefixes = cssomPrefixes;\n    /*>>domprefixes*/\n\n    /*>>mq*/\n    // Modernizr.mq tests a given media query, live against the current state of the window\n    // A few important notes:\n    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\n    //   * A max-width or orientation query will be evaluated against the current state, which may change later.\n    //   * You must specify values. Eg. If you are testing support for the min-width media query use:\n    //       Modernizr.mq('(min-width:0)')\n    // usage:\n    // Modernizr.mq('only screen and (max-width:768)')\n    Modernizr.mq = testMediaQuery;\n    /*>>mq*/\n\n    /*>>hasevent*/\n    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\n    // Modernizr.hasEvent('gesturestart', elem)\n    Modernizr.hasEvent = isEventSupported;\n    /*>>hasevent*/\n\n    /*>>testprop*/\n    // Modernizr.testProp() investigates whether a given style property is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testProp('pointerEvents')\n    Modernizr.testProp = function (prop) {\n        return testProps([prop]);\n    };\n    /*>>testprop*/\n\n    /*>>testallprops*/\n    // Modernizr.testAllProps() investigates whether a given style property,\n    //   or any of its vendor-prefixed variants, is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testAllProps('boxSizing')\n    Modernizr.testAllProps = testPropsAll;\n    /*>>testallprops*/\n\n    /*>>teststyles*/\n    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\n    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\n    Modernizr.testStyles = injectElementWithStyles;\n    /*>>teststyles*/\n\n    /*>>prefixed*/\n    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\n    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\n\n    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\n    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\n    //\n    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\n\n    // If you're trying to ascertain which transition end event to bind to, you might do something like...\n    //\n    //     var transEndEventNames = {\n    //       'WebkitTransition' : 'webkitTransitionEnd',\n    //       'MozTransition'    : 'transitionend',\n    //       'OTransition'      : 'oTransitionEnd',\n    //       'msTransition'     : 'MSTransitionEnd',\n    //       'transition'       : 'transitionend'\n    //     },\n    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\n\n    Modernizr.prefixed = function (prop, obj, elem) {\n        if (!obj) {\n            return testPropsAll(prop, 'pfx');\n        } else {\n            // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\n            return testPropsAll(prop, obj, elem);\n        }\n    };\n    /*>>prefixed*/\n\n    /*>>cssclasses*/\n    // Remove \"no-js\" class from <html> element, if it exists:\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') + (\n\n    // Add the new classes to the <html> element.\n    enableClasses ? ' js ' + classes.join(' ') : '');\n    /*>>cssclasses*/\n\n    return Modernizr;\n}(this, this.document);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/modernizr/modernizr.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAO,SAAP,GAAoB,UAAU,MAAV,EAAkB,QAAlB,EAA4B,SAA5B,EAAwC;;AAExD,QAAI,UAAU,OAAd;AAAA,QAEA,YAAY,EAFZ;AAAA;;;;AAMA,oBAAgB,IANhB;AAAA;;;AASA,iBAAa,SAAS,eATtB;AAAA;;;;;AAcA,UAAM,WAdN;AAAA,QAeA,UAAU,SAAS,aAAT,CAAuB,GAAvB,CAfV;AAAA,QAgBA,SAAS,QAAQ,KAhBjB;AAAA;;;;;AAqBA,a,gBAAA,GAA4B,SAAS,aAAT,CAAuB,OAAvB,C;;AArB5B;AAAA,Q;AAwBA,YAAQ,IAxBR;AAAA;;;AA2BA,eAAW,GAAG,QA3Bd;AAAA;;;;;AAgCA,eAAW,4BAA4B,KAA5B,CAAkC,GAAlC,CAhCX;AAAA;;;;;;;;;;;;;;AA8CA,iBAAa,iBA9Cb;AAAA,QAgDA,gBAAgB,WAAW,KAAX,CAAiB,GAAjB,CAhDhB;AAAA,QAkDA,cAAc,WAAW,WAAX,GAAyB,KAAzB,CAA+B,GAA/B,CAlDd;AAAA;;;;AAsDA,SAAK,EAAC,OAAO,4BAAR,EAtDL;AAAA;;;AAyDA,YAAQ,EAzDR;AAAA,QA0DA,SAAS,EA1DT;AAAA,QA2DA,QAAQ,EA3DR;AAAA,QA6DA,UAAU,EA7DV;AAAA,QA+DA,QAAQ,QAAQ,KA/DhB;AAAA,QAiEA,WAjEA;AAAA,Q;;;;AAsEA,8BAA0B,SAA1B,uBAA0B,CAAU,IAAV,EAAgB,QAAhB,EAA0B,KAA1B,EAAiC,SAAjC,EAA6C;;AAErE,YAAI,KAAJ;AAAA,YAAW,GAAX;AAAA,YAAgB,IAAhB;AAAA,YAAsB,WAAtB;AAAA,YACI,MAAM,SAAS,aAAT,CAAuB,KAAvB,CADV;AAAA;;AAGI,eAAO,SAAS,IAHpB;AAAA;;AAKI,mBAAW,QAAQ,SAAS,aAAT,CAAuB,MAAvB,CALvB;;AAOA,YAAK,SAAS,KAAT,EAAgB,EAAhB,CAAL,EAA2B;;;AAGvB,mBAAQ,OAAR,EAAkB;AACd,uBAAO,SAAS,aAAT,CAAuB,KAAvB,CAAP;AACA,qBAAK,EAAL,GAAU,YAAY,UAAU,KAAV,CAAZ,GAA+B,OAAO,QAAQ,CAAf,CAAzC;AACA,oBAAI,WAAJ,CAAgB,IAAhB;AACH;AACJ;;;;;;;AAOD,gBAAQ,CAAC,QAAD,EAAU,cAAV,EAA0B,GAA1B,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,UAA3C,EAAuD,IAAvD,CAA4D,EAA5D,CAAR;AACA,YAAI,EAAJ,GAAS,GAAT;;;AAGA,SAAC,OAAO,GAAP,GAAa,QAAd,EAAwB,SAAxB,IAAqC,KAArC;AACA,iBAAS,WAAT,CAAqB,GAArB;AACA,YAAK,CAAC,IAAN,EAAa;;AAET,qBAAS,KAAT,CAAe,UAAf,GAA4B,EAA5B;;AAEA,qBAAS,KAAT,CAAe,QAAf,GAA0B,QAA1B;AACA,0BAAc,WAAW,KAAX,CAAiB,QAA/B;AACA,uBAAW,KAAX,CAAiB,QAAjB,GAA4B,QAA5B;AACA,uBAAW,WAAX,CAAuB,QAAvB;AACH;;AAED,cAAM,SAAS,GAAT,EAAc,IAAd,CAAN;;AAEA,YAAK,CAAC,IAAN,EAAa;AACT,qBAAS,UAAT,CAAoB,WAApB,CAAgC,QAAhC;AACA,uBAAW,KAAX,CAAiB,QAAjB,GAA4B,WAA5B;AACH,SAHD,MAGO;AACH,gBAAI,UAAJ,CAAe,WAAf,CAA2B,GAA3B;AACH;;AAED,eAAO,CAAC,CAAC,GAAT;AAED,KAzHD;AAAA;;;;;;;AAgIA,qBAAiB,SAAjB,cAAiB,CAAU,EAAV,EAAe;;AAE9B,YAAI,aAAa,OAAO,UAAP,IAAqB,OAAO,YAA7C;AACA,YAAK,UAAL,EAAkB;AAChB,mBAAO,WAAW,EAAX,KAAkB,WAAW,EAAX,EAAe,OAAjC,IAA4C,KAAnD;AACD;;AAED,YAAI,IAAJ;;AAEA,gCAAwB,YAAY,EAAZ,GAAiB,MAAjB,GAA0B,GAA1B,GAAgC,4BAAxD,EAAsF,UAAU,IAAV,EAAiB;AACrG,mBAAO,CAAC,OAAO,gBAAP,GACE,iBAAiB,IAAjB,EAAuB,IAAvB,CADF,GAEE,KAAK,YAFR,EAEsB,UAFtB,KAEqC,UAF5C;AAGD,SAJD;;AAMA,eAAO,IAAP;AAEA,KAjJF;AAAA;;;;;;;;;;;;AA8JA,uBAAoB,YAAW;;AAE7B,YAAI,WAAW;AACb,sBAAU,OADG,EACM,UAAU,OADhB;AAEb,sBAAU,MAFG,EAEK,SAAS,MAFd;AAGb,qBAAS,KAHI,EAGG,QAAQ,KAHX,EAGkB,SAAS;AAH3B,SAAf;;AAMA,iBAAS,gBAAT,CAA2B,SAA3B,EAAsC,OAAtC,EAAgD;;AAE9C,sBAAU,WAAW,SAAS,aAAT,CAAuB,SAAS,SAAT,KAAuB,KAA9C,CAArB;AACA,wBAAY,OAAO,SAAnB;;;AAGA,gBAAI,cAAc,aAAa,OAA/B;;AAEA,gBAAK,CAAC,WAAN,EAAoB;;AAElB,oBAAK,CAAC,QAAQ,YAAd,EAA6B;AAC3B,8BAAU,SAAS,aAAT,CAAuB,KAAvB,CAAV;AACD;AACD,oBAAK,QAAQ,YAAR,IAAwB,QAAQ,eAArC,EAAuD;AACrD,4BAAQ,YAAR,CAAqB,SAArB,EAAgC,EAAhC;AACA,kCAAc,GAAG,QAAQ,SAAR,CAAH,EAAuB,UAAvB,CAAd;;;AAGA,wBAAK,CAAC,GAAG,QAAQ,SAAR,CAAH,EAAuB,WAAvB,CAAN,EAA4C;AAC1C,gCAAQ,SAAR,IAAqB,SAArB;AACD;AACD,4BAAQ,eAAR,CAAwB,SAAxB;AACD;AACF;;AAED,sBAAU,IAAV;AACA,mBAAO,WAAP;AACD;AACD,eAAO,gBAAP;AACD,KArCkB,EA9JnB;AAAA;;;;;;AAyMA,sBAAmB,EAAD,CAAK,cAzMvB;AAAA,QAyMuC,UAzMvC;;AA2MA,QAAK,CAAC,GAAG,eAAH,EAAoB,WAApB,CAAD,IAAqC,CAAC,GAAG,gBAAgB,IAAnB,EAAyB,WAAzB,CAA3C,EAAmF;AACjF,qBAAa,oBAAU,MAAV,EAAkB,QAAlB,EAA4B;AACvC,mBAAO,gBAAgB,IAAhB,CAAqB,MAArB,EAA6B,QAA7B,CAAP;AACD,SAFD;AAGD,KAJD,MAKK;AACH,qBAAa,oBAAU,MAAV,EAAkB,QAAlB,EAA4B;;AACvC,mBAAS,YAAY,MAAb,IAAwB,GAAG,OAAO,WAAP,CAAmB,SAAnB,CAA6B,QAA7B,CAAH,EAA2C,WAA3C,CAAhC;AACD,SAFD;AAGD;;;;;AAKD,QAAI,CAAC,SAAS,SAAT,CAAmB,IAAxB,EAA8B;AAC5B,iBAAS,SAAT,CAAmB,IAAnB,GAA0B,SAAS,IAAT,CAAc,IAAd,EAAoB;;AAE5C,gBAAI,SAAS,IAAb;;AAEA,gBAAI,OAAO,MAAP,IAAiB,UAArB,EAAiC;AAC7B,sBAAM,IAAI,SAAJ,EAAN;AACH;;AAED,gBAAI,OAAO,MAAM,IAAN,CAAW,SAAX,EAAsB,CAAtB,CAAX;AAAA,gBACI,QAAQ,SAAR,KAAQ,GAAY;;AAEpB,oBAAI,gBAAgB,KAApB,EAA2B;;AAEzB,wBAAI,IAAI,SAAJ,CAAI,GAAU,CAAE,CAApB;AACA,sBAAE,SAAF,GAAc,OAAO,SAArB;AACA,wBAAI,OAAO,IAAI,CAAJ,EAAX;;AAEA,wBAAI,SAAS,OAAO,KAAP,CACT,IADS,EAET,KAAK,MAAL,CAAY,MAAM,IAAN,CAAW,SAAX,CAAZ,CAFS,CAAb;AAIA,wBAAI,OAAO,MAAP,MAAmB,MAAvB,EAA+B;AAC3B,+BAAO,MAAP;AACH;AACD,2BAAO,IAAP;AAED,iBAfD,MAeO;;AAEL,2BAAO,OAAO,KAAP,CACH,IADG,EAEH,KAAK,MAAL,CAAY,MAAM,IAAN,CAAW,SAAX,CAAZ,CAFG,CAAP;AAKD;AAEJ,aA3BD;;AA6BA,mBAAO,KAAP;AACD,SAtCD;AAuCD;;;;;AAKD,aAAS,MAAT,CAAiB,GAAjB,EAAuB;AACnB,eAAO,OAAP,GAAiB,GAAjB;AACH;;;;;AAKD,aAAS,SAAT,CAAoB,IAApB,EAA0B,IAA1B,EAAiC;AAC7B,eAAO,OAAO,SAAS,IAAT,CAAc,OAAO,GAArB,KAA8B,QAAQ,EAAtC,CAAP,CAAP;AACH;;;;;AAKD,aAAS,EAAT,CAAa,GAAb,EAAkB,IAAlB,EAAyB;AACrB,eAAO,QAAO,GAAP,yCAAO,GAAP,OAAe,IAAtB;AACH;;;;;AAKD,aAAS,QAAT,CAAmB,GAAnB,EAAwB,MAAxB,EAAiC;AAC7B,eAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAN,EAAW,OAAX,CAAmB,MAAnB,CAAV;AACH;;;;;;;;;;;;;;;;;;;;;;AAsBD,aAAS,SAAT,CAAoB,KAApB,EAA2B,QAA3B,EAAsC;AAClC,aAAM,IAAI,CAAV,IAAe,KAAf,EAAuB;AACnB,gBAAI,OAAO,MAAM,CAAN,CAAX;AACA,gBAAK,CAAC,SAAS,IAAT,EAAe,GAAf,CAAD,IAAwB,OAAO,IAAP,MAAiB,SAA9C,EAA0D;AACtD,uBAAO,YAAY,KAAZ,GAAoB,IAApB,GAA2B,IAAlC;AACH;AACJ;AACD,eAAO,KAAP;AACH;;;;;;;;AAQD,aAAS,YAAT,CAAuB,KAAvB,EAA8B,GAA9B,EAAmC,IAAnC,EAA0C;AACtC,aAAM,IAAI,CAAV,IAAe,KAAf,EAAuB;AACnB,gBAAI,OAAO,IAAI,MAAM,CAAN,CAAJ,CAAX;AACA,gBAAK,SAAS,SAAd,EAAyB;;;AAGrB,oBAAI,SAAS,KAAb,EAAoB,OAAO,MAAM,CAAN,CAAP;;;AAGpB,oBAAI,GAAG,IAAH,EAAS,UAAT,CAAJ,EAAyB;;AAEvB,2BAAO,KAAK,IAAL,CAAU,QAAQ,GAAlB,CAAP;AACD;;;AAGD,uBAAO,IAAP;AACH;AACJ;AACD,eAAO,KAAP;AACH;;;;;;;;;AASD,aAAS,YAAT,CAAuB,IAAvB,EAA6B,QAA7B,EAAuC,IAAvC,EAA8C;;AAE1C,YAAI,SAAU,KAAK,MAAL,CAAY,CAAZ,EAAe,WAAf,KAA+B,KAAK,KAAL,CAAW,CAAX,CAA7C;AAAA,YACI,QAAU,CAAC,OAAO,GAAP,GAAa,cAAc,IAAd,CAAmB,SAAS,GAA5B,CAAb,GAAgD,MAAjD,EAAyD,KAAzD,CAA+D,GAA/D,CADd;;;AAIA,YAAG,GAAG,QAAH,EAAa,QAAb,KAA0B,GAAG,QAAH,EAAa,WAAb,CAA7B,EAAwD;AACtD,mBAAO,UAAU,KAAV,EAAiB,QAAjB,CAAP;;;AAGD,SAJD,MAIO;AACL,wBAAQ,CAAC,OAAO,GAAP,GAAc,WAAD,CAAc,IAAd,CAAmB,SAAS,GAA5B,CAAb,GAAgD,MAAjD,EAAyD,KAAzD,CAA+D,GAA/D,CAAR;AACA,uBAAO,aAAa,KAAb,EAAoB,QAApB,EAA8B,IAA9B,CAAP;AACD;AACJ;;;;;;;;;;;AAYD,UAAM,SAAN,IAAmB,YAAW;AAC5B,eAAO,aAAa,UAAb,CAAP;AACD,KAFD;;;;;AAOA,UAAM,eAAN,IAAyB,YAAW;AAChC,eAAO,aAAa,cAAb,CAAP;AACH,KAFD;;;;;;AAQA,UAAM,QAAN,IAAkB,YAAW;AACzB,YAAI,OAAO,SAAS,aAAT,CAAuB,QAAvB,CAAX;AACA,eAAO,CAAC,EAAE,KAAK,UAAL,IAAmB,KAAK,UAAL,CAAgB,IAAhB,CAArB,CAAR;AACH,KAHD;;AAKA,UAAM,YAAN,IAAsB,YAAW;AAC7B,eAAO,CAAC,EAAE,UAAU,QAAV,KAAuB,GAAG,SAAS,aAAT,CAAuB,QAAvB,EAAiC,UAAjC,CAA4C,IAA5C,EAAkD,QAArD,EAA+D,UAA/D,CAAzB,CAAR;AACH,KAFD;;;;;;;AASA,UAAM,OAAN,IAAiB,YAAW;AACxB,eAAO,CAAC,CAAC,OAAO,qBAAhB;AACH,KAFD;;;;;;;;;;;;;;;;AAkBA,UAAM,OAAN,IAAiB,YAAW;AACxB,YAAI,IAAJ;;AAEA,YAAI,kBAAkB,MAAnB,IAA8B,OAAO,aAAP,IAAwB,oBAAoB,aAA7E,EAA4F;AAC1F,mBAAO,IAAP;AACD,SAFD,MAEO;AACL,oCAAwB,CAAC,UAAD,EAAY,SAAS,IAAT,CAAc,kBAAd,CAAZ,EAA8C,GAA9C,EAAkD,GAAlD,EAAsD,yCAAtD,EAAiG,IAAjG,CAAsG,EAAtG,CAAxB,EAAmI,UAAU,IAAV,EAAiB;AAClJ,uBAAO,KAAK,SAAL,KAAmB,CAA1B;AACD,aAFD;AAGD;;AAED,eAAO,IAAP;AACH,KAZD;;;;;;;;;;;;AAyBA,UAAM,aAAN,IAAuB,YAAW;AAC9B,eAAO,iBAAiB,SAAxB;AACH,KAFD;;AAKA,UAAM,aAAN,IAAuB,YAAW;AAChC,eAAO,CAAC,CAAC,OAAO,WAAhB;AACD,KAFD;;;;AAOA,UAAM,gBAAN,IAA0B,YAAW;AACnC,eAAO,CAAC,CAAC,OAAO,YAAhB;AACD,KAFD;;;;;;AAQA,UAAM,WAAN,IAAqB,YAAW;AAC9B,eAAO,CAAC,CAAC,aAAa,WAAb,EAA0B,MAA1B,CAAT;AACD,KAFD;;;;AAMA,UAAM,YAAN,IAAsB,YAAW;AAC/B,eAAO,iBAAiB,YAAjB,EAA+B,MAA/B,MAA2C,SAAS,YAAT,KAA0B,SAA1B,IAAuC,SAAS,YAAT,GAAwB,CAA1G,CAAP;AACD,KAFD;;;;;;;AASA,UAAM,SAAN,IAAmB,YAAW;AAC5B,eAAO,CAAC,EAAE,OAAO,OAAP,IAAkB,QAAQ,SAA5B,CAAR;AACD,KAFD;;AAIA,UAAM,aAAN,IAAuB,YAAW;AAC9B,YAAI,MAAM,SAAS,aAAT,CAAuB,KAAvB,CAAV;AACA,eAAQ,eAAe,GAAhB,IAAyB,iBAAiB,GAAjB,IAAwB,YAAY,GAApE;AACH,KAHD;;;;;;AASA,UAAM,YAAN,IAAsB,YAAW;AAC7B,eAAO,eAAe,MAAf,IAAyB,kBAAkB,MAAlD;AACH,KAFD;;;AAMA,UAAM,MAAN,IAAgB,YAAW;;;AAGvB,eAAO,uCAAP;;AAEA,eAAO,SAAS,OAAO,eAAhB,EAAiC,MAAjC,CAAP;AACH,KAND;;AAQA,UAAM,MAAN,IAAgB,YAAW;;;;AAIvB,eAAO,wCAAP;;AAEA,eAAO,SAAS,OAAO,eAAhB,EAAiC,MAAjC,KAA4C,SAAS,OAAO,eAAhB,EAAiC,MAAjC,CAAnD;AACH,KAPD;;AASA,UAAM,aAAN,IAAuB,YAAW;;;;;AAK9B,eAAO,0DAAP;;;;;AAKA,eAAQ,mBAAD,CAAqB,IAArB,CAA0B,OAAO,UAAjC;AAAP;AACH,KAXD;;;;;AAkBA,UAAM,gBAAN,IAA0B,YAAW;AACjC,eAAO,aAAa,gBAAb,CAAP;AACH,KAFD;;AAIA,UAAM,aAAN,IAAuB,YAAW;AAC9B,eAAO,aAAa,aAAb,CAAP;AACH,KAFD;;;;;AAQA,UAAM,cAAN,IAAwB,YAAW;AAC/B,eAAO,aAAa,cAAb,CAAP;AACH,KAFD;;;AAKA,UAAM,WAAN,IAAqB,YAAW;AAC5B,eAAO,aAAa,WAAb,CAAP;AACH,KAFD;;;AAKA,UAAM,YAAN,IAAsB,YAAW;AAC7B,eAAO,SAAS,aAAT,CAAuB,KAAvB,EAA8B,KAA9B,CAAoC,UAApC,KAAmD,EAA1D;AACH,KAFD;;AAKA,UAAM,SAAN,IAAmB,YAAW;;;;;AAK1B,kBAAU,aAAV;;;;;AAKA,eAAQ,SAAD,CAAW,IAAX,CAAgB,OAAO,OAAvB;AAAP;AACH,KAXD;;;;;AAiBA,UAAM,eAAN,IAAyB,YAAW;AAChC,eAAO,aAAa,eAAb,CAAP;AACH,KAFD;;AAKA,UAAM,YAAN,IAAsB,YAAW;AAC7B,eAAO,aAAa,aAAb,CAAP;AACH,KAFD;;AAKA,UAAM,cAAN,IAAwB,YAAW;;;;;;;;;AAS/B,YAAI,OAAO,mBAAX;AAAA,YACI,OAAO,8DADX;AAAA,YAEI,OAAO,wCAFX;;AAIA;;AAEM,SAAC,OAAO,YAAY,KAAZ,CAAkB,GAAlB,EAAuB,IAAvB,CAA4B,OAAO,IAAnC,CAAP;;AAED,iBAAS,IAAT,CAAc,OAAO,IAArB,CAFA,EAE4B,KAF5B,CAEkC,CAFlC,EAEqC,CAAC,KAAK,MAF3C,CAFN;;AAOA,eAAO,SAAS,OAAO,eAAhB,EAAiC,UAAjC,CAAP;AACH,KArBD;;AAwBA,UAAM,gBAAN,IAA0B,YAAW;AACjC,eAAO,aAAa,YAAb,CAAP;AACH,KAFD;;AAKA,UAAM,eAAN,IAAyB,YAAW;AAChC,eAAO,CAAC,CAAC,aAAa,WAAb,CAAT;AACH,KAFD;;AAKA,UAAM,iBAAN,IAA2B,YAAW;;AAElC,YAAI,MAAM,CAAC,CAAC,aAAa,aAAb,CAAZ;;;;;;AAMA,YAAK,OAAO,uBAAuB,WAAW,KAA9C,EAAsD;;;;AAIpD,oCAAwB,kGAAxB,EAA4H,UAAU,IAAV,EAAgB,IAAhB,EAAuB;AACjJ,sBAAM,KAAK,UAAL,KAAoB,CAApB,IAAyB,KAAK,YAAL,KAAsB,CAArD;AACD,aAFD;AAGD;AACD,eAAO,GAAP;AACH,KAjBD;;AAoBA,UAAM,gBAAN,IAA0B,YAAW;AACjC,eAAO,aAAa,YAAb,CAAP;AACH,KAFD;;;;;;;;;AAYA,UAAM,UAAN,IAAoB,YAAW;AAC3B,YAAI,IAAJ;;AAEA,gCAAwB,qDAAxB,EAA+E,UAAU,IAAV,EAAgB,IAAhB,EAAuB;AACpG,gBAAI,QAAQ,SAAS,cAAT,CAAwB,YAAxB,CAAZ;AAAA,gBACI,QAAQ,MAAM,KAAN,IAAe,MAAM,UADjC;AAAA,gBAEI,UAAU,QAAS,MAAM,QAAN,IAAkB,MAAM,QAAN,CAAe,CAAf,CAAlB,GAAsC,MAAM,QAAN,CAAe,CAAf,EAAkB,OAAxD,GAAkE,MAAM,OAAN,IAAiB,EAA5F,GAAkG,EAFhH;;AAIA,mBAAO,OAAO,IAAP,CAAY,OAAZ,KAAwB,QAAQ,OAAR,CAAgB,KAAK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAhB,MAAwC,CAAvE;AACD,SAND;;AAQA,eAAO,IAAP;AACH,KAZD;;;;AAgBA,UAAM,kBAAN,IAA4B,YAAW;AACnC,YAAI,IAAJ;;AAEA,gCAAwB,CAAC,GAAD,EAAK,GAAL,EAAS,eAAT,EAAyB,GAAzB,EAA6B,kBAA7B,EAAgD,KAAhD,EAAsD,mCAAtD,EAA2F,IAA3F,CAAgG,EAAhG,CAAxB,EAA6H,UAAU,IAAV,EAAiB;AAC5I,mBAAO,KAAK,YAAL,IAAqB,CAA5B;AACD,SAFD;;AAIA,eAAO,IAAP;AACH,KARD;;;;;;;;;;;;;;;;AA0BA,UAAM,OAAN,IAAiB,YAAW;AACxB,YAAI,OAAO,SAAS,aAAT,CAAuB,OAAvB,CAAX;AAAA,YACI,OAAO,KADX;;;AAIA,YAAI;AACA,gBAAK,OAAO,CAAC,CAAC,KAAK,WAAnB,EAAiC;AAC7B,uBAAY,IAAI,OAAJ,CAAY,IAAZ,CAAZ;AACA,qBAAK,GAAL,GAAY,KAAK,WAAL,CAAiB,4BAAjB,EAAqD,OAArD,CAA6D,MAA7D,EAAoE,EAApE,CAAZ;;;AAGA,qBAAK,IAAL,GAAY,KAAK,WAAL,CAAiB,iCAAjB,EAAqD,OAArD,CAA6D,MAA7D,EAAoE,EAApE,CAAZ;;AAEA,qBAAK,IAAL,GAAY,KAAK,WAAL,CAAiB,kCAAjB,EAAqD,OAArD,CAA6D,MAA7D,EAAoE,EAApE,CAAZ;AACH;AAEJ,SAXD,CAWE,OAAM,CAAN,EAAS,CAAG;;AAEd,eAAO,IAAP;AACH,KAnBD;;AAqBA,UAAM,OAAN,IAAiB,YAAW;AACxB,YAAI,OAAO,SAAS,aAAT,CAAuB,OAAvB,CAAX;AAAA,YACI,OAAO,KADX;;AAGA,YAAI;AACA,gBAAK,OAAO,CAAC,CAAC,KAAK,WAAnB,EAAiC;AAC7B,uBAAY,IAAI,OAAJ,CAAY,IAAZ,CAAZ;AACA,qBAAK,GAAL,GAAY,KAAK,WAAL,CAAiB,4BAAjB,EAA+C,OAA/C,CAAuD,MAAvD,EAA8D,EAA9D,CAAZ;AACA,qBAAK,GAAL,GAAY,KAAK,WAAL,CAAiB,aAAjB,EAA+C,OAA/C,CAAuD,MAAvD,EAA8D,EAA9D,CAAZ;;;;;AAKA,qBAAK,GAAL,GAAY,KAAK,WAAL,CAAiB,uBAAjB,EAA+C,OAA/C,CAAuD,MAAvD,EAA8D,EAA9D,CAAZ;AACA,qBAAK,GAAL,GAAY,CAAE,KAAK,WAAL,CAAiB,cAAjB,KACA,KAAK,WAAL,CAAiB,YAAjB,CADF,EAC+C,OAD/C,CACuD,MADvD,EAC8D,EAD9D,CAAZ;AAEH;AACJ,SAbD,CAaE,OAAM,CAAN,EAAS,CAAG;;AAEd,eAAO,IAAP;AACH,KApBD;;;;;;;;;;;;;;;;;;;AAwCA,UAAM,cAAN,IAAwB,YAAW;AAC/B,YAAI;AACA,yBAAa,OAAb,CAAqB,GAArB,EAA0B,GAA1B;AACA,yBAAa,UAAb,CAAwB,GAAxB;AACA,mBAAO,IAAP;AACH,SAJD,CAIE,OAAM,CAAN,EAAS;AACP,mBAAO,KAAP;AACH;AACJ,KARD;;AAUA,UAAM,gBAAN,IAA0B,YAAW;AACjC,YAAI;AACA,2BAAe,OAAf,CAAuB,GAAvB,EAA4B,GAA5B;AACA,2BAAe,UAAf,CAA0B,GAA1B;AACA,mBAAO,IAAP;AACH,SAJD,CAIE,OAAM,CAAN,EAAS;AACP,mBAAO,KAAP;AACH;AACJ,KARD;;AAWA,UAAM,YAAN,IAAsB,YAAW;AAC7B,eAAO,CAAC,CAAC,OAAO,MAAhB;AACH,KAFD;;AAKA,UAAM,kBAAN,IAA4B,YAAW;AACnC,eAAO,CAAC,CAAC,OAAO,gBAAhB;AACH,KAFD;;;AAMA,UAAM,KAAN,IAAe,YAAW;AACtB,eAAO,CAAC,CAAC,SAAS,eAAX,IAA8B,CAAC,CAAC,SAAS,eAAT,CAAyB,GAAG,GAA5B,EAAiC,KAAjC,EAAwC,aAA/E;AACH,KAFD;;;;AAMA,UAAM,WAAN,IAAqB,YAAW;AAC9B,YAAI,MAAM,SAAS,aAAT,CAAuB,KAAvB,CAAV;AACA,YAAI,SAAJ,GAAgB,QAAhB;AACA,eAAO,CAAC,IAAI,UAAJ,IAAkB,IAAI,UAAJ,CAAe,YAAlC,KAAmD,GAAG,GAA7D;AACD,KAJD;;;AAOA,UAAM,MAAN,IAAgB,YAAW;AACvB,eAAO,CAAC,CAAC,SAAS,eAAX,IAA8B,aAAa,IAAb,CAAkB,SAAS,IAAT,CAAc,SAAS,eAAT,CAAyB,GAAG,GAA5B,EAAiC,SAAjC,CAAd,CAAlB,CAArC;AACH,KAFD;;;;;;;AASA,UAAM,cAAN,IAAwB,YAAW;AAC/B,eAAO,CAAC,CAAC,SAAS,eAAX,IAA8B,cAAc,IAAd,CAAmB,SAAS,IAAT,CAAc,SAAS,eAAT,CAAyB,GAAG,GAA5B,EAAiC,UAAjC,CAAd,CAAnB,CAArC;AACH,KAFD;;;;;AAOA,aAAS,QAAT,GAAoB;;;;;;;;;;;;AAYhB,kBAAU,OAAV,IAAsB,UAAU,KAAV,EAAkB;AACpC,iBAAM,IAAI,IAAI,CAAR,EAAW,MAAM,MAAM,MAA7B,EAAqC,IAAI,GAAzC,EAA8C,GAA9C,EAAoD;AAChD,sBAAO,MAAM,CAAN,CAAP,IAAoB,CAAC,EAAE,MAAM,CAAN,KAAY,SAAd,CAArB;AACH;AACD,gBAAI,MAAM,IAAV,EAAe;;;AAGb,sBAAM,IAAN,GAAa,CAAC,EAAE,SAAS,aAAT,CAAuB,UAAvB,KAAsC,OAAO,mBAA/C,CAAd;AACD;AACD,mBAAO,KAAP;AACH,SAVoB,CAUlB,iFAAiF,KAAjF,CAAuF,GAAvF,CAVkB,CAArB;;;;;;;;;;AAoBA,kBAAU,YAAV,IAA2B,UAAS,KAAT,EAAgB;;AAEvC,iBAAM,IAAI,IAAI,CAAR,EAAW,IAAX,EAAiB,aAAjB,EAAgC,WAAhC,EAA6C,MAAM,MAAM,MAA/D,EAAuE,IAAI,GAA3E,EAAgF,GAAhF,EAAsF;;AAElF,0BAAU,YAAV,CAAuB,MAAvB,EAA+B,gBAAgB,MAAM,CAAN,CAA/C;AACA,uBAAO,UAAU,IAAV,KAAmB,MAA1B;;;;;AAKA,oBAAK,IAAL,EAAY;;AAER,8BAAU,KAAV,GAA0B,KAA1B;AACA,8BAAU,KAAV,CAAgB,OAAhB,GAA0B,sCAA1B;;AAEA,wBAAK,UAAU,IAAV,CAAe,aAAf,KAAiC,UAAU,KAAV,CAAgB,gBAAhB,KAAqC,SAA3E,EAAuF;;AAErF,mCAAW,WAAX,CAAuB,SAAvB;AACA,sCAAc,SAAS,WAAvB;;;AAGA,+BAAQ,YAAY,gBAAZ,IACA,YAAY,gBAAZ,CAA6B,SAA7B,EAAwC,IAAxC,EAA8C,gBAA9C,KAAmE,WADnE;;;AAIC,kCAAU,YAAV,KAA2B,CAJpC;;AAMA,mCAAW,WAAX,CAAuB,SAAvB;AAED,qBAdD,MAcO,IAAK,iBAAiB,IAAjB,CAAsB,aAAtB,CAAL,EAA2C;;;;;;;AAOjD,qBAPM,MAOA,IAAK,gBAAgB,IAAhB,CAAqB,aAArB,CAAL,EAA2C;;AAEhD,mCAAO,UAAU,aAAV,IAA2B,UAAU,aAAV,OAA8B,KAAhE;AAED,yBAJM,MAIA;;AAEL,mCAAO,UAAU,KAAV,IAAmB,KAA1B;AACD;AACJ;;AAED,uBAAQ,MAAM,CAAN,CAAR,IAAqB,CAAC,CAAC,IAAvB;AACH;AACD,mBAAO,MAAP;AACH,SAjDyB,CAiDvB,uFAAuF,KAAvF,CAA6F,GAA7F,CAjDuB,CAA1B;;AAmDH;;;;;;;;AAWD,SAAM,IAAI,OAAV,IAAqB,KAArB,EAA6B;AACzB,YAAK,WAAW,KAAX,EAAkB,OAAlB,CAAL,EAAkC;;;;AAI9B,0BAAe,QAAQ,WAAR,EAAf;AACA,sBAAU,WAAV,IAAyB,MAAM,OAAN,GAAzB;;AAEA,oBAAQ,IAAR,CAAa,CAAC,UAAU,WAAV,IAAyB,EAAzB,GAA8B,KAA/B,IAAwC,WAArD;AACH;AACJ;;;;AAID,cAAU,KAAV,IAAmB,UAAnB;;;;;;;;;;;AAYC,cAAU,OAAV,GAAoB,UAAW,OAAX,EAAoB,IAApB,EAA2B;AAC7C,YAAK,QAAO,OAAP,yCAAO,OAAP,MAAkB,QAAvB,EAAkC;AAChC,iBAAM,IAAI,GAAV,IAAiB,OAAjB,EAA2B;AACzB,oBAAK,WAAY,OAAZ,EAAqB,GAArB,CAAL,EAAkC;AAChC,8BAAU,OAAV,CAAmB,GAAnB,EAAwB,QAAS,GAAT,CAAxB;AACD;AACF;AACF,SAND,MAMO;;AAEL,sBAAU,QAAQ,WAAR,EAAV;;AAEA,gBAAK,UAAU,OAAV,MAAuB,SAA5B,EAAwC;;;;;;AAMtC,uBAAO,SAAP;AACD;;AAED,mBAAO,OAAO,IAAP,IAAe,UAAf,GAA4B,MAA5B,GAAqC,IAA5C;;AAEA,gBAAI,OAAO,aAAP,KAAyB,WAAzB,IAAwC,aAA5C,EAA2D;AACzD,2BAAW,SAAX,IAAwB,OAAO,OAAO,EAAP,GAAY,KAAnB,IAA4B,OAApD;AACD;AACD,sBAAU,OAAV,IAAqB,IAArB;AAED;;AAED,eAAO,SAAP,C;AACD,KA9BD;;;AAkCD,WAAO,EAAP;AACA,cAAU,YAAY,IAAtB;;;;;;AAMA,KAAE,WAAS,MAAT,EAAiB,QAAjB,EAA2B;;;AAGzB,YAAI,UAAU,OAAd;;;AAGA,YAAI,UAAU,OAAO,KAAP,IAAgB,EAA9B;;;AAGA,YAAI,SAAS,oEAAb;;;AAGA,YAAI,aAAa,4GAAjB;;;AAGA,YAAI,mBAAJ;;;AAGA,YAAI,UAAU,YAAd;;;AAGA,YAAI,UAAU,CAAd;;;AAGA,YAAI,cAAc,EAAlB;;;AAGA,YAAI,uBAAJ;;AAEC,qBAAW;AACV,gBAAI;AACF,oBAAI,IAAI,SAAS,aAAT,CAAuB,GAAvB,CAAR;AACA,kBAAE,SAAF,GAAc,aAAd;;AAEA,sCAAuB,YAAY,CAAnC;;AAEA,0CAA0B,EAAE,UAAF,CAAa,MAAb,IAAuB,CAAvB,IAA6B,YAAW;;AAE/D,6BAAS,aAAV,CAAyB,GAAzB;AACA,wBAAI,OAAO,SAAS,sBAAT,EAAX;AACA,2BACE,OAAO,KAAK,SAAZ,IAAyB,WAAzB,IACA,OAAO,KAAK,sBAAZ,IAAsC,WADtC,IAEA,OAAO,KAAK,aAAZ,IAA6B,WAH/B;AAKD,iBATsD,EAAvD;AAUD,aAhBD,CAgBE,OAAM,CAAN,EAAS;;AAET,sCAAsB,IAAtB;AACA,0CAA0B,IAA1B;AACD;AAEF,SAvBA,GAAD;;;;;;;;;;;AAkCA,iBAAS,aAAT,CAAuB,aAAvB,EAAsC,OAAtC,EAA+C;AAC7C,gBAAI,IAAI,cAAc,aAAd,CAA4B,GAA5B,CAAR;AAAA,gBACA,SAAS,cAAc,oBAAd,CAAmC,MAAnC,EAA2C,CAA3C,KAAiD,cAAc,eADxE;;AAGA,cAAE,SAAF,GAAc,aAAa,OAAb,GAAuB,UAArC;AACA,mBAAO,OAAO,YAAP,CAAoB,EAAE,SAAtB,EAAiC,OAAO,UAAxC,CAAP;AACD;;;;;;;AAOD,iBAAS,WAAT,GAAuB;AACrB,gBAAI,WAAW,MAAM,QAArB;AACA,mBAAO,OAAO,QAAP,IAAmB,QAAnB,GAA8B,SAAS,KAAT,CAAe,GAAf,CAA9B,GAAoD,QAA3D;AACD;;;;;;;;AAQD,iBAAS,cAAT,CAAwB,aAAxB,EAAuC;AACrC,gBAAI,OAAO,YAAY,cAAc,OAAd,CAAZ,CAAX;AACA,gBAAI,CAAC,IAAL,EAAW;AACT,uBAAO,EAAP;AACA;AACA,8BAAc,OAAd,IAAyB,OAAzB;AACA,4BAAY,OAAZ,IAAuB,IAAvB;AACD;AACD,mBAAO,IAAP;AACD;;;;;;;;;AASD,iBAAS,aAAT,CAAuB,QAAvB,EAAiC,aAAjC,EAAgD,IAAhD,EAAqD;AACnD,gBAAI,CAAC,aAAL,EAAoB;AAClB,gCAAgB,QAAhB;AACD;AACD,gBAAG,uBAAH,EAA2B;AACzB,uBAAO,cAAc,aAAd,CAA4B,QAA5B,CAAP;AACD;AACD,gBAAI,CAAC,IAAL,EAAW;AACT,uBAAO,eAAe,aAAf,CAAP;AACD;AACD,gBAAI,IAAJ;;AAEA,gBAAI,KAAK,KAAL,CAAW,QAAX,CAAJ,EAA0B;AACxB,uBAAO,KAAK,KAAL,CAAW,QAAX,EAAqB,SAArB,EAAP;AACD,aAFD,MAEO,IAAI,WAAW,IAAX,CAAgB,QAAhB,CAAJ,EAA+B;AACpC,uBAAO,CAAC,KAAK,KAAL,CAAW,QAAX,IAAuB,KAAK,UAAL,CAAgB,QAAhB,CAAxB,EAAmD,SAAnD,EAAP;AACD,aAFM,MAEA;AACL,uBAAO,KAAK,UAAL,CAAgB,QAAhB,CAAP;AACD;;;;;;;;;AASD,mBAAO,KAAK,eAAL,IAAwB,CAAC,OAAO,IAAP,CAAY,QAAZ,CAAzB,IAAkD,CAAC,KAAK,MAAxD,GAAiE,KAAK,IAAL,CAAU,WAAV,CAAsB,IAAtB,CAAjE,GAA+F,IAAtG;AACD;;;;;;;;AAQD,iBAAS,sBAAT,CAAgC,aAAhC,EAA+C,IAA/C,EAAoD;AAClD,gBAAI,CAAC,aAAL,EAAoB;AAClB,gCAAgB,QAAhB;AACD;AACD,gBAAG,uBAAH,EAA2B;AACzB,uBAAO,cAAc,sBAAd,EAAP;AACD;AACD,mBAAO,QAAQ,eAAe,aAAf,CAAf;AACA,gBAAI,QAAQ,KAAK,IAAL,CAAU,SAAV,EAAZ;AAAA,gBACA,IAAI,CADJ;AAAA,gBAEA,QAAQ,aAFR;AAAA,gBAGA,IAAI,MAAM,MAHV;AAIA,mBAAK,IAAE,CAAP,EAAS,GAAT,EAAa;AACX,sBAAM,aAAN,CAAoB,MAAM,CAAN,CAApB;AACD;AACD,mBAAO,KAAP;AACD;;;;;;;;AAQD,iBAAS,WAAT,CAAqB,aAArB,EAAoC,IAApC,EAA0C;AACxC,gBAAI,CAAC,KAAK,KAAV,EAAiB;AACf,qBAAK,KAAL,GAAa,EAAb;AACA,qBAAK,UAAL,GAAkB,cAAc,aAAhC;AACA,qBAAK,UAAL,GAAkB,cAAc,sBAAhC;AACA,qBAAK,IAAL,GAAY,KAAK,UAAL,EAAZ;AACD;;AAGD,0BAAc,aAAd,GAA8B,UAAS,QAAT,EAAmB;;AAE/C,oBAAI,CAAC,MAAM,WAAX,EAAwB;AACtB,2BAAO,KAAK,UAAL,CAAgB,QAAhB,CAAP;AACD;AACD,uBAAO,cAAc,QAAd,EAAwB,aAAxB,EAAuC,IAAvC,CAAP;AACD,aAND;;AAQA,0BAAc,sBAAd,GAAuC,SAAS,KAAT,EAAgB,uBACP,wCADO,GAEP,kBAFO;;AAIP,0BAAc,IAAd,GAAqB,OAArB,CAA6B,UAA7B,EAAyC,UAAS,QAAT,EAAmB;AAC1G,qBAAK,UAAL,CAAgB,QAAhB;AACA,qBAAK,IAAL,CAAU,aAAV,CAAwB,QAAxB;AACA,uBAAO,QAAQ,QAAR,GAAmB,IAA1B;AACD,aAJ+C,CAJO,GASrD,aATqC,EAUU,KAVV,EAUiB,KAAK,IAVtB,CAAvC;AAWD;;;;;;;;;;AAUD,iBAAS,YAAT,CAAsB,aAAtB,EAAqC;AACnC,gBAAI,CAAC,aAAL,EAAoB;AAClB,gCAAgB,QAAhB;AACD;AACD,gBAAI,OAAO,eAAe,aAAf,CAAX;;AAEA,gBAAI,MAAM,OAAN,IAAiB,CAAC,mBAAlB,IAAyC,CAAC,KAAK,MAAnD,EAA2D;AACzD,qBAAK,MAAL,GAAc,CAAC,CAAC,cAAc,aAAd;;AAEc;;AAEE,kDAFF;;AAIE,wCANhB,CAAhB;AAQD;AACD,gBAAI,CAAC,uBAAL,EAA8B;AAC5B,4BAAY,aAAZ,EAA2B,IAA3B;AACD;AACD,mBAAO,aAAP;AACD;;;;;;;;;;;;;AAaD,YAAI,QAAQ;;;;;;;AAOV,wBAAY,QAAQ,QAAR,IAAoB,iLAPtB;;;;;AAYV,uBAAW,OAZD;;;;;;;AAmBV,uBAAY,QAAQ,OAAR,KAAoB,KAnBtB;;;;;;;AA0BV,uCAA2B,uBA1BjB;;;;;;;;AAkCV,2BAAgB,QAAQ,WAAR,KAAwB,KAlC9B;;;;;;;AAyCV,oBAAQ,SAzCE;;;AA4CV,4BAAgB,YA5CN;;;AA+CV,2BAAe,aA/CL;;;AAkDV,oCAAwB;AAlDd,SAAZ;;;;;AAwDA,eAAO,KAAP,GAAe,KAAf;;;AAGA,qBAAa,QAAb;AAEH,KAzSC,EAySA,IAzSA,EAySM,QAzSN,CAAD;;;;AA6SD,cAAU,QAAV,GAA0B,OAA1B;;;;AAIA,cAAU,SAAV,GAA0B,QAA1B;;;AAGA,cAAU,YAAV,GAA0B,WAA1B;AACA,cAAU,cAAV,GAA4B,aAA5B;;;;;;;;;;;;AAYA,cAAU,EAAV,GAA0B,cAA1B;;;;;;AAMA,cAAU,QAAV,GAA0B,gBAA1B;;;;;;;AAOA,cAAU,QAAV,GAA0B,UAAS,IAAT,EAAc;AACpC,eAAO,UAAU,CAAC,IAAD,CAAV,CAAP;AACH,KAFD;;;;;;;;AAUA,cAAU,YAAV,GAA0B,YAA1B;;;;;;AAOA,cAAU,UAAV,GAA0B,uBAA1B;;;;;;;;;;;;;;;;;;;;;;;AAwBA,cAAU,QAAV,GAA0B,UAAS,IAAT,EAAe,GAAf,EAAoB,IAApB,EAAyB;AACjD,YAAG,CAAC,GAAJ,EAAS;AACP,mBAAO,aAAa,IAAb,EAAmB,KAAnB,CAAP;AACD,SAFD,MAEO;;AAEL,mBAAO,aAAa,IAAb,EAAmB,GAAnB,EAAwB,IAAxB,CAAP;AACD;AACF,KAPD;;;;;AAaA,eAAW,SAAX,GAAuB,WAAW,SAAX,CAAqB,OAArB,CAA6B,mBAA7B,EAAkD,MAAlD;;;AAGE,oBAAgB,SAAS,QAAQ,IAAR,CAAa,GAAb,CAAzB,GAA6C,EAH/C,CAAvB;;;AAMA,WAAO,SAAP;AAEH,CAr2CkB,CAq2ChB,IAr2CgB,EAq2CV,KAAK,QAr2CK,CAAnB","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/modernizr/modernizr.js.map","sourcesContent":["/*!\n * Modernizr v2.8.3\n * www.modernizr.com\n *\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in\n * the current UA and makes the results available to you in two ways:\n * as properties on a global Modernizr object, and as classes on the\n * <html> element. This information allows you to progressively enhance\n * your pages with a granular level of control over the experience.\n *\n * Modernizr has an optional (not included) conditional resource loader\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\n * To get a build that includes Modernizr.load(), as well as choosing\n * which tests to include, go to www.modernizr.com/download/\n *\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\n * Contributors   Ryan Seddon, Ben Alman\n */\n\nwindow.Modernizr = (function( window, document, undefined ) {\n\n    var version = '2.8.3',\n\n    Modernizr = {},\n\n    /*>>cssclasses*/\n    // option for enabling the HTML classes to be added\n    enableClasses = true,\n    /*>>cssclasses*/\n\n    docElement = document.documentElement,\n\n    /**\n     * Create our \"modernizr\" element that we do most feature tests on.\n     */\n    mod = 'modernizr',\n    modElem = document.createElement(mod),\n    mStyle = modElem.style,\n\n    /**\n     * Create the input element for various Web Forms feature tests.\n     */\n    inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,\n\n    /*>>smile*/\n    smile = ':)',\n    /*>>smile*/\n\n    toString = {}.toString,\n\n    // TODO :: make the prefixes more granular\n    /*>>prefixes*/\n    // List of property values to set for css tests. See ticket #21\n    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\n    /*>>prefixes*/\n\n    /*>>domprefixes*/\n    // Following spec is to expose vendor-specific style properties as:\n    //   elem.style.WebkitBorderRadius\n    // and the following would be incorrect:\n    //   elem.style.webkitBorderRadius\n\n    // Webkit ghosts their properties in lowercase but Opera & Moz do not.\n    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n    //   erik.eae.net/archives/2008/03/10/21.48.10/\n\n    // More here: github.com/Modernizr/Modernizr/issues/issue/21\n    omPrefixes = 'Webkit Moz O ms',\n\n    cssomPrefixes = omPrefixes.split(' '),\n\n    domPrefixes = omPrefixes.toLowerCase().split(' '),\n    /*>>domprefixes*/\n\n    /*>>ns*/\n    ns = {'svg': 'http://www.w3.org/2000/svg'},\n    /*>>ns*/\n\n    tests = {},\n    inputs = {},\n    attrs = {},\n\n    classes = [],\n\n    slice = classes.slice,\n\n    featureName, // used in testing loop\n\n\n    /*>>teststyles*/\n    // Inject element with style element and some CSS rules\n    injectElementWithStyles = function( rule, callback, nodes, testnames ) {\n\n      var style, ret, node, docOverflow,\n          div = document.createElement('div'),\n          // After page load injecting a fake body doesn't work so check if body exists\n          body = document.body,\n          // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\n          fakeBody = body || document.createElement('body');\n\n      if ( parseInt(nodes, 10) ) {\n          // In order not to give false positives we create a node for each test\n          // This also allows the method to scale for unspecified uses\n          while ( nodes-- ) {\n              node = document.createElement('div');\n              node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n              div.appendChild(node);\n          }\n      }\n\n      // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\n      // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\n      // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\n      // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\n      // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\n      style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\n      div.id = mod;\n      // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n      // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n      (body ? div : fakeBody).innerHTML += style;\n      fakeBody.appendChild(div);\n      if ( !body ) {\n          //avoid crashing IE8, if background image is used\n          fakeBody.style.background = '';\n          //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n          fakeBody.style.overflow = 'hidden';\n          docOverflow = docElement.style.overflow;\n          docElement.style.overflow = 'hidden';\n          docElement.appendChild(fakeBody);\n      }\n\n      ret = callback(div, rule);\n      // If this is done after page load we don't want to remove the body so check if body exists\n      if ( !body ) {\n          fakeBody.parentNode.removeChild(fakeBody);\n          docElement.style.overflow = docOverflow;\n      } else {\n          div.parentNode.removeChild(div);\n      }\n\n      return !!ret;\n\n    },\n    /*>>teststyles*/\n\n    /*>>mq*/\n    // adapted from matchMedia polyfill\n    // by Scott Jehl and Paul Irish\n    // gist.github.com/786768\n    testMediaQuery = function( mq ) {\n\n      var matchMedia = window.matchMedia || window.msMatchMedia;\n      if ( matchMedia ) {\n        return matchMedia(mq) && matchMedia(mq).matches || false;\n      }\n\n      var bool;\n\n      injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {\n        bool = (window.getComputedStyle ?\n                  getComputedStyle(node, null) :\n                  node.currentStyle)['position'] == 'absolute';\n      });\n\n      return bool;\n\n     },\n     /*>>mq*/\n\n\n    /*>>hasevent*/\n    //\n    // isEventSupported determines if a given element supports the given event\n    // kangax.github.com/iseventsupported/\n    //\n    // The following results are known incorrects:\n    //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\n    //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\n    //   ...\n    isEventSupported = (function() {\n\n      var TAGNAMES = {\n        'select': 'input', 'change': 'input',\n        'submit': 'form', 'reset': 'form',\n        'error': 'img', 'load': 'img', 'abort': 'img'\n      };\n\n      function isEventSupported( eventName, element ) {\n\n        element = element || document.createElement(TAGNAMES[eventName] || 'div');\n        eventName = 'on' + eventName;\n\n        // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\n        var isSupported = eventName in element;\n\n        if ( !isSupported ) {\n          // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\n          if ( !element.setAttribute ) {\n            element = document.createElement('div');\n          }\n          if ( element.setAttribute && element.removeAttribute ) {\n            element.setAttribute(eventName, '');\n            isSupported = is(element[eventName], 'function');\n\n            // If property was created, \"remove it\" (by setting value to `undefined`)\n            if ( !is(element[eventName], 'undefined') ) {\n              element[eventName] = undefined;\n            }\n            element.removeAttribute(eventName);\n          }\n        }\n\n        element = null;\n        return isSupported;\n      }\n      return isEventSupported;\n    })(),\n    /*>>hasevent*/\n\n    // TODO :: Add flag for hasownprop ? didn't last time\n\n    // hasOwnProperty shim by kangax needed for Safari 2.0 support\n    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\n\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\n      hasOwnProp = function (object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    }\n    else {\n      hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n      };\n    }\n\n    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\n    // es5.github.com/#x15.3.4.5\n\n    if (!Function.prototype.bind) {\n      Function.prototype.bind = function bind(that) {\n\n        var target = this;\n\n        if (typeof target != \"function\") {\n            throw new TypeError();\n        }\n\n        var args = slice.call(arguments, 1),\n            bound = function () {\n\n            if (this instanceof bound) {\n\n              var F = function(){};\n              F.prototype = target.prototype;\n              var self = new F();\n\n              var result = target.apply(\n                  self,\n                  args.concat(slice.call(arguments))\n              );\n              if (Object(result) === result) {\n                  return result;\n              }\n              return self;\n\n            } else {\n\n              return target.apply(\n                  that,\n                  args.concat(slice.call(arguments))\n              );\n\n            }\n\n        };\n\n        return bound;\n      };\n    }\n\n    /**\n     * setCss applies given styles to the Modernizr DOM node.\n     */\n    function setCss( str ) {\n        mStyle.cssText = str;\n    }\n\n    /**\n     * setCssAll extrapolates all vendor-specific css strings.\n     */\n    function setCssAll( str1, str2 ) {\n        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\n    }\n\n    /**\n     * is returns a boolean for if typeof obj is exactly type.\n     */\n    function is( obj, type ) {\n        return typeof obj === type;\n    }\n\n    /**\n     * contains returns a boolean for if substr is found within str.\n     */\n    function contains( str, substr ) {\n        return !!~('' + str).indexOf(substr);\n    }\n\n    /*>>testprop*/\n\n    // testProps is a generic CSS / DOM property test.\n\n    // In testing support for a given CSS property, it's legit to test:\n    //    `elem.style[styleName] !== undefined`\n    // If the property is supported it will return an empty string,\n    // if unsupported it will return undefined.\n\n    // We'll take advantage of this quick test and skip setting a style\n    // on our modernizr element, but instead just testing undefined vs\n    // empty string.\n\n    // Because the testing of the CSS property names (with \"-\", as\n    // opposed to the camelCase DOM properties) is non-portable and\n    // non-standard but works in WebKit and IE (but not Gecko or Opera),\n    // we explicitly reject properties with dashes so that authors\n    // developing in WebKit or IE first don't end up with\n    // browser-specific content by accident.\n\n    function testProps( props, prefixed ) {\n        for ( var i in props ) {\n            var prop = props[i];\n            if ( !contains(prop, \"-\") && mStyle[prop] !== undefined ) {\n                return prefixed == 'pfx' ? prop : true;\n            }\n        }\n        return false;\n    }\n    /*>>testprop*/\n\n    // TODO :: add testDOMProps\n    /**\n     * testDOMProps is a generic DOM property test; if a browser supports\n     *   a certain property, it won't return undefined for it.\n     */\n    function testDOMProps( props, obj, elem ) {\n        for ( var i in props ) {\n            var item = obj[props[i]];\n            if ( item !== undefined) {\n\n                // return the property name as a string\n                if (elem === false) return props[i];\n\n                // let's bind a function\n                if (is(item, 'function')){\n                  // default to autobind unless override\n                  return item.bind(elem || obj);\n                }\n\n                // return the unbound function or obj or value\n                return item;\n            }\n        }\n        return false;\n    }\n\n    /*>>testallprops*/\n    /**\n     * testPropsAll tests a list of DOM properties we want to check against.\n     *   We specify literally ALL possible (known and/or likely) properties on\n     *   the element including the non-vendor prefixed one, for forward-\n     *   compatibility.\n     */\n    function testPropsAll( prop, prefixed, elem ) {\n\n        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\n            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n        // did they call .prefixed('boxSizing') or are we just testing a prop?\n        if(is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\n          return testProps(props, prefixed);\n\n        // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n        } else {\n          props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n          return testDOMProps(props, prefixed, elem);\n        }\n    }\n    /*>>testallprops*/\n\n\n    /**\n     * Tests\n     * -----\n     */\n\n    // The *new* flexbox\n    // dev.w3.org/csswg/css3-flexbox\n\n    tests['flexbox'] = function() {\n      return testPropsAll('flexWrap');\n    };\n\n    // The *old* flexbox\n    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\n\n    tests['flexboxlegacy'] = function() {\n        return testPropsAll('boxDirection');\n    };\n\n    // On the S60 and BB Storm, getContext exists, but always returns undefined\n    // so we actually have to call getContext() to verify\n    // github.com/Modernizr/Modernizr/issues/issue/97/\n\n    tests['canvas'] = function() {\n        var elem = document.createElement('canvas');\n        return !!(elem.getContext && elem.getContext('2d'));\n    };\n\n    tests['canvastext'] = function() {\n        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\n    };\n\n    // webk.it/70117 is tracking a legit WebGL feature detect proposal\n\n    // We do a soft detect which may false positive in order to avoid\n    // an expensive context creation: bugzil.la/732441\n\n    tests['webgl'] = function() {\n        return !!window.WebGLRenderingContext;\n    };\n\n    /*\n     * The Modernizr.touch test only indicates if the browser supports\n     *    touch events, which does not necessarily reflect a touchscreen\n     *    device, as evidenced by tablets running Windows 7 or, alas,\n     *    the Palm Pre / WebOS (touch) phones.\n     *\n     * Additionally, Chrome (desktop) used to lie about its support on this,\n     *    but that has since been rectified: crbug.com/36415\n     *\n     * We also test for Firefox 4 Multitouch Support.\n     *\n     * For more info, see: modernizr.github.com/Modernizr/touch.html\n     */\n\n    tests['touch'] = function() {\n        var bool;\n\n        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\n          bool = true;\n        } else {\n          injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {\n            bool = node.offsetTop === 9;\n          });\n        }\n\n        return bool;\n    };\n\n\n    // geolocation is often considered a trivial feature detect...\n    // Turns out, it's quite tricky to get right:\n    //\n    // Using !!navigator.geolocation does two things we don't want. It:\n    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\n    //   2. Disables page caching in WebKit: webk.it/43956\n    //\n    // Meanwhile, in Firefox < 8, an about:config setting could expose\n    // a false positive that would throw an exception: bugzil.la/688158\n\n    tests['geolocation'] = function() {\n        return 'geolocation' in navigator;\n    };\n\n\n    tests['postmessage'] = function() {\n      return !!window.postMessage;\n    };\n\n\n    // Chrome incognito mode used to throw an exception when using openDatabase\n    // It doesn't anymore.\n    tests['websqldatabase'] = function() {\n      return !!window.openDatabase;\n    };\n\n    // Vendors had inconsistent prefixing with the experimental Indexed DB:\n    // - Webkit's implementation is accessible through webkitIndexedDB\n    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\n    // For speed, we don't test the legacy (and beta-only) indexedDB\n    tests['indexedDB'] = function() {\n      return !!testPropsAll(\"indexedDB\", window);\n    };\n\n    // documentMode logic from YUI to filter out IE8 Compat Mode\n    //   which false positives.\n    tests['hashchange'] = function() {\n      return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\n    };\n\n    // Per 1.6:\n    // This used to be Modernizr.historymanagement but the longer\n    // name has been deprecated in favor of a shorter and property-matching one.\n    // The old API is still available in 1.6, but as of 2.0 will throw a warning,\n    // and in the first release thereafter disappear entirely.\n    tests['history'] = function() {\n      return !!(window.history && history.pushState);\n    };\n\n    tests['draganddrop'] = function() {\n        var div = document.createElement('div');\n        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\n    };\n\n    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\n    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\n    // FF10 still uses prefixes, so check for it until then.\n    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\n    tests['websockets'] = function() {\n        return 'WebSocket' in window || 'MozWebSocket' in window;\n    };\n\n\n    // css-tricks.com/rgba-browser-support/\n    tests['rgba'] = function() {\n        // Set an rgba() color and check the returned value\n\n        setCss('background-color:rgba(150,255,150,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba');\n    };\n\n    tests['hsla'] = function() {\n        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\n        //   except IE9 who retains it as hsla\n\n        setCss('background-color:hsla(120,40%,100%,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\n    };\n\n    tests['multiplebgs'] = function() {\n        // Setting multiple images AND a color on the background shorthand property\n        //  and then querying the style.background property value for the number of\n        //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\n\n        setCss('background:url(https://),url(https://),red url(https://)');\n\n        // If the UA supports multiple backgrounds, there should be three occurrences\n        //   of the string \"url(\" in the return value for elemStyle.background\n\n        return (/(url\\s*\\(.*?){3}/).test(mStyle.background);\n    };\n\n\n\n    // this will false positive in Opera Mini\n    //   github.com/Modernizr/Modernizr/issues/396\n\n    tests['backgroundsize'] = function() {\n        return testPropsAll('backgroundSize');\n    };\n\n    tests['borderimage'] = function() {\n        return testPropsAll('borderImage');\n    };\n\n\n    // Super comprehensive table about all the unique implementations of\n    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\n\n    tests['borderradius'] = function() {\n        return testPropsAll('borderRadius');\n    };\n\n    // WebOS unfortunately false positives on this test.\n    tests['boxshadow'] = function() {\n        return testPropsAll('boxShadow');\n    };\n\n    // FF3.0 will false positive on this test\n    tests['textshadow'] = function() {\n        return document.createElement('div').style.textShadow === '';\n    };\n\n\n    tests['opacity'] = function() {\n        // Browsers that actually have CSS Opacity implemented have done so\n        //  according to spec, which means their return values are within the\n        //  range of [0.0,1.0] - including the leading zero.\n\n        setCssAll('opacity:.55');\n\n        // The non-literal . in this regex is intentional:\n        //   German Chrome returns this value as 0,55\n        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\n        return (/^0.55$/).test(mStyle.opacity);\n    };\n\n\n    // Note, Android < 4 will pass this test, but can only animate\n    //   a single property at a time\n    //   goo.gl/v3V4Gp\n    tests['cssanimations'] = function() {\n        return testPropsAll('animationName');\n    };\n\n\n    tests['csscolumns'] = function() {\n        return testPropsAll('columnCount');\n    };\n\n\n    tests['cssgradients'] = function() {\n        /**\n         * For CSS Gradients syntax, please see:\n         * webkit.org/blog/175/introducing-css-gradients/\n         * developer.mozilla.org/en/CSS/-moz-linear-gradient\n         * developer.mozilla.org/en/CSS/-moz-radial-gradient\n         * dev.w3.org/csswg/css3-images/#gradients-\n         */\n\n        var str1 = 'background-image:',\n            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\n            str3 = 'linear-gradient(left top,#9f9, white);';\n\n        setCss(\n             // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\n              (str1 + '-webkit- '.split(' ').join(str2 + str1) +\n             // standard syntax             // trailing 'background-image:'\n              prefixes.join(str3 + str1)).slice(0, -str1.length)\n        );\n\n        return contains(mStyle.backgroundImage, 'gradient');\n    };\n\n\n    tests['cssreflections'] = function() {\n        return testPropsAll('boxReflect');\n    };\n\n\n    tests['csstransforms'] = function() {\n        return !!testPropsAll('transform');\n    };\n\n\n    tests['csstransforms3d'] = function() {\n\n        var ret = !!testPropsAll('perspective');\n\n        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\n        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\n        //   some conditions. As a result, Webkit typically recognizes the syntax but\n        //   will sometimes throw a false positive, thus we must do a more thorough check:\n        if ( ret && 'webkitPerspective' in docElement.style ) {\n\n          // Webkit allows this media query to succeed only if the feature is enabled.\n          // `@media (transform-3d),(-webkit-transform-3d){ ... }`\n          injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {\n            ret = node.offsetLeft === 9 && node.offsetHeight === 3;\n          });\n        }\n        return ret;\n    };\n\n\n    tests['csstransitions'] = function() {\n        return testPropsAll('transition');\n    };\n\n\n    /*>>fontface*/\n    // @font-face detection routine by Diego Perini\n    // javascript.nwbox.com/CSSSupport/\n\n    // false positives:\n    //   WebOS github.com/Modernizr/Modernizr/issues/342\n    //   WP7   github.com/Modernizr/Modernizr/issues/538\n    tests['fontface'] = function() {\n        var bool;\n\n        injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function( node, rule ) {\n          var style = document.getElementById('smodernizr'),\n              sheet = style.sheet || style.styleSheet,\n              cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';\n\n          bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\n        });\n\n        return bool;\n    };\n    /*>>fontface*/\n\n    // CSS generated content detection\n    tests['generatedcontent'] = function() {\n        var bool;\n\n        injectElementWithStyles(['#',mod,'{font:0/0 a}#',mod,':after{content:\"',smile,'\";visibility:hidden;font:3px/1 a}'].join(''), function( node ) {\n          bool = node.offsetHeight >= 3;\n        });\n\n        return bool;\n    };\n\n\n\n    // These tests evaluate support of the video/audio elements, as well as\n    // testing what types of content they support.\n    //\n    // We're using the Boolean constructor here, so that we can extend the value\n    // e.g.  Modernizr.video     // true\n    //       Modernizr.video.ogg // 'probably'\n    //\n    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n    //                     thx to NielsLeenheer and zcorpan\n\n    // Note: in some older browsers, \"no\" was a return value instead of empty string.\n    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n\n    tests['video'] = function() {\n        var elem = document.createElement('video'),\n            bool = false;\n\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\n        try {\n            if ( bool = !!elem.canPlayType ) {\n                bool      = new Boolean(bool);\n                bool.ogg  = elem.canPlayType('video/ogg; codecs=\"theora\"')      .replace(/^no$/,'');\n\n                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\n                bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"') .replace(/^no$/,'');\n\n                bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\n            }\n\n        } catch(e) { }\n\n        return bool;\n    };\n\n    tests['audio'] = function() {\n        var elem = document.createElement('audio'),\n            bool = false;\n\n        try {\n            if ( bool = !!elem.canPlayType ) {\n                bool      = new Boolean(bool);\n                bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\n                bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\n\n                // Mimetypes accepted:\n                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n                //   bit.ly/iphoneoscodecs\n                bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\n                bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\n                              elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\n            }\n        } catch(e) { }\n\n        return bool;\n    };\n\n\n    // In FF4, if disabled, window.localStorage should === null.\n\n    // Normally, we could not test that directly and need to do a\n    //   `('localStorage' in window) && ` test first because otherwise Firefox will\n    //   throw bugzil.la/365772 if cookies are disabled\n\n    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\n    // will throw the exception:\n    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n    // Peculiarly, getItem and removeItem calls do not throw.\n\n    // Because we are forced to try/catch this, we'll go aggressive.\n\n    // Just FWIW: IE8 Compat mode supports these features completely:\n    //   www.quirksmode.org/dom/html5.html\n    // But IE8 doesn't support either with local files\n\n    tests['localstorage'] = function() {\n        try {\n            localStorage.setItem(mod, mod);\n            localStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n    tests['sessionstorage'] = function() {\n        try {\n            sessionStorage.setItem(mod, mod);\n            sessionStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n\n    tests['webworkers'] = function() {\n        return !!window.Worker;\n    };\n\n\n    tests['applicationcache'] = function() {\n        return !!window.applicationCache;\n    };\n\n\n    // Thanks to Erik Dahlstrom\n    tests['svg'] = function() {\n        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\n    };\n\n    // specifically for SVG inline in HTML, not within XHTML\n    // test page: paulirish.com/demo/inline-svg\n    tests['inlinesvg'] = function() {\n      var div = document.createElement('div');\n      div.innerHTML = '<svg/>';\n      return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\n    };\n\n    // SVG SMIL animation\n    tests['smil'] = function() {\n        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\n    };\n\n    // This test is only for clip paths in SVG proper, not clip paths on HTML content\n    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\n\n    // However read the comments to dig into applying SVG clippaths to HTML content here:\n    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\n    tests['svgclippaths'] = function() {\n        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\n    };\n\n    /*>>webforms*/\n    // input features and input types go directly onto the ret object, bypassing the tests loop.\n    // Hold this guy to execute in a moment.\n    function webforms() {\n        /*>>input*/\n        // Run through HTML5's new input attributes to see if the UA understands any.\n        // We're using f which is the <input> element created early on\n        // Mike Taylr has created a comprehensive resource for testing these attributes\n        //   when applied to all input types:\n        //   miketaylr.com/code/input-type-attr.html\n        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\n        // Only input placeholder is tested while textarea's placeholder is not.\n        // Currently Safari 4 and Opera 11 have support only for the input placeholder\n        // Both tests are available in feature-detects/forms-placeholder.js\n        Modernizr['input'] = (function( props ) {\n            for ( var i = 0, len = props.length; i < len; i++ ) {\n                attrs[ props[i] ] = !!(props[i] in inputElem);\n            }\n            if (attrs.list){\n              // safari false positive's on datalist: webk.it/74252\n              // see also github.com/Modernizr/Modernizr/issues/146\n              attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\n            }\n            return attrs;\n        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\n        /*>>input*/\n\n        /*>>inputtypes*/\n        // Run through HTML5's new input types to see if the UA understands any.\n        //   This is put behind the tests runloop because it doesn't return a\n        //   true/false like all the other tests; instead, it returns an object\n        //   containing each input type with its corresponding true/false value\n\n        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\n        Modernizr['inputtypes'] = (function(props) {\n\n            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {\n\n                inputElem.setAttribute('type', inputElemType = props[i]);\n                bool = inputElem.type !== 'text';\n\n                // We first check to see if the type we give it sticks..\n                // If the type does, we feed it a textual value, which shouldn't be valid.\n                // If the value doesn't stick, we know there's input sanitization which infers a custom UI\n                if ( bool ) {\n\n                    inputElem.value         = smile;\n                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';\n\n                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {\n\n                      docElement.appendChild(inputElem);\n                      defaultView = document.defaultView;\n\n                      // Safari 2-4 allows the smiley as a value, despite making a slider\n                      bool =  defaultView.getComputedStyle &&\n                              defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\n                              // Mobile android web browser has false positive, so must\n                              // check the height to see if the widget is actually there.\n                              (inputElem.offsetHeight !== 0);\n\n                      docElement.removeChild(inputElem);\n\n                    } else if ( /^(search|tel)$/.test(inputElemType) ){\n                      // Spec doesn't define any special parsing or detectable UI\n                      //   behaviors so we pass these through as true\n\n                      // Interestingly, opera fails the earlier test, so it doesn't\n                      //  even make it here.\n\n                    } else if ( /^(url|email)$/.test(inputElemType) ) {\n                      // Real url and email support comes with prebaked validation.\n                      bool = inputElem.checkValidity && inputElem.checkValidity() === false;\n\n                    } else {\n                      // If the upgraded input compontent rejects the :) text, we got a winner\n                      bool = inputElem.value != smile;\n                    }\n                }\n\n                inputs[ props[i] ] = !!bool;\n            }\n            return inputs;\n        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));\n        /*>>inputtypes*/\n    }\n    /*>>webforms*/\n\n\n    // End of test definitions\n    // -----------------------\n\n\n\n    // Run through all tests and detect their support in the current UA.\n    // todo: hypothetically we could be doing an array of tests and use a basic loop here.\n    for ( var feature in tests ) {\n        if ( hasOwnProp(tests, feature) ) {\n            // run the test, throw the return value into the Modernizr,\n            //   then based on that boolean, define an appropriate className\n            //   and push it into an array of classes we'll join later.\n            featureName  = feature.toLowerCase();\n            Modernizr[featureName] = tests[feature]();\n\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\n        }\n    }\n\n    /*>>webforms*/\n    // input tests need to run.\n    Modernizr.input || webforms();\n    /*>>webforms*/\n\n\n    /**\n     * addTest allows the user to define their own feature tests\n     * the result will be added onto the Modernizr object,\n     * as well as an appropriate className set on the html element\n     *\n     * @param feature - String naming the feature\n     * @param test - Function returning true if feature is supported, false if not\n     */\n     Modernizr.addTest = function ( feature, test ) {\n       if ( typeof feature == 'object' ) {\n         for ( var key in feature ) {\n           if ( hasOwnProp( feature, key ) ) {\n             Modernizr.addTest( key, feature[ key ] );\n           }\n         }\n       } else {\n\n         feature = feature.toLowerCase();\n\n         if ( Modernizr[feature] !== undefined ) {\n           // we're going to quit if you're trying to overwrite an existing test\n           // if we were to allow it, we'd do this:\n           //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n           //   docElement.className = docElement.className.replace( re, '' );\n           // but, no rly, stuff 'em.\n           return Modernizr;\n         }\n\n         test = typeof test == 'function' ? test() : test;\n\n         if (typeof enableClasses !== \"undefined\" && enableClasses) {\n           docElement.className += ' ' + (test ? '' : 'no-') + feature;\n         }\n         Modernizr[feature] = test;\n\n       }\n\n       return Modernizr; // allow chaining.\n     };\n\n\n    // Reset modElem.cssText to nothing to reduce memory footprint.\n    setCss('');\n    modElem = inputElem = null;\n\n    /*>>shiv*/\n    /**\n     * @preserve HTML5 Shiv prev3.7.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n     */\n    ;(function(window, document) {\n        /*jshint evil:true */\n        /** version */\n        var version = '3.7.0';\n\n        /** Preset options */\n        var options = window.html5 || {};\n\n        /** Used to skip problem elements */\n        var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n        /** Not all elements can be cloned in IE **/\n        var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n        /** Detect whether the browser supports default html5 styles */\n        var supportsHtml5Styles;\n\n        /** Name of the expando, to work with multiple documents or to re-shiv one document */\n        var expando = '_html5shiv';\n\n        /** The id for the the documents expando */\n        var expanID = 0;\n\n        /** Cached data for each document */\n        var expandoData = {};\n\n        /** Detect whether the browser supports unknown elements */\n        var supportsUnknownElements;\n\n        (function() {\n          try {\n            var a = document.createElement('a');\n            a.innerHTML = '<xyz></xyz>';\n            //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n            supportsHtml5Styles = ('hidden' in a);\n\n            supportsUnknownElements = a.childNodes.length == 1 || (function() {\n              // assign a false positive if unable to shiv\n              (document.createElement)('a');\n              var frag = document.createDocumentFragment();\n              return (\n                typeof frag.cloneNode == 'undefined' ||\n                typeof frag.createDocumentFragment == 'undefined' ||\n                typeof frag.createElement == 'undefined'\n              );\n            }());\n          } catch(e) {\n            // assign a false positive if detection fails => unable to shiv\n            supportsHtml5Styles = true;\n            supportsUnknownElements = true;\n          }\n\n        }());\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * Creates a style sheet with the given CSS text and adds it to the document.\n         * @private\n         * @param {Document} ownerDocument The document.\n         * @param {String} cssText The CSS text.\n         * @returns {StyleSheet} The style element.\n         */\n        function addStyleSheet(ownerDocument, cssText) {\n          var p = ownerDocument.createElement('p'),\n          parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n          p.innerHTML = 'x<style>' + cssText + '</style>';\n          return parent.insertBefore(p.lastChild, parent.firstChild);\n        }\n\n        /**\n         * Returns the value of `html5.elements` as an array.\n         * @private\n         * @returns {Array} An array of shived element node names.\n         */\n        function getElements() {\n          var elements = html5.elements;\n          return typeof elements == 'string' ? elements.split(' ') : elements;\n        }\n\n        /**\n         * Returns the data associated to the given document\n         * @private\n         * @param {Document} ownerDocument The document.\n         * @returns {Object} An object of data.\n         */\n        function getExpandoData(ownerDocument) {\n          var data = expandoData[ownerDocument[expando]];\n          if (!data) {\n            data = {};\n            expanID++;\n            ownerDocument[expando] = expanID;\n            expandoData[expanID] = data;\n          }\n          return data;\n        }\n\n        /**\n         * returns a shived element for the given nodeName and document\n         * @memberOf html5\n         * @param {String} nodeName name of the element\n         * @param {Document} ownerDocument The context document.\n         * @returns {Object} The shived element.\n         */\n        function createElement(nodeName, ownerDocument, data){\n          if (!ownerDocument) {\n            ownerDocument = document;\n          }\n          if(supportsUnknownElements){\n            return ownerDocument.createElement(nodeName);\n          }\n          if (!data) {\n            data = getExpandoData(ownerDocument);\n          }\n          var node;\n\n          if (data.cache[nodeName]) {\n            node = data.cache[nodeName].cloneNode();\n          } else if (saveClones.test(nodeName)) {\n            node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n          } else {\n            node = data.createElem(nodeName);\n          }\n\n          // Avoid adding some elements to fragments in IE < 9 because\n          // * Attributes like `name` or `type` cannot be set/changed once an element\n          //   is inserted into a document/fragment\n          // * Link elements with `src` attributes that are inaccessible, as with\n          //   a 403 response, will cause the tab/window to crash\n          // * Script elements appended to fragments will execute when their `src`\n          //   or `text` property is set\n          return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n        }\n\n        /**\n         * returns a shived DocumentFragment for the given document\n         * @memberOf html5\n         * @param {Document} ownerDocument The context document.\n         * @returns {Object} The shived DocumentFragment.\n         */\n        function createDocumentFragment(ownerDocument, data){\n          if (!ownerDocument) {\n            ownerDocument = document;\n          }\n          if(supportsUnknownElements){\n            return ownerDocument.createDocumentFragment();\n          }\n          data = data || getExpandoData(ownerDocument);\n          var clone = data.frag.cloneNode(),\n          i = 0,\n          elems = getElements(),\n          l = elems.length;\n          for(;i<l;i++){\n            clone.createElement(elems[i]);\n          }\n          return clone;\n        }\n\n        /**\n         * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n         * @private\n         * @param {Document|DocumentFragment} ownerDocument The document.\n         * @param {Object} data of the document.\n         */\n        function shivMethods(ownerDocument, data) {\n          if (!data.cache) {\n            data.cache = {};\n            data.createElem = ownerDocument.createElement;\n            data.createFrag = ownerDocument.createDocumentFragment;\n            data.frag = data.createFrag();\n          }\n\n\n          ownerDocument.createElement = function(nodeName) {\n            //abort shiv\n            if (!html5.shivMethods) {\n              return data.createElem(nodeName);\n            }\n            return createElement(nodeName, ownerDocument, data);\n          };\n\n          ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n                                                          'var n=f.cloneNode(),c=n.createElement;' +\n                                                          'h.shivMethods&&(' +\n                                                          // unroll the `createElement` calls\n                                                          getElements().join().replace(/[\\w\\-]+/g, function(nodeName) {\n            data.createElem(nodeName);\n            data.frag.createElement(nodeName);\n            return 'c(\"' + nodeName + '\")';\n          }) +\n            ');return n}'\n                                                         )(html5, data.frag);\n        }\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * Shivs the given document.\n         * @memberOf html5\n         * @param {Document} ownerDocument The document to shiv.\n         * @returns {Document} The shived document.\n         */\n        function shivDocument(ownerDocument) {\n          if (!ownerDocument) {\n            ownerDocument = document;\n          }\n          var data = getExpandoData(ownerDocument);\n\n          if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n            data.hasCSS = !!addStyleSheet(ownerDocument,\n                                          // corrects block display not defined in IE6/7/8/9\n                                          'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n                                            // adds styling not present in IE6/7/8/9\n                                            'mark{background:#FF0;color:#000}' +\n                                            // hides non-rendered elements\n                                            'template{display:none}'\n                                         );\n          }\n          if (!supportsUnknownElements) {\n            shivMethods(ownerDocument, data);\n          }\n          return ownerDocument;\n        }\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * The `html5` object is exposed so that more elements can be shived and\n         * existing shiving can be detected on iframes.\n         * @type Object\n         * @example\n         *\n         * // options can be changed before the script is included\n         * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n         */\n        var html5 = {\n\n          /**\n           * An array or space separated string of node names of the elements to shiv.\n           * @memberOf html5\n           * @type Array|String\n           */\n          'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video',\n\n          /**\n           * current version of html5shiv\n           */\n          'version': version,\n\n          /**\n           * A flag to indicate that the HTML5 style sheet should be inserted.\n           * @memberOf html5\n           * @type Boolean\n           */\n          'shivCSS': (options.shivCSS !== false),\n\n          /**\n           * Is equal to true if a browser supports creating unknown/HTML5 elements\n           * @memberOf html5\n           * @type boolean\n           */\n          'supportsUnknownElements': supportsUnknownElements,\n\n          /**\n           * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n           * methods should be overwritten.\n           * @memberOf html5\n           * @type Boolean\n           */\n          'shivMethods': (options.shivMethods !== false),\n\n          /**\n           * A string to describe the type of `html5` object (\"default\" or \"default print\").\n           * @memberOf html5\n           * @type String\n           */\n          'type': 'default',\n\n          // shivs the document according to the specified `html5` object options\n          'shivDocument': shivDocument,\n\n          //creates a shived element\n          createElement: createElement,\n\n          //creates a shived documentFragment\n          createDocumentFragment: createDocumentFragment\n        };\n\n        /*--------------------------------------------------------------------------*/\n\n        // expose html5\n        window.html5 = html5;\n\n        // shiv the document\n        shivDocument(document);\n\n    }(this, document));\n    /*>>shiv*/\n\n    // Assign private properties to the return object with prefix\n    Modernizr._version      = version;\n\n    // expose these for the plugin API. Look in the source for how to join() them against your input\n    /*>>prefixes*/\n    Modernizr._prefixes     = prefixes;\n    /*>>prefixes*/\n    /*>>domprefixes*/\n    Modernizr._domPrefixes  = domPrefixes;\n    Modernizr._cssomPrefixes  = cssomPrefixes;\n    /*>>domprefixes*/\n\n    /*>>mq*/\n    // Modernizr.mq tests a given media query, live against the current state of the window\n    // A few important notes:\n    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\n    //   * A max-width or orientation query will be evaluated against the current state, which may change later.\n    //   * You must specify values. Eg. If you are testing support for the min-width media query use:\n    //       Modernizr.mq('(min-width:0)')\n    // usage:\n    // Modernizr.mq('only screen and (max-width:768)')\n    Modernizr.mq            = testMediaQuery;\n    /*>>mq*/\n\n    /*>>hasevent*/\n    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\n    // Modernizr.hasEvent('gesturestart', elem)\n    Modernizr.hasEvent      = isEventSupported;\n    /*>>hasevent*/\n\n    /*>>testprop*/\n    // Modernizr.testProp() investigates whether a given style property is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testProp('pointerEvents')\n    Modernizr.testProp      = function(prop){\n        return testProps([prop]);\n    };\n    /*>>testprop*/\n\n    /*>>testallprops*/\n    // Modernizr.testAllProps() investigates whether a given style property,\n    //   or any of its vendor-prefixed variants, is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testAllProps('boxSizing')\n    Modernizr.testAllProps  = testPropsAll;\n    /*>>testallprops*/\n\n\n    /*>>teststyles*/\n    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\n    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\n    Modernizr.testStyles    = injectElementWithStyles;\n    /*>>teststyles*/\n\n\n    /*>>prefixed*/\n    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\n    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\n\n    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\n    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\n    //\n    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\n\n    // If you're trying to ascertain which transition end event to bind to, you might do something like...\n    //\n    //     var transEndEventNames = {\n    //       'WebkitTransition' : 'webkitTransitionEnd',\n    //       'MozTransition'    : 'transitionend',\n    //       'OTransition'      : 'oTransitionEnd',\n    //       'msTransition'     : 'MSTransitionEnd',\n    //       'transition'       : 'transitionend'\n    //     },\n    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\n\n    Modernizr.prefixed      = function(prop, obj, elem){\n      if(!obj) {\n        return testPropsAll(prop, 'pfx');\n      } else {\n        // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\n        return testPropsAll(prop, obj, elem);\n      }\n    };\n    /*>>prefixed*/\n\n\n    /*>>cssclasses*/\n    // Remove \"no-js\" class from <html> element, if it exists:\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\n\n                            // Add the new classes to the <html> element.\n                            (enableClasses ? ' js ' + classes.join(' ') : '');\n    /*>>cssclasses*/\n\n    return Modernizr;\n\n})(this, this.document);\n"]},"hash":"2e131e1ce124c2bf766324ed2a12caaa4c017700"}
