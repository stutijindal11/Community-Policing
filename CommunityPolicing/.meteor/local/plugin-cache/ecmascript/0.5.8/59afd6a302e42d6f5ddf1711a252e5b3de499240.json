{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.orbit.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.orbit.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.orbit.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.orbit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.orbit"},"ignored":false,"code":"/**\n * Orbit module.\n * @module foundation.orbit\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n * @requires foundation.util.timerAndImageLoader\n * @requires foundation.util.touch\n */\n!function ($, Foundation) {\n  'use strict';\n  /**\n   * Creates a new instance of an orbit carousel.\n   * @class\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n\n  function Orbit(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this);\n    Foundation.Keyboard.register('Orbit', {\n      'ltr': {\n        'ARROW_RIGHT': 'next',\n        'ARROW_LEFT': 'previous'\n      },\n      'rtl': {\n        'ARROW_LEFT': 'next',\n        'ARROW_RIGHT': 'previous'\n      }\n    });\n  }\n  Orbit.defaults = {\n    /**\n     * Tells the JS to loadBullets.\n     * @option\n     * @example true\n     */\n    bullets: true,\n    /**\n     * Tells the JS to apply event listeners to nav buttons\n     * @option\n     * @example true\n     */\n    navButtons: true,\n    /**\n     * motion-ui animation class to apply\n     * @option\n     * @example 'slide-in-right'\n     */\n    animInFromRight: 'slide-in-right',\n    /**\n     * motion-ui animation class to apply\n     * @option\n     * @example 'slide-out-right'\n     */\n    animOutToRight: 'slide-out-right',\n    /**\n     * motion-ui animation class to apply\n     * @option\n     * @example 'slide-in-left'\n     *\n     */\n    animInFromLeft: 'slide-in-left',\n    /**\n     * motion-ui animation class to apply\n     * @option\n     * @example 'slide-out-left'\n     */\n    animOutToLeft: 'slide-out-left',\n    /**\n     * Allows Orbit to automatically animate on page load.\n     * @option\n     * @example true\n     */\n    autoPlay: true,\n    /**\n     * Amount of time, in ms, between slide transitions\n     * @option\n     * @example 5000\n     */\n    timerDelay: 5000,\n    /**\n     * Allows Orbit to infinitely loop through the slides\n     * @option\n     * @example true\n     */\n    infiniteWrap: true,\n    /**\n     * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n     * @option\n     * @example true\n     */\n    swipe: true,\n    /**\n     * Allows the timing function to pause animation on hover.\n     * @option\n     * @example true\n     */\n    pauseOnHover: true,\n    /**\n     * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n     * @option\n     * @example true\n     */\n    accessible: true,\n    /**\n     * Class applied to the container of Orbit\n     * @option\n     * @example 'orbit-container'\n     */\n    containerClass: 'orbit-container',\n    /**\n     * Class applied to individual slides.\n     * @option\n     * @example 'orbit-slide'\n     */\n    slideClass: 'orbit-slide',\n    /**\n     * Class applied to the bullet container. You're welcome.\n     * @option\n     * @example 'orbit-bullets'\n     */\n    boxOfBullets: 'orbit-bullets',\n    /**\n     * Class applied to the `next` navigation button.\n     * @option\n     * @example 'orbit-next'\n     */\n    nextClass: 'orbit-next',\n    /**\n     * Class applied to the `previous` navigation button.\n     * @option\n     * @example 'orbit-previous'\n     */\n    prevClass: 'orbit-previous'\n  };\n  /**\n   * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n   * @function\n   * @private\n   */\n  Orbit.prototype._init = function () {\n    this.$wrapper = this.$element.find('.' + this.options.containerClass);\n    this.$slides = this.$element.find('.' + this.options.slideClass);\n    var $images = this.$element.find('img');\n\n    if ($images.length) {\n      Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n    } else {\n      this._prepareForOrbit(); //hehe\n    }\n\n    if (this.options.bullets) {\n      this._loadBullets();\n    }\n\n    this._events();\n\n    if (this.options.autoPlay) {\n      this.geoSync();\n    }\n    if (this.options.accessible) {\n      // allow wrapper to be focusable to enable arrow navigation\n      this.$wrapper.attr('tabindex', 0);\n    }\n  };\n  /**\n   * Creates a jQuery collection of bullets, if they are being used.\n   * @function\n   * @private\n   */\n  Orbit.prototype._loadBullets = function () {\n    this.$bullets = this.$element.find('.' + this.options.boxOfBullets).find('button');\n  };\n  /**\n   * Sets a `timer` object on the orbit, and starts the counter for the next slide.\n   * @function\n   */\n  Orbit.prototype.geoSync = function () {\n    var _this = this;\n    this.timer = new Foundation.Timer(this.$element, { duration: this.options.timerDelay,\n      infinite: false }, function () {\n      _this.changeSlide(true);\n    });\n    this.timer.start();\n  };\n  /**\n   * Sets wrapper and slide heights for the orbit.\n   * @function\n   * @private\n   */\n  Orbit.prototype._prepareForOrbit = function () {\n    var _this = this;\n    this._setWrapperHeight(function (max) {\n      _this._setSlideHeight(max);\n    });\n  };\n  /**\n   * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n   * @function\n   * @private\n   * @param {Function} cb - a callback function to fire when complete.\n   */\n  Orbit.prototype._setWrapperHeight = function (cb) {\n    //rewrite this to `for` loop\n    var max = 0,\n        temp,\n        counter = 0;\n\n    this.$slides.each(function () {\n      temp = this.getBoundingClientRect().height;\n      $(this).attr('data-slide', counter);\n\n      if (counter) {\n        //if not the first slide, set css position and display property\n        $(this).css({ 'position': 'relative', 'display': 'none' });\n      }\n      max = temp > max ? temp : max;\n      counter++;\n    });\n\n    if (counter === this.$slides.length) {\n      this.$wrapper.css({ 'height': max }); //only change the wrapper height property once.\n      cb(max); //fire callback with max height dimension.\n    }\n  };\n  /**\n   * Sets the max-height of each slide.\n   * @function\n   * @private\n   */\n  Orbit.prototype._setSlideHeight = function (height) {\n    this.$slides.each(function () {\n      $(this).css('max-height', height);\n    });\n  };\n  /**\n   * Adds event listeners to basically everything within the element.\n   * @function\n   * @private\n   */\n  Orbit.prototype._events = function () {\n    var _this = this;\n\n    //***************************************\n    //**Now using custom event - thanks to:**\n    //**      Yohai Ararat of Toronto      **\n    //***************************************\n    if (this.options.swipe) {\n      this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit', function (e) {\n        e.preventDefault();\n        _this.changeSlide(true);\n      }).on('swiperight.zf.orbit', function (e) {\n        e.preventDefault();\n        _this.changeSlide(false);\n      });\n    }\n    //***************************************\n\n    if (this.options.autoPlay) {\n      this.$slides.on('click.zf.orbit', function () {\n        _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n        _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n      });\n      if (this.options.pauseOnHover) {\n        this.$element.on('mouseenter.zf.orbit', function () {\n          _this.timer.pause();\n        }).on('mouseleave.zf.orbit', function () {\n          if (!_this.$element.data('clickedOn')) {\n            _this.timer.start();\n          }\n        });\n      }\n    }\n\n    if (this.options.navButtons) {\n      var $controls = this.$element.find('.' + this.options.nextClass + ', .' + this.options.prevClass);\n      $controls.attr('tabindex', 0)\n      //also need to handle enter/return and spacebar key presses\n      .on('click.zf.orbit touchend.zf.orbit', function () {\n        _this.changeSlide($(this).hasClass(_this.options.nextClass));\n      });\n    }\n\n    if (this.options.bullets) {\n      this.$bullets.on('click.zf.orbit touchend.zf.orbit', function () {\n        if (/is-active/g.test(this.className)) {\n          return false;\n        } //if this is active, kick out of function.\n        var idx = $(this).data('slide'),\n            ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n            $slide = _this.$slides.eq(idx);\n\n        _this.changeSlide(ltr, $slide, idx);\n      });\n    }\n\n    this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function (e) {\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, _this, {\n        next: function next() {\n          _this.changeSlide(true);\n        },\n        previous: function previous() {\n          _this.changeSlide(false);\n        },\n        handled: function handled() {\n          // if bullet is focused, make sure focus moves\n          if ($(e.target).is(_this.$bullets)) {\n            _this.$bullets.filter('.is-active').focus();\n          }\n        }\n      });\n    });\n  };\n  /**\n   * Changes the current slide to a new one.\n   * @function\n   * @param {Boolean} isLTR - flag if the slide should move left to right.\n   * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n   * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n   * @fires Orbit#slidechange\n   */\n  Orbit.prototype.changeSlide = function (isLTR, chosenSlide, idx) {\n    var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n    if (/mui/g.test($curSlide[0].className)) {\n      return false;\n    } //if the slide is currently animating, kick out of the function\n\n    var $firstSlide = this.$slides.first(),\n        $lastSlide = this.$slides.last(),\n        dirIn = isLTR ? 'Right' : 'Left',\n        dirOut = isLTR ? 'Left' : 'Right',\n        _this = this,\n        $newSlide;\n\n    if (!chosenSlide) {\n      //most of the time, this will be auto played or clicked from the navButtons.\n      $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n      this.options.infiniteWrap ? $curSlide.next('.' + this.options.slideClass).length ? $curSlide.next('.' + this.options.slideClass) : $firstSlide : $curSlide.next('.' + this.options.slideClass) : //pick next slide if moving left to right\n      this.options.infiniteWrap ? $curSlide.prev('.' + this.options.slideClass).length ? $curSlide.prev('.' + this.options.slideClass) : $lastSlide : $curSlide.prev('.' + this.options.slideClass); //pick prev slide if moving right to left\n    } else {\n        $newSlide = chosenSlide;\n      }\n    if ($newSlide.length) {\n      if (this.options.bullets) {\n        idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n        this._updateBullets(idx);\n      }\n      Foundation.Motion.animateIn($newSlide.addClass('is-active').css({ 'position': 'absolute', 'top': 0 }), this.options['animInFrom' + dirIn], function () {\n        $newSlide.css({ 'position': 'relative', 'display': 'block' }).attr('aria-live', 'polite');\n      });\n\n      Foundation.Motion.animateOut($curSlide.removeClass('is-active'), this.options['animOutTo' + dirOut], function () {\n        $curSlide.removeAttr('aria-live');\n        if (_this.options.autoPlay) {\n          _this.timer.restart();\n        }\n        //do stuff?\n        /**\n         * Triggers when the slide has finished animating in.\n         * @event Orbit#slidechange\n         */\n        _this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n      });\n    }\n  };\n  /**\n   * Updates the active state of the bullets, if displayed.\n   * @function\n   * @private\n   * @param {Number} idx - the index of the current slide.\n   */\n  Orbit.prototype._updateBullets = function (idx) {\n    var $oldBullet = this.$element.find('.' + this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),\n        span = $oldBullet.find('span:last').detach(),\n        $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n  };\n  /**\n   * Destroys the carousel and hides the element.\n   * @function\n   */\n  Orbit.prototype.destroy = function () {\n    delete this.timer;\n    this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n    Foundation.unregisterPlugin(this);\n  };\n\n  Foundation.plugin(Orbit, 'Orbit');\n}(jQuery, window.Foundation);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.orbit.js"],"names":[],"mappings":"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","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.orbit.js.map","sourcesContent":["/**\n * Orbit module.\n * @module foundation.orbit\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n * @requires foundation.util.timerAndImageLoader\n * @requires foundation.util.touch\n */\n!function($, Foundation){\n  'use strict';\n  /**\n   * Creates a new instance of an orbit carousel.\n   * @class\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  function Orbit(element, options){\n    this.$element = element;\n    this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this);\n    Foundation.Keyboard.register('Orbit', {\n        'ltr': {\n          'ARROW_RIGHT': 'next',\n          'ARROW_LEFT': 'previous'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'next',\n          'ARROW_RIGHT': 'previous'\n        }\n    });\n  }\n  Orbit.defaults = {\n    /**\n     * Tells the JS to loadBullets.\n     * @option\n     * @example true\n     */\n    bullets: true,\n    /**\n     * Tells the JS to apply event listeners to nav buttons\n     * @option\n     * @example true\n     */\n    navButtons: true,\n    /**\n     * motion-ui animation class to apply\n     * @option\n     * @example 'slide-in-right'\n     */\n    animInFromRight: 'slide-in-right',\n    /**\n     * motion-ui animation class to apply\n     * @option\n     * @example 'slide-out-right'\n     */\n    animOutToRight: 'slide-out-right',\n    /**\n     * motion-ui animation class to apply\n     * @option\n     * @example 'slide-in-left'\n     *\n     */\n    animInFromLeft: 'slide-in-left',\n    /**\n     * motion-ui animation class to apply\n     * @option\n     * @example 'slide-out-left'\n     */\n    animOutToLeft: 'slide-out-left',\n    /**\n     * Allows Orbit to automatically animate on page load.\n     * @option\n     * @example true\n     */\n    autoPlay: true,\n    /**\n     * Amount of time, in ms, between slide transitions\n     * @option\n     * @example 5000\n     */\n    timerDelay: 5000,\n    /**\n     * Allows Orbit to infinitely loop through the slides\n     * @option\n     * @example true\n     */\n    infiniteWrap: true,\n    /**\n     * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n     * @option\n     * @example true\n     */\n    swipe: true,\n    /**\n     * Allows the timing function to pause animation on hover.\n     * @option\n     * @example true\n     */\n    pauseOnHover: true,\n    /**\n     * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n     * @option\n     * @example true\n     */\n    accessible: true,\n    /**\n     * Class applied to the container of Orbit\n     * @option\n     * @example 'orbit-container'\n     */\n    containerClass: 'orbit-container',\n    /**\n     * Class applied to individual slides.\n     * @option\n     * @example 'orbit-slide'\n     */\n    slideClass: 'orbit-slide',\n    /**\n     * Class applied to the bullet container. You're welcome.\n     * @option\n     * @example 'orbit-bullets'\n     */\n    boxOfBullets: 'orbit-bullets',\n    /**\n     * Class applied to the `next` navigation button.\n     * @option\n     * @example 'orbit-next'\n     */\n    nextClass: 'orbit-next',\n    /**\n     * Class applied to the `previous` navigation button.\n     * @option\n     * @example 'orbit-previous'\n     */\n    prevClass: 'orbit-previous'\n  };\n  /**\n   * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n   * @function\n   * @private\n   */\n  Orbit.prototype._init = function(){\n    this.$wrapper = this.$element.find('.' + this.options.containerClass);\n    this.$slides = this.$element.find('.' + this.options.slideClass);\n    var $images = this.$element.find('img');\n\n    if($images.length){\n      Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n    }else{\n      this._prepareForOrbit();//hehe\n    }\n\n    if(this.options.bullets){\n      this._loadBullets();\n    }\n\n    this._events();\n\n    if(this.options.autoPlay){\n      this.geoSync();\n    }\n    if(this.options.accessible){ // allow wrapper to be focusable to enable arrow navigation\n      this.$wrapper.attr('tabindex', 0);\n    }\n  };\n  /**\n   * Creates a jQuery collection of bullets, if they are being used.\n   * @function\n   * @private\n   */\n  Orbit.prototype._loadBullets = function(){\n    this.$bullets = this.$element.find('.' + this.options.boxOfBullets).find('button');\n  };\n  /**\n   * Sets a `timer` object on the orbit, and starts the counter for the next slide.\n   * @function\n   */\n  Orbit.prototype.geoSync = function(){\n    var _this = this;\n    this.timer = new Foundation.Timer(\n                      this.$element,\n                      {duration: this.options.timerDelay,\n                       infinite: false},\n                      function(){\n                        _this.changeSlide(true);\n                      });\n    this.timer.start();\n  };\n  /**\n   * Sets wrapper and slide heights for the orbit.\n   * @function\n   * @private\n   */\n  Orbit.prototype._prepareForOrbit = function(){\n    var _this = this;\n    this._setWrapperHeight(function(max){\n      _this._setSlideHeight(max);\n    });\n  };\n  /**\n   * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n   * @function\n   * @private\n   * @param {Function} cb - a callback function to fire when complete.\n   */\n  Orbit.prototype._setWrapperHeight = function(cb){//rewrite this to `for` loop\n    var max = 0, temp, counter = 0;\n\n    this.$slides.each(function(){\n      temp = this.getBoundingClientRect().height;\n      $(this).attr('data-slide', counter);\n\n      if(counter){//if not the first slide, set css position and display property\n        $(this).css({'position': 'relative', 'display': 'none'});\n      }\n      max = temp > max ? temp : max;\n      counter++;\n    });\n\n    if(counter === this.$slides.length){\n      this.$wrapper.css({'height': max});//only change the wrapper height property once.\n      cb(max);//fire callback with max height dimension.\n    }\n  };\n  /**\n   * Sets the max-height of each slide.\n   * @function\n   * @private\n   */\n  Orbit.prototype._setSlideHeight = function(height){\n    this.$slides.each(function(){\n      $(this).css('max-height', height);\n    });\n  };\n  /**\n   * Adds event listeners to basically everything within the element.\n   * @function\n   * @private\n   */\n  Orbit.prototype._events = function(){\n    var _this = this;\n\n    //***************************************\n    //**Now using custom event - thanks to:**\n    //**      Yohai Ararat of Toronto      **\n    //***************************************\n    if(this.options.swipe){\n      this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit')\n      .on('swipeleft.zf.orbit', function(e){\n        e.preventDefault();\n        _this.changeSlide(true);\n      }).on('swiperight.zf.orbit', function(e){\n        e.preventDefault();\n        _this.changeSlide(false);\n      });\n    }\n    //***************************************\n\n    if(this.options.autoPlay){\n      this.$slides.on('click.zf.orbit', function(){\n        _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n        _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n      });\n      if(this.options.pauseOnHover){\n        this.$element.on('mouseenter.zf.orbit', function(){\n          _this.timer.pause();\n        }).on('mouseleave.zf.orbit', function(){\n          if(!_this.$element.data('clickedOn')){\n            _this.timer.start();\n          }\n        });\n      }\n    }\n\n    if(this.options.navButtons){\n      var $controls = this.$element.find('.' + this.options.nextClass + ', .' + this.options.prevClass);\n      $controls.attr('tabindex', 0)\n        //also need to handle enter/return and spacebar key presses\n               .on('click.zf.orbit touchend.zf.orbit', function(){\n                 _this.changeSlide($(this).hasClass(_this.options.nextClass));\n               });\n    }\n\n    if(this.options.bullets){\n      this.$bullets.on('click.zf.orbit touchend.zf.orbit', function(){\n        if(/is-active/g.test(this.className)){ return false; }//if this is active, kick out of function.\n        var idx = $(this).data('slide'),\n            ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n            $slide = _this.$slides.eq(idx);\n\n        _this.changeSlide(ltr, $slide, idx);\n      });\n    }\n\n    this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function(e){\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, _this, {\n        next: function() {\n          _this.changeSlide(true);\n        },\n        previous: function() {\n          _this.changeSlide(false);\n        },\n        handled: function() { // if bullet is focused, make sure focus moves\n          if ($(e.target).is(_this.$bullets)) {\n            _this.$bullets.filter('.is-active').focus();\n          }\n        }\n      });\n    });\n  };\n  /**\n   * Changes the current slide to a new one.\n   * @function\n   * @param {Boolean} isLTR - flag if the slide should move left to right.\n   * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n   * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n   * @fires Orbit#slidechange\n   */\n  Orbit.prototype.changeSlide = function(isLTR, chosenSlide, idx){\n    var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n\n    if(/mui/g.test($curSlide[0].className)){ return false; }//if the slide is currently animating, kick out of the function\n\n    var $firstSlide = this.$slides.first(),\n        $lastSlide = this.$slides.last(),\n        dirIn = isLTR ? 'Right' : 'Left',\n        dirOut = isLTR ? 'Left' : 'Right',\n        _this = this,\n        $newSlide;\n\n    if(!chosenSlide){//most of the time, this will be auto played or clicked from the navButtons.\n      $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n                    (this.options.infiniteWrap ? $curSlide.next('.' + this.options.slideClass).length ? $curSlide.next('.' + this.options.slideClass) : $firstSlide : $curSlide.next('.' + this.options.slideClass))//pick next slide if moving left to right\n                    :\n                    (this.options.infiniteWrap ? $curSlide.prev('.' + this.options.slideClass).length ? $curSlide.prev('.' + this.options.slideClass) : $lastSlide : $curSlide.prev('.' + this.options.slideClass));//pick prev slide if moving right to left\n    }else{\n      $newSlide = chosenSlide;\n    }\n    if($newSlide.length){\n      if(this.options.bullets){\n        idx = idx || this.$slides.index($newSlide);//grab index to update bullets\n        this._updateBullets(idx);\n      }\n      Foundation.Motion.animateIn(\n        $newSlide.addClass('is-active').css({'position': 'absolute', 'top': 0}),\n        this.options['animInFrom' + dirIn],\n        function(){\n          $newSlide.css({'position': 'relative', 'display': 'block'})\n                   .attr('aria-live', 'polite');\n        });\n\n      Foundation.Motion.animateOut(\n        $curSlide.removeClass('is-active'),\n        this.options['animOutTo' + dirOut],\n        function(){\n          $curSlide.removeAttr('aria-live');\n          if(_this.options.autoPlay){\n            _this.timer.restart();\n          }\n          //do stuff?\n          /**\n           * Triggers when the slide has finished animating in.\n           * @event Orbit#slidechange\n           */\n          _this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n        });\n    }\n  };\n  /**\n   * Updates the active state of the bullets, if displayed.\n   * @function\n   * @private\n   * @param {Number} idx - the index of the current slide.\n   */\n  Orbit.prototype._updateBullets = function(idx){\n    var $oldBullet = this.$element.find('.' + this.options.boxOfBullets)\n                                  .find('.is-active').removeClass('is-active').blur(),\n        span = $oldBullet.find('span:last').detach(),\n        $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n  };\n  /**\n   * Destroys the carousel and hides the element.\n   * @function\n   */\n  Orbit.prototype.destroy = function(){\n    delete this.timer;\n    this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n    Foundation.unregisterPlugin(this);\n  };\n\n  Foundation.plugin(Orbit, 'Orbit');\n\n}(jQuery, window.Foundation);\n"]},"hash":"59afd6a302e42d6f5ddf1711a252e5b3de499240"}
