{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-jade.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-jade.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-jade.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-jade.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"prism-jade"},"ignored":false,"code":"(function (Prism) {\n\t// TODO:\n\t// - Add CSS highlighting inside <style> tags\n\t// - Add support for multi-line code blocks\n\t// - Add support for interpolation #{} and !{}\n\t// - Add support for tag interpolation #[]\n\t// - Add explicit support for plain text using |\n\t// - Add support for markup embedded in plain text\n\n\tPrism.languages.jade = {\n\n\t\t// Multiline stuff should appear before the rest\n\n\t\t// This handles both single-line and multi-line comments\n\t\t'comment': {\n\t\t\tpattern: /(^([\\t ]*))\\/\\/.*((?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t// All the tag-related part is in lookbehind\n\t\t// so that it can be highlighted by the \"tag\" pattern\n\t\t'multiline-script': {\n\t\t\tpattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\n\t\t// See at the end of the file for known filters\n\t\t'filter': {\n\t\t\tpattern: /(^([\\t ]*)):.+((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'filter-name': {\n\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'multiline-plain-text': {\n\t\t\tpattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'markup': {\n\t\t\tpattern: /(^[\\t ]*)<.+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.markup\n\t\t\t}\n\t\t},\n\t\t'doctype': {\n\t\t\tpattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t// This handle all conditional and loop keywords\n\t\t'flow-control': {\n\t\t\tpattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'each': {\n\t\t\t\t\tpattern: /^each .+? in\\b/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /\\b(?:each|in)\\b/,\n\t\t\t\t\t\t'punctuation': /,/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'branch': {\n\t\t\t\t\tpattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'mixin': [\n\t\t// Declaration\n\t\t{\n\t\t\tpattern: /(^[\\t ]*)mixin .+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'keyword': /^mixin/,\n\t\t\t\t'function': /\\w+(?=\\s*\\(|\\s*$)/,\n\t\t\t\t'punctuation': /[(),.]/\n\t\t\t}\n\t\t},\n\t\t// Usage\n\t\t{\n\t\t\tpattern: /(^[\\t ]*)\\+.+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'name': {\n\t\t\t\t\tpattern: /^\\+\\w+/,\n\t\t\t\t\talias: 'function'\n\t\t\t\t},\n\t\t\t\t'rest': Prism.languages.javascript\n\t\t\t}\n\t\t}],\n\t\t'script': {\n\t\t\tpattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\n\t\t'plain-text': {\n\t\t\tpattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'tag': {\n\t\t\tpattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attributes': [{\n\t\t\t\t\tpattern: /&[^(]+\\([^)]+\\)/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tpattern: /\\([^)]+\\)/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n\t\t\t\t\t\t'punctuation': /[!=(),]+/\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\t'punctuation': /:/\n\t\t\t}\n\t\t},\n\t\t'code': [{\n\t\t\tpattern: /(^[\\t ]*(?:-|!?=)).+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t}],\n\t\t'punctuation': /[.\\-!=|]+/\n\t};\n\n\tvar filter_pattern = '(^([\\\\t ]*)):{{filter_name}}((?:\\\\r?\\\\n|\\\\r(?!\\\\n))(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\n\t// Non exhaustive list of available filters and associated languages\n\tvar filters = [{ filter: 'atpl', language: 'twig' }, { filter: 'coffee', language: 'coffeescript' }, 'ejs', 'handlebars', 'hogan', 'less', 'livescript', 'markdown', 'mustache', 'plates', { filter: 'sass', language: 'scss' }, 'stylus', 'swig'];\n\tvar all_filters = {};\n\tfor (var i = 0, l = filters.length; i < l; i++) {\n\t\tvar filter = filters[i];\n\t\tfilter = typeof filter === 'string' ? { filter: filter, language: filter } : filter;\n\t\tif (Prism.languages[filter.language]) {\n\t\t\tall_filters['filter-' + filter.filter] = {\n\t\t\t\tpattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter), 'm'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'filter-name': {\n\t\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages[filter.language]\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tPrism.languages.insertBefore('jade', 'filter', all_filters);\n})(Prism);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-jade.js"],"names":[],"mappings":"AAAC,WAAS,KAAT,EAAgB;;;;;;;;;AAShB,OAAM,SAAN,CAAgB,IAAhB,GAAuB;;;;;AAKtB,aAAW;AACV,YAAS,6CADC;AAEV,eAAY;AAFF,GALW;;;;AAYtB,sBAAoB;AACnB,YAAS,oFADU;AAEnB,eAAY,IAFO;AAGnB,WAAQ;AACP,UAAM,MAAM,SAAN,CAAgB;AADf;AAHW,GAZE;;;AAqBtB,YAAU;AACT,YAAS,qEADA;AAET,eAAY,IAFH;AAGT,WAAQ;AACP,mBAAe;AACd,cAAS,UADK;AAEd,YAAO;AAFO;AADR;AAHC,GArBY;;AAgCtB,0BAAwB;AACvB,YAAS,mFADc;AAEvB,eAAY;AAFW,GAhCF;AAoCtB,YAAU;AACT,YAAS,eADA;AAET,eAAY,IAFH;AAGT,WAAQ;AACP,UAAM,MAAM,SAAN,CAAgB;AADf;AAHC,GApCY;AA2CtB,aAAW;AACV,YAAS,iCADC;AAEV,eAAY;AAFF,GA3CW;;;AAiDtB,kBAAgB;AACf,YAAS,qEADM;AAEf,eAAY,IAFG;AAGf,WAAQ;AACP,YAAQ;AACP,cAAS,gBADF;AAEP,aAAQ;AACP,iBAAW,iBADJ;AAEP,qBAAe;AAFR;AAFD,KADD;AAQP,cAAU;AACT,cAAS,+CADA;AAET,YAAO;AAFE,KARH;AAYP,UAAM,MAAM,SAAN,CAAgB;AAZf;AAHO,GAjDM;AAmEtB,aAAW;AACV,YAAS,wDADC;AAEV,eAAY;AAFF,GAnEW;AAuEtB,WAAS;;AAER;AACC,YAAS,oBADV;AAEC,eAAY,IAFb;AAGC,WAAQ;AACP,eAAW,QADJ;AAEP,gBAAY,mBAFL;AAGP,mBAAe;AAHR;AAHT,GAFQ;;AAYR;AACC,YAAS,gBADV;AAEC,eAAY,IAFb;AAGC,WAAQ;AACP,YAAQ;AACP,cAAS,QADF;AAEP,YAAO;AAFA,KADD;AAKP,YAAQ,MAAM,SAAN,CAAgB;AALjB;AAHT,GAZQ,CAvEa;AA+FtB,YAAU;AACT,YAAS,mDADA;AAET,eAAY,IAFH;AAGT,WAAQ;AACP,UAAM,MAAM,SAAN,CAAgB;AADf;AAHC,GA/FY;;AAuGtB,gBAAc;AACb,YAAS,oEADI;AAEb,eAAY;AAFC,GAvGQ;AA2GtB,SAAO;AACN,YAAS,8DADH;AAEN,eAAY,IAFN;AAGN,WAAQ;AACP,kBAAc,CACb;AACC,cAAS,iBADV;AAEC,aAAQ;AACP,YAAM,MAAM,SAAN,CAAgB;AADf;AAFT,KADa,EAOb;AACC,cAAS,WADV;AAEC,aAAQ;AACP,oBAAc;AACb,gBAAS,gCADI;AAEb,mBAAY,IAFC;AAGb,eAAQ;AACP,cAAM,MAAM,SAAN,CAAgB;AADf;AAHK,OADP;AAQP,mBAAa,0BARN;AASP,qBAAe;AATR;AAFT,KAPa,CADP;AAuBP,mBAAe;AAvBR;AAHF,GA3Ge;AAwItB,UAAQ,CACP;AACC,YAAS,uBADV;AAEC,eAAY,IAFb;AAGC,WAAQ;AACP,UAAM,MAAM,SAAN,CAAgB;AADf;AAHT,GADO,CAxIc;AAiJtB,iBAAe;AAjJO,EAAvB;;AAoJA,KAAI,iBAAiB,4FAArB;;;AAGA,KAAI,UAAU,CACb,EAAC,QAAO,MAAR,EAAe,UAAS,MAAxB,EADa,EAEb,EAAC,QAAO,QAAR,EAAiB,UAAS,cAA1B,EAFa,EAGb,KAHa,EAIb,YAJa,EAKb,OALa,EAMb,MANa,EAOb,YAPa,EAQb,UARa,EASb,UATa,EAUb,QAVa,EAWb,EAAC,QAAO,MAAR,EAAe,UAAS,MAAxB,EAXa,EAYb,QAZa,EAab,MAba,CAAd;AAgBA,KAAI,cAAc,EAAlB;AACA,MAAK,IAAI,IAAI,CAAR,EAAW,IAAI,QAAQ,MAA5B,EAAoC,IAAI,CAAxC,EAA2C,GAA3C,EAAgD;AAC/C,MAAI,SAAS,QAAQ,CAAR,CAAb;AACA,WAAS,OAAO,MAAP,KAAkB,QAAlB,GAA6B,EAAC,QAAQ,MAAT,EAAiB,UAAU,MAA3B,EAA7B,GAAkE,MAA3E;AACA,MAAI,MAAM,SAAN,CAAgB,OAAO,QAAvB,CAAJ,EAAsC;AACrC,eAAY,YAAY,OAAO,MAA/B,IAAyC;AACxC,aAAS,OAAO,eAAe,OAAf,CAAuB,iBAAvB,EAA0C,OAAO,MAAjD,CAAP,EAAiE,GAAjE,CAD+B;AAExC,gBAAY,IAF4B;AAGxC,YAAQ;AACP,oBAAe;AACd,eAAS,UADK;AAEd,aAAO;AAFO,MADR;AAKP,WAAM,MAAM,SAAN,CAAgB,OAAO,QAAvB;AALC;AAHgC,IAAzC;AAWA;AACD;;AAED,OAAM,SAAN,CAAgB,YAAhB,CAA6B,MAA7B,EAAqC,QAArC,EAA+C,WAA/C;AAEA,CArMA,EAqMC,KArMD,CAAD","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-jade.js.map","sourcesContent":["(function(Prism) {\n\t// TODO:\n\t// - Add CSS highlighting inside <style> tags\n\t// - Add support for multi-line code blocks\n\t// - Add support for interpolation #{} and !{}\n\t// - Add support for tag interpolation #[]\n\t// - Add explicit support for plain text using |\n\t// - Add support for markup embedded in plain text\n\n\tPrism.languages.jade = {\n\n\t\t// Multiline stuff should appear before the rest\n\n\t\t// This handles both single-line and multi-line comments\n\t\t'comment': {\n\t\t\tpattern: /(^([\\t ]*))\\/\\/.*((?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t// All the tag-related part is in lookbehind\n\t\t// so that it can be highlighted by the \"tag\" pattern\n\t\t'multiline-script': {\n\t\t\tpattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\n\t\t// See at the end of the file for known filters\n\t\t'filter': {\n\t\t\tpattern: /(^([\\t ]*)):.+((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'filter-name': {\n\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'multiline-plain-text': {\n\t\t\tpattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'markup': {\n\t\t\tpattern: /(^[\\t ]*)<.+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.markup\n\t\t\t}\n\t\t},\n\t\t'doctype': {\n\t\t\tpattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t// This handle all conditional and loop keywords\n\t\t'flow-control': {\n\t\t\tpattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'each': {\n\t\t\t\t\tpattern: /^each .+? in\\b/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /\\b(?:each|in)\\b/,\n\t\t\t\t\t\t'punctuation': /,/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'branch': {\n\t\t\t\t\tpattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'mixin': [\n\t\t\t// Declaration\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*)mixin .+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^mixin/,\n\t\t\t\t\t'function': /\\w+(?=\\s*\\(|\\s*$)/,\n\t\t\t\t\t'punctuation': /[(),.]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Usage\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*)\\+.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'name': {\n\t\t\t\t\t\tpattern: /^\\+\\w+/,\n\t\t\t\t\t\talias: 'function'\n\t\t\t\t\t},\n\t\t\t\t\t'rest': Prism.languages.javascript\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'script': {\n\t\t\tpattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\n\t\t'plain-text': {\n\t\t\tpattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'tag': {\n\t\t\tpattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attributes': [\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /&[^(]+\\([^)]+\\)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /\\([^)]+\\)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n\t\t\t\t\t\t\t'punctuation': /[!=(),]+/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'punctuation': /:/\n\t\t\t}\n\t\t},\n\t\t'code': [\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*(?:-|!?=)).+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'punctuation': /[.\\-!=|]+/\n\t};\n\n\tvar filter_pattern = '(^([\\\\t ]*)):{{filter_name}}((?:\\\\r?\\\\n|\\\\r(?!\\\\n))(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\n\t// Non exhaustive list of available filters and associated languages\n\tvar filters = [\n\t\t{filter:'atpl',language:'twig'},\n\t\t{filter:'coffee',language:'coffeescript'},\n\t\t'ejs',\n\t\t'handlebars',\n\t\t'hogan',\n\t\t'less',\n\t\t'livescript',\n\t\t'markdown',\n\t\t'mustache',\n\t\t'plates',\n\t\t{filter:'sass',language:'scss'},\n\t\t'stylus',\n\t\t'swig'\n\n\t];\n\tvar all_filters = {};\n\tfor (var i = 0, l = filters.length; i < l; i++) {\n\t\tvar filter = filters[i];\n\t\tfilter = typeof filter === 'string' ? {filter: filter, language: filter} : filter;\n\t\tif (Prism.languages[filter.language]) {\n\t\t\tall_filters['filter-' + filter.filter] = {\n\t\t\t\tpattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter), 'm'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'filter-name': {\n\t\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages[filter.language]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tPrism.languages.insertBefore('jade', 'filter', all_filters);\n\n}(Prism));"]},"hash":"7526524644c893e5e5398bb060464ddbe1c6f9d9"}
