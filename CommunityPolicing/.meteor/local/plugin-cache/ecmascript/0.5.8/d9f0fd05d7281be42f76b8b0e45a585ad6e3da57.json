{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.util.timerAndImageLoader.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.util.timerAndImageLoader.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.util.timerAndImageLoader.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.util.timerAndImageLoader.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.util.timerAndImageLoader"},"ignored":false,"code":"!function ($, Foundation) {\n  'use strict';\n\n  var Timer = function Timer(elem, options, cb) {\n    var _this = this,\n        duration = options.duration,\n        //options is an object for easily adding features later.\n    nameSpace = Object.keys(elem.data())[0] || 'timer',\n        remain = -1,\n        start,\n        timer;\n\n    this.restart = function () {\n      remain = -1;\n      clearTimeout(timer);\n      this.start();\n    };\n\n    this.start = function () {\n      // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      remain = remain <= 0 ? duration : remain;\n      elem.data('paused', false);\n      start = Date.now();\n      timer = setTimeout(function () {\n        if (options.infinite) {\n          _this.restart(); //rerun the timer.\n        }\n        cb();\n      }, remain);\n      elem.trigger('timerstart.zf.' + nameSpace);\n    };\n\n    this.pause = function () {\n      //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      elem.data('paused', true);\n      var end = Date.now();\n      remain = remain - (end - start);\n      elem.trigger('timerpaused.zf.' + nameSpace);\n    };\n  };\n  /**\n   * Runs a callback function when images are fully loaded.\n   * @param {Object} images - Image(s) to check if loaded.\n   * @param {Func} callback - Function to execute when image is fully loaded.\n   */\n  var onImagesLoaded = function onImagesLoaded(images, callback) {\n    var self = this,\n        unloaded = images.length;\n\n    if (unloaded === 0) {\n      callback();\n    }\n\n    var singleImageLoaded = function singleImageLoaded() {\n      unloaded--;\n      if (unloaded === 0) {\n        callback();\n      }\n    };\n\n    images.each(function () {\n      if (this.complete) {\n        singleImageLoaded();\n      } else if (typeof this.naturalWidth !== 'undefined' && this.naturalWidth > 0) {\n        singleImageLoaded();\n      } else {\n        $(this).one('load', function () {\n          singleImageLoaded();\n        });\n      }\n    });\n  };\n\n  Foundation.Timer = Timer;\n  Foundation.onImagesLoaded = onImagesLoaded;\n}(jQuery, window.Foundation);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.util.timerAndImageLoader.js"],"names":[],"mappings":"AAAA,CAAC,UAAS,CAAT,EAAY,UAAZ,EAAuB;AACtB;;AACA,MAAI,QAAQ,SAAR,KAAQ,CAAS,IAAT,EAAe,OAAf,EAAwB,EAAxB,EAA2B;AACrC,QAAI,QAAQ,IAAZ;AAAA,QACI,WAAW,QAAQ,QADvB;AAAA,Q;AAEI,gBAAY,OAAO,IAAP,CAAY,KAAK,IAAL,EAAZ,EAAyB,CAAzB,KAA+B,OAF/C;AAAA,QAGI,SAAS,CAAC,CAHd;AAAA,QAII,KAJJ;AAAA,QAKI,KALJ;;AAOA,SAAK,OAAL,GAAe,YAAU;AACvB,eAAS,CAAC,CAAV;AACA,mBAAa,KAAb;AACA,WAAK,KAAL;AACD,KAJD;;AAMA,SAAK,KAAL,GAAa,YAAU;;AAErB,mBAAa,KAAb;AACA,eAAS,UAAU,CAAV,GAAc,QAAd,GAAyB,MAAlC;AACA,WAAK,IAAL,CAAU,QAAV,EAAoB,KAApB;AACA,cAAQ,KAAK,GAAL,EAAR;AACA,cAAQ,WAAW,YAAU;AAC3B,YAAG,QAAQ,QAAX,EAAoB;AAClB,gBAAM,OAAN,G;AACD;AACD;AACD,OALO,EAKL,MALK,CAAR;AAMA,WAAK,OAAL,CAAa,mBAAmB,SAAhC;AACD,KAbD;;AAeA,SAAK,KAAL,GAAa,YAAU;;AAErB,mBAAa,KAAb;AACA,WAAK,IAAL,CAAU,QAAV,EAAoB,IAApB;AACA,UAAI,MAAM,KAAK,GAAL,EAAV;AACA,eAAS,UAAU,MAAM,KAAhB,CAAT;AACA,WAAK,OAAL,CAAa,oBAAoB,SAAjC;AACD,KAPD;AAQD,GArCD;;;;;;AA2CA,MAAI,iBAAiB,SAAjB,cAAiB,CAAS,MAAT,EAAiB,QAAjB,EAA0B;AAC7C,QAAI,OAAO,IAAX;AAAA,QACI,WAAW,OAAO,MADtB;;AAGA,QAAI,aAAa,CAAjB,EAAoB;AAClB;AACD;;AAED,QAAI,oBAAoB,SAApB,iBAAoB,GAAW;AACjC;AACA,UAAI,aAAa,CAAjB,EAAoB;AAClB;AACD;AACF,KALD;;AAOA,WAAO,IAAP,CAAY,YAAW;AACrB,UAAI,KAAK,QAAT,EAAmB;AACjB;AACD,OAFD,MAGK,IAAI,OAAO,KAAK,YAAZ,KAA6B,WAA7B,IAA4C,KAAK,YAAL,GAAoB,CAApE,EAAuE;AAC1E;AACD,OAFI,MAGA;AACH,UAAE,IAAF,EAAQ,GAAR,CAAY,MAAZ,EAAoB,YAAW;AAC7B;AACD,SAFD;AAGD;AACF,KAZD;AAaD,GA5BD;;AA8BA,aAAW,KAAX,GAAmB,KAAnB;AACA,aAAW,cAAX,GAA4B,cAA5B;AACD,CA7EA,CA6EC,MA7ED,EA6ES,OAAO,UA7EhB,CAAD","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.util.timerAndImageLoader.js.map","sourcesContent":["!function($, Foundation){\n  'use strict';\n  var Timer = function(elem, options, cb){\n    var _this = this,\n        duration = options.duration,//options is an object for easily adding features later.\n        nameSpace = Object.keys(elem.data())[0] || 'timer',\n        remain = -1,\n        start,\n        timer;\n\n    this.restart = function(){\n      remain = -1;\n      clearTimeout(timer);\n      this.start();\n    };\n\n    this.start = function(){\n      // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      remain = remain <= 0 ? duration : remain;\n      elem.data('paused', false);\n      start = Date.now();\n      timer = setTimeout(function(){\n        if(options.infinite){\n          _this.restart();//rerun the timer.\n        }\n        cb();\n      }, remain);\n      elem.trigger('timerstart.zf.' + nameSpace);\n    };\n\n    this.pause = function(){\n      //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      elem.data('paused', true);\n      var end = Date.now();\n      remain = remain - (end - start);\n      elem.trigger('timerpaused.zf.' + nameSpace);\n    };\n  };\n  /**\n   * Runs a callback function when images are fully loaded.\n   * @param {Object} images - Image(s) to check if loaded.\n   * @param {Func} callback - Function to execute when image is fully loaded.\n   */\n  var onImagesLoaded = function(images, callback){\n    var self = this,\n        unloaded = images.length;\n\n    if (unloaded === 0) {\n      callback();\n    }\n\n    var singleImageLoaded = function() {\n      unloaded--;\n      if (unloaded === 0) {\n        callback();\n      }\n    };\n\n    images.each(function() {\n      if (this.complete) {\n        singleImageLoaded();\n      }\n      else if (typeof this.naturalWidth !== 'undefined' && this.naturalWidth > 0) {\n        singleImageLoaded();\n      }\n      else {\n        $(this).one('load', function() {\n          singleImageLoaded();\n        });\n      }\n    });\n  };\n\n  Foundation.Timer = Timer;\n  Foundation.onImagesLoaded = onImagesLoaded;\n}(jQuery, window.Foundation);\n"]},"hash":"d9f0fd05d7281be42f76b8b0e45a585ad6e3da57"}
