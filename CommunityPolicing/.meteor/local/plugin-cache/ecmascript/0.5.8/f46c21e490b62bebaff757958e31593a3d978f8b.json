{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.responsiveMenu.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.responsiveMenu.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.responsiveMenu.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.responsiveMenu.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foundation.responsiveMenu"},"ignored":false,"code":"/**\n * ResponsiveMenu module.\n * @module foundation.responsiveMenu\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.accordionMenu\n * @requires foundation.util.drilldown\n * @requires foundation.util.dropdown-menu\n */\n!function (Foundation, $) {\n  'use strict';\n\n  // The plugin matches the plugin classes with these plugin instances.\n\n  var MenuPlugins = {\n    dropdown: {\n      cssClass: 'dropdown',\n      plugin: Foundation._plugins['dropdown-menu'] || null\n    },\n    drilldown: {\n      cssClass: 'drilldown',\n      plugin: Foundation._plugins['drilldown'] || null\n    },\n    accordion: {\n      cssClass: 'accordion-menu',\n      plugin: Foundation._plugins['accordion-menu'] || null\n    }\n  };\n\n  // [PH] Media queries\n  var phMedia = {\n    small: '(min-width: 0px)',\n    medium: '(min-width: 640px)'\n  };\n\n  /**\n   * Creates a new instance of a responsive menu.\n   * @class\n   * @fires ResponsiveMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  function ResponsiveMenu(element) {\n    this.$element = $(element);\n    this.rules = this.$element.data('responsive-menu');\n    this.currentMq = null;\n    this.currentPlugin = null;\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this);\n  }\n\n  ResponsiveMenu.defaults = {};\n\n  /**\n   * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n   * @function\n   * @private\n   */\n  ResponsiveMenu.prototype._init = function () {\n    var rulesTree = {};\n\n    // Parse rules from \"classes\" in data attribute\n    var rules = this.rules.split(' ');\n\n    // Iterate through every rule found\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i].split('-');\n      var ruleSize = rule.length > 1 ? rule[0] : 'small';\n      var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n      if (MenuPlugins[rulePlugin] !== null) {\n        rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n      }\n    }\n\n    this.rules = rulesTree;\n\n    if (!$.isEmptyObject(rulesTree)) {\n      this._checkMediaQueries();\n    }\n  };\n\n  /**\n   * Initializes events for the Menu.\n   * @function\n   * @private\n   */\n  ResponsiveMenu.prototype._events = function () {\n    var _this = this;\n\n    $(window).on('changed.zf.mediaquery', function () {\n      _this._checkMediaQueries();\n    });\n    // $(window).on('resize.zf.ResponsiveMenu', function() {\n    //   _this._checkMediaQueries();\n    // });\n  };\n\n  /**\n   * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n   * @function\n   * @private\n   */\n  ResponsiveMenu.prototype._checkMediaQueries = function () {\n    var matchedMq,\n        _this = this;\n    // Iterate through each rule and find the last matching rule\n    $.each(this.rules, function (key) {\n      if (Foundation.MediaQuery.atLeast(key)) {\n        matchedMq = key;\n      }\n    });\n\n    // No match? No dice\n    if (!matchedMq) return;\n\n    // Plugin already initialized? We good\n    if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n    // Remove existing plugin-specific CSS classes\n    $.each(MenuPlugins, function (key, value) {\n      _this.$element.removeClass(value.cssClass);\n    });\n\n    // Add the CSS class for the new plugin\n    this.$element.addClass(this.rules[matchedMq].cssClass);\n\n    // Create an instance of the new plugin\n    if (this.currentPlugin) this.currentPlugin.destroy();\n    this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n  };\n\n  /**\n   * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n   * @function\n   */\n  ResponsiveMenu.prototype.destroy = function () {\n    this.currentPlugin.destroy();\n    $(window).off('.zf.ResponsiveMenu');\n    Foundation.unregisterPlugin(this);\n  };\n  Foundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n}(Foundation, jQuery);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.responsiveMenu.js"],"names":[],"mappings":"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","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/foundation-sites/js/foundation.responsiveMenu.js.map","sourcesContent":["/**\n * ResponsiveMenu module.\n * @module foundation.responsiveMenu\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.accordionMenu\n * @requires foundation.util.drilldown\n * @requires foundation.util.dropdown-menu\n */\n!function(Foundation, $) {\n  'use strict';\n\n  // The plugin matches the plugin classes with these plugin instances.\n  var MenuPlugins = {\n    dropdown: {\n      cssClass: 'dropdown',\n      plugin: Foundation._plugins['dropdown-menu'] || null\n    },\n    drilldown: {\n      cssClass: 'drilldown',\n      plugin: Foundation._plugins['drilldown'] || null\n    },\n    accordion: {\n      cssClass: 'accordion-menu',\n      plugin: Foundation._plugins['accordion-menu'] || null\n    }\n  };\n\n  // [PH] Media queries\n  var phMedia = {\n    small: '(min-width: 0px)',\n    medium: '(min-width: 640px)'\n  };\n\n  /**\n   * Creates a new instance of a responsive menu.\n   * @class\n   * @fires ResponsiveMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  function ResponsiveMenu(element) {\n    this.$element = $(element);\n    this.rules = this.$element.data('responsive-menu');\n    this.currentMq = null;\n    this.currentPlugin = null;\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this);\n  }\n\n  ResponsiveMenu.defaults = {};\n\n  /**\n   * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n   * @function\n   * @private\n   */\n  ResponsiveMenu.prototype._init = function() {\n    var rulesTree = {};\n\n    // Parse rules from \"classes\" in data attribute\n    var rules = this.rules.split(' ');\n\n    // Iterate through every rule found\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i].split('-');\n      var ruleSize = rule.length > 1 ? rule[0] : 'small';\n      var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n      if (MenuPlugins[rulePlugin] !== null) {\n        rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n      }\n    }\n\n    this.rules = rulesTree;\n\n    if (!$.isEmptyObject(rulesTree)) {\n      this._checkMediaQueries();\n    }\n  };\n\n  /**\n   * Initializes events for the Menu.\n   * @function\n   * @private\n   */\n  ResponsiveMenu.prototype._events = function() {\n    var _this = this;\n\n    $(window).on('changed.zf.mediaquery', function() {\n      _this._checkMediaQueries();\n    });\n    // $(window).on('resize.zf.ResponsiveMenu', function() {\n    //   _this._checkMediaQueries();\n    // });\n  };\n\n  /**\n   * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n   * @function\n   * @private\n   */\n  ResponsiveMenu.prototype._checkMediaQueries = function() {\n    var matchedMq, _this = this;\n    // Iterate through each rule and find the last matching rule\n    $.each(this.rules, function(key) {\n      if (Foundation.MediaQuery.atLeast(key)) {\n        matchedMq = key;\n      }\n    });\n\n    // No match? No dice\n    if (!matchedMq) return;\n\n    // Plugin already initialized? We good\n    if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n    // Remove existing plugin-specific CSS classes\n    $.each(MenuPlugins, function(key, value) {\n      _this.$element.removeClass(value.cssClass);\n    });\n\n    // Add the CSS class for the new plugin\n    this.$element.addClass(this.rules[matchedMq].cssClass);\n\n    // Create an instance of the new plugin\n    if (this.currentPlugin) this.currentPlugin.destroy();\n    this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n  };\n\n  /**\n   * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n   * @function\n   */\n  ResponsiveMenu.prototype.destroy = function() {\n    this.currentPlugin.destroy();\n    $(window).off('.zf.ResponsiveMenu');\n    Foundation.unregisterPlugin(this);\n  };\n  Foundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n\n}(Foundation, jQuery);\n"]},"hash":"f46c21e490b62bebaff757958e31593a3d978f8b"}
