{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-smarty.js","filenameRelative":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-smarty.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-smarty.js.map","sourceFileName":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-smarty.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"prism-smarty"},"ignored":false,"code":"/* TODO\n\tAdd support for variables inside double quoted strings\n\tAdd support for {php}\n*/\n\n(function (Prism) {\n\n\tvar smarty_pattern = /\\{\\*[\\w\\W]+?\\*\\}|\\{[\\w\\W]+?\\}/g;\n\tvar smarty_litteral_start = '{literal}';\n\tvar smarty_litteral_end = '{/literal}';\n\tvar smarty_litteral_mode = false;\n\n\tPrism.languages.smarty = Prism.languages.extend('markup', {\n\t\t'smarty': {\n\t\t\tpattern: smarty_pattern,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^\\{|\\}$/i,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\t'string': /([\"'])(?:\\\\?.)*?\\1/,\n\t\t\t\t'number': /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee][-+]?\\d+)?)\\b/,\n\t\t\t\t'variable': [/\\$(?!\\d)\\w+/, /#(?!\\d)\\w+#/, {\n\t\t\t\t\tpattern: /(\\.|->)(?!\\d)\\w+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}, {\n\t\t\t\t\tpattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}],\n\t\t\t\t'function': [{\n\t\t\t\t\tpattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}, /^\\/?(?!\\d)\\w+/, /(?!\\d)\\w+(?=\\()/],\n\t\t\t\t'attr-name': {\n\t\t\t\t\t// Value is made optional because it may have already been tokenized\n\t\t\t\t\tpattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t\"variable\": {\n\t\t\t\t\t\t\tpattern: /(=\\s*)(?!\\d)\\w+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"operator\": /=/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': [/[\\[\\]().,:`]|\\->/],\n\t\t\t\t'operator': [/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/, /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/, /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/],\n\t\t\t\t'keyword': /\\b(?:false|off|on|no|true|yes)\\b/\n\t\t\t}\n\t\t}\n\t});\n\n\t// Comments are inserted at top so that they can\n\t// surround markup\n\tPrism.languages.insertBefore('smarty', 'tag', {\n\t\t'smarty-comment': {\n\t\t\tpattern: /\\{\\*[\\w\\W]*?\\*\\}/,\n\t\t\talias: ['smarty', 'comment']\n\t\t}\n\t});\n\n\t// Tokenize all inline Smarty expressions\n\tPrism.hooks.add('before-highlight', function (env) {\n\t\tif (env.language !== 'smarty') {\n\t\t\treturn;\n\t\t}\n\n\t\tenv.tokenStack = [];\n\n\t\tenv.backupCode = env.code;\n\t\tenv.code = env.code.replace(smarty_pattern, function (match) {\n\n\t\t\t// Smarty tags inside {literal} block are ignored\n\t\t\tif (match === smarty_litteral_end) {\n\t\t\t\tsmarty_litteral_mode = false;\n\t\t\t}\n\n\t\t\tif (!smarty_litteral_mode) {\n\t\t\t\tif (match === smarty_litteral_start) {\n\t\t\t\t\tsmarty_litteral_mode = true;\n\t\t\t\t}\n\t\t\t\tenv.tokenStack.push(match);\n\n\t\t\t\treturn '___SMARTY' + env.tokenStack.length + '___';\n\t\t\t}\n\t\t\treturn match;\n\t\t});\n\t});\n\n\t// Restore env.code for other plugins (e.g. line-numbers)\n\tPrism.hooks.add('before-insert', function (env) {\n\t\tif (env.language === 'smarty') {\n\t\t\tenv.code = env.backupCode;\n\t\t\tdelete env.backupCode;\n\t\t}\n\t});\n\n\t// Re-insert the tokens after highlighting\n\t// and highlight them with defined grammar\n\tPrism.hooks.add('after-highlight', function (env) {\n\t\tif (env.language !== 'smarty') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, t; t = env.tokenStack[i]; i++) {\n\t\t\t// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns\n\t\t\tenv.highlightedCode = env.highlightedCode.replace('___SMARTY' + (i + 1) + '___', Prism.highlight(t, env.grammar, 'smarty').replace(/\\$/g, '$$$$'));\n\t\t}\n\n\t\tenv.element.innerHTML = env.highlightedCode;\n\t});\n})(Prism);","ast":null,"map":{"version":3,"sources":["/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-smarty.js"],"names":[],"mappings":"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","file":"/packages/anbuselvan:meteor-toggle-switch/vendor/css-toggle-switch/bower_components/prism/components/prism-smarty.js.map","sourcesContent":["/* TODO\n\tAdd support for variables inside double quoted strings\n\tAdd support for {php}\n*/\n\n(function(Prism) {\n\n\tvar smarty_pattern = /\\{\\*[\\w\\W]+?\\*\\}|\\{[\\w\\W]+?\\}/g;\n\tvar smarty_litteral_start = '{literal}';\n\tvar smarty_litteral_end = '{/literal}';\n\tvar smarty_litteral_mode = false;\n\t\n\tPrism.languages.smarty = Prism.languages.extend('markup', {\n\t\t'smarty': {\n\t\t\tpattern: smarty_pattern,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^\\{|\\}$/i,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\t'string': /([\"'])(?:\\\\?.)*?\\1/,\n\t\t\t\t'number': /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee][-+]?\\d+)?)\\b/,\n\t\t\t\t'variable': [\n\t\t\t\t\t/\\$(?!\\d)\\w+/,\n\t\t\t\t\t/#(?!\\d)\\w+#/,\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /(\\.|->)(?!\\d)\\w+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'function': [\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t/^\\/?(?!\\d)\\w+/,\n\t\t\t\t\t/(?!\\d)\\w+(?=\\()/\n\t\t\t\t],\n\t\t\t\t'attr-name': {\n\t\t\t\t\t// Value is made optional because it may have already been tokenized\n\t\t\t\t\tpattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t\"variable\": {\n\t\t\t\t\t\t\tpattern: /(=\\s*)(?!\\d)\\w+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"operator\": /=/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': [\n\t\t\t\t\t/[\\[\\]().,:`]|\\->/\n\t\t\t\t],\n\t\t\t\t'operator': [\n\t\t\t\t\t/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n\t\t\t\t\t/\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n\t\t\t\t\t/\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/\n\t\t\t\t],\n\t\t\t\t'keyword': /\\b(?:false|off|on|no|true|yes)\\b/\n\t\t\t}\n\t\t}\n\t});\n\n\t// Comments are inserted at top so that they can\n\t// surround markup\n\tPrism.languages.insertBefore('smarty', 'tag', {\n\t\t'smarty-comment': {\n\t\t\tpattern: /\\{\\*[\\w\\W]*?\\*\\}/,\n\t\t\talias: ['smarty','comment']\n\t\t}\n\t});\n\n\t// Tokenize all inline Smarty expressions\n\tPrism.hooks.add('before-highlight', function(env) {\n\t\tif (env.language !== 'smarty') {\n\t\t\treturn;\n\t\t}\n\n\t\tenv.tokenStack = [];\n\n\t\tenv.backupCode = env.code;\n\t\tenv.code = env.code.replace(smarty_pattern, function(match) {\n\n\t\t\t// Smarty tags inside {literal} block are ignored\n\t\t\tif(match === smarty_litteral_end) {\n\t\t\t\tsmarty_litteral_mode = false;\n\t\t\t}\n\n\t\t\tif(!smarty_litteral_mode) {\n\t\t\t\tif(match === smarty_litteral_start) {\n\t\t\t\t\tsmarty_litteral_mode = true;\n\t\t\t\t}\n\t\t\t\tenv.tokenStack.push(match);\n\n\t\t\t\treturn '___SMARTY' + env.tokenStack.length + '___';\n\t\t\t}\n\t\t\treturn match;\n\t\t});\n\t});\n\n\t// Restore env.code for other plugins (e.g. line-numbers)\n\tPrism.hooks.add('before-insert', function(env) {\n\t\tif (env.language === 'smarty') {\n\t\t\tenv.code = env.backupCode;\n\t\t\tdelete env.backupCode;\n\t\t}\n\t});\n\n\t// Re-insert the tokens after highlighting\n\t// and highlight them with defined grammar\n\tPrism.hooks.add('after-highlight', function(env) {\n\t\tif (env.language !== 'smarty') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, t; t = env.tokenStack[i]; i++) {\n\t\t\t// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns\n\t\t\tenv.highlightedCode = env.highlightedCode.replace('___SMARTY' + (i + 1) + '___', Prism.highlight(t, env.grammar, 'smarty').replace(/\\$/g, '$$$$'));\n\t\t}\n\n\t\tenv.element.innerHTML = env.highlightedCode;\n\t});\n\n}(Prism));"]},"hash":"84b0dfb6995843d182a19ad46b9f745724ac0e78"}
