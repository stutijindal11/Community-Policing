{"head":"","body":"","js":"\nTemplate.__checkName(\"CrimeMap\");\nTemplate[\"CrimeMap\"] = new Template(\"Template.CrimeMap\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    class: \"row\"\n  }, \"\\n      \", HTML.DIV({\n    class: \"col-md-12\"\n  }, \"\\n          \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n              \", HTML.DIV({\n    class: \"col-md-4\"\n  }, \"\\n                  \", HTML.Raw('<!--<div class=\"row\">\\n                      <div class=\"col-md-12\">\\n                          <a id=\"modal-391902\" href=\"#modal-container-391902\" role=\"button\" class=\"btn\" data-toggle=\"modal\">Instructions</a>\\n\\n                          <div class=\"modal fade\" id=\"modal-container-391902\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\\n                              <div class=\"modal-dialog\">\\n                                  <div class=\"modal-content\">\\n                                      <div class=\"modal-header\">\\n\\n                                          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">\\n                      Ã—\\n                    </button>\\n                                          <h4 class=\"modal-title\" id=\"myModalLabel\">\\n                      Modal title\\n                    </h4>\\n                                      </div>\\n                                      <div class=\"modal-body\">\\n                                          ...\\n                                      </div>\\n                                      <div class=\"modal-footer\">\\n\\n                                          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\\n                      Close\\n                    </button>\\n                                          <button type=\"button\" class=\"btn btn-primary\">\\n                      Save changes\\n                    </button>\\n                                      </div>\\n                                  </div>\\n\\n                              </div>\\n\\n                          </div>\\n\\n                      </div>\\n                  </div>-->'), \"\\n                \", Spacebars.include(view.lookupTemplate(\"form\")), \"\\n              \"), \"\\n              \", HTML.DIV({\n    class: \"col-md-8\"\n  }, \"\\n    \", Spacebars.include(view.lookupTemplate(\"map\")), \"\\n              \"), \"\\n          \"), \"\\n      \"), \"\\n  \"), \"\\n  \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n      \", HTML.DIV({\n    class: \"col-md-12\"\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"eventtable\")), \"\\n      \"), \"\\n  \") ];\n}));\n\nTemplate.__checkName(\"eventtable\");\nTemplate[\"eventtable\"] = new Template(\"Template.eventtable\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.templateInstance().subscriptionsReady());\n  }, function() {\n    return [ \"\\n            \", Blaze._TemplateWith(function() {\n      return {\n        class: Spacebars.call(\"table\"),\n        collection: Spacebars.call(view.lookup(\"getData\")),\n        settings: Spacebars.call(view.lookup(\"settings\")),\n        rowClass: Spacebars.call(view.lookup(\"getRowClass\"))\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"reactiveTable\"));\n    }), \"\\n            \" ];\n  });\n}));\n\nTemplate.__checkName(\"map\");\nTemplate[\"map\"] = new Template(\"Template.map\", (function() {\n  var view = this;\n  return HTML.Raw('<div id=\"container\">\\n      <div id=\"map\" class=\"map\" style=\"height: 500px\"></div>\\n    </div>');\n}));\n\nTemplate.__checkName(\"form\");\nTemplate[\"form\"] = new Template(\"Template.form\", (function() {\n  var view = this;\n  return [ HTML.FORM({\n    id: \"filter-form\",\n    style: \"height: 35%\"\n  }, \"\\n      \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n       \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n    \", HTML.DIV({\n    class: \"col-md-12\"\n  }, \"\\n      \", HTML.DIV({\n    style: \"padding-bottom: 5px;\"\n  }, \"\\n        \", HTML.Raw('<!--<select id=\"isCity\" class=\"btn btn-default dropdown-toggle\">\\n                  <option value=\"0\" {{campusSelected}}>Campus Crime</option>\\n                <option value=\"1\" {{citySelected}}>City Crime</option>\\n              </select>-->'), \"\\n              \", Spacebars.include(view.lookupTemplate(\"toggle_button\")), \"\\n       \"), \"\\n    \"), \"\\n       \"), \"\\n       \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n    \", HTML.DIV({\n    class: \"col-xs-8\"\n  }, \"\\n      \", HTML.DIV({\n    style: \"padding-bottom: 5px;\"\n  }, \"\\n          \", HTML.Raw('<label class=\"CrimeMapLabel\" for=\"myInput\"><br></label>'), HTML.Raw(\"<br>\"), \"\\n            \", HTML.SELECT({\n    id: \"university\",\n    class: \"btn btn-default dropdown-toggle CrimeMapSelect\",\n    onchange: \"reset();\"\n  }, \"\\n                 \", HTML.Raw('<!--<option value=\"0\" {{syracuseSelected}}>{{syracuseName}}</option>\\n                 <option value=\"1\" {{emorySelected}}>{{emoryName}}</option>\\n                 <option value=\"2\" {{riceSelected}}>{{riceName}}</option>\\n                 <option value=\"3\" {{georgiatechSelected}}>{{georgiatechName}}</option>\\n                 <option value=\"4\" {{ubuffaloSelected}}>{{ubuffaloName}}</option>\\n                 <option value=\"5\" {{uhunterSelected}}>{{uhunterName}}</option>-->'), \"\\n                 \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"getPlaces\"));\n  }, function() {\n    return [ \"\\n                    \", HTML.OPTION(HTML.Attrs({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"placeIndex\"));\n      },\n      \"data-id\": function() {\n        return Spacebars.mustache(view.lookup(\"_id\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"placeSelected\"));\n    }), Blaze.View(\"lookup:placeCategory\", function() {\n      return Spacebars.mustache(view.lookup(\"placeCategory\"));\n    })), \"\\n                 \" ];\n  }), \"\\n            \"), \"\\n     \"), \"\\n    \"), \"\\n\\n    \", HTML.DIV({\n    class: \"col-xs-4\"\n  }, \"\\n      \", HTML.DIV({\n    style: \"padding-bottom: 5px;\"\n  }, \"\\n              \", HTML.Raw('<label class=\"CrimeMapLabel\" for=\"myInput\">Severity&nbsp; &nbsp;</label>'), HTML.Raw(\"<br>\"), \"\\n              \", HTML.SELECT({\n    id: \"severity\",\n    class: \"btn btn-default dropdown-toggle CrimeMapSelect\"\n  }, \"\\n                   \", HTML.OPTION(HTML.Attrs({\n    value: \"10\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"anySelected\"));\n  }), \"Any\"), \"\\n                   \", HTML.OPTION(HTML.Attrs({\n    value: \"0\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"lowSelected\"));\n  }), \"Low\"), \"\\n                   \", HTML.OPTION(HTML.Attrs({\n    value: \"1\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"mediumSelected\"));\n  }), \"Medium\"), \"\\n                   \", HTML.OPTION(HTML.Attrs({\n    value: \"2\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"highSelected\"));\n  }), \"High\"), \"\\n              \"), \"\\n            \"), \"\\n    \"), \"\\n       \"), \"\\n      \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n          \", HTML.DIV({\n    class: \"col-md-12\"\n  }, \"\\n            \", HTML.DIV({\n    style: \"padding-bottom: 7px;\"\n  }, \"\\n              \", HTML.Raw('<label class=\"CrimeMapLabel\" for=\"myInput\">Crime&nbsp;&nbsp; &nbsp; &nbsp;</label>'), HTML.Raw(\"<br>\"), \"\\n              \", HTML.SELECT({\n    id: \"crimeCategory\",\n    class: \"btn btn-default dropdown-toggle CrimeMapSelect\"\n  }, \"\\n                  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"getoptions\"));\n  }, function() {\n    return [ \"\\n                    \", HTML.OPTION(HTML.Attrs({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"crimeCategory\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"animateselected\"));\n    }), Blaze.View(\"lookup:crimeCategory\", function() {\n      return Spacebars.mustache(view.lookup(\"crimeCategory\"));\n    })), \"\\n                  \" ];\n  }), \"\\n              \"), \"\\n            \"), \"\\n          \"), \"\\n      \"), \"\\n     \", HTML.Raw('<div class=\"row\" style=\"margin-left: -5px; padding-left: 0px; padding-bottom: 5px;\">\\n         <div class=\"col-md-6\">\\n           <label style=\"font-size: 15px margin-left: 10px; padding-bottom: 3px;\" for=\"myInput\">Select Date Range</label><br>\\n           <input style=\"margin-left: 10px; font-size: 15px;\" id=\"daterange\">\\n         </div>\\n    </div>'), \"\\n\\n\\n      \"), \"\\n        \", HTML.Raw('<button style=\"margin-left: 10px\" type=\"submit\" class=\"btn btn-primary reset\">Reset</button>'), \"\\n\\n    \"), \"\\n    \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n    \", HTML.DIV({\n    id: \"tipsTable\"\n  }, \"\\n    \", HTML.TABLE({\n    class: \"table\",\n    style: \"margin-left: 17px;\"\n  }, \"\\n      \", HTML.THEAD(\"\\n        \", HTML.TR(\"\\n          \", HTML.TH(\"\\n            Category\\n          \"), \"\\n          \", HTML.TH(\"\\n            Tips\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n      \", HTML.TBODY(\"\\n      \", Blaze.If(function() {\n    return Spacebars.call(view.templateInstance().subscriptionsReady());\n  }, function() {\n    return [ \"\\n      \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"getTips\"));\n    }, function() {\n      return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"tipsRow\")), \"\\n          \" ];\n    }), \"\\n      \" ];\n  }), \"\\n\\n      \"), \"\\n    \"), \"\\n  \"), \"\\n\") ];\n}));\n\nTemplate.__checkName(\"tipsRow\");\nTemplate[\"tipsRow\"] = new Template(\"Template.tipsRow\", (function() {\n  var view = this;\n  return HTML.TR(\"\\n    \", HTML.TD(\"\\n      \", Blaze.View(\"lookup:DescriptionCategory\", function() {\n    return Spacebars.mustache(view.lookup(\"DescriptionCategory\"));\n  }), \"\\n    \"), \"\\n    \", HTML.TD(\"\\n      \", Blaze.View(\"lookup:tips\", function() {\n    return Spacebars.mustache(view.lookup(\"tips\"));\n  }), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__checkName(\"eventRow\");\nTemplate[\"eventRow\"] = new Template(\"Template.eventRow\", (function() {\n  var view = this;\n  return HTML.TR({\n    class: function() {\n      return Spacebars.mustache(view.lookup(\"getRowClass\"), view.lookup(\"Severity\"));\n    },\n    style: \"cursor:pointer\"\n  }, HTML.Raw(\"\\n        <!-- <td>\\n            {{Case_Number}}\\n        </td>\\n        <td>\\n                             {{Date_Time_Reported}}\\n                        </td>\\n                        <td>\\n                           {{General_Location}}\\n                        </td>\\n                        <td>\\n                           {{Nature_Classification}}\\n                        </td> -->\\n                    \"));\n}));\n\nTemplate.__checkName(\"eventComments\");\nTemplate[\"eventComments\"] = new Template(\"Template.eventComments\", (function() {\n  var view = this;\n  return [ HTML.UL(\"\\n    \", HTML.Raw(\"<b>Event Type:</b>\"), \" \", Blaze.View(\"lookup:Nature_Classification\", function() {\n    return Spacebars.mustache(view.lookup(\"Nature_Classification\"));\n  }), HTML.Raw(\"<br>\"), \"\\n    \", HTML.Raw(\"<b>Occured at: </b>\"), \" \", Blaze.View(\"lookup:Date_Time_Occurred\", function() {\n    return Spacebars.mustache(view.lookup(\"Date_Time_Occurred\"));\n  }), \"\\n    \"), \"\\n    \", HTML.UL(\"\\n        \", HTML.Raw(\"<b>Comments:</b>\"), \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"comment\"));\n  }, function() {\n    return [ \"\\n           \", HTML.LI(Blaze.View(\"lookup:content\", function() {\n      return Spacebars.mustache(view.lookup(\"content\"));\n    })), \"\\n        \" ];\n  }), \"\\n        \", Spacebars.include(view.lookupTemplate(\"commentSubmit\")), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"commentSubmit\");\nTemplate[\"commentSubmit\"] = new Template(\"Template.commentSubmit\", (function() {\n  var view = this;\n  return HTML.FORM({\n    id: \"comment\",\n    class: \"comment-form\"\n  }, \"\\n    \", HTML.DIV({\n    class: \"control-group\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"controls\"\n  }, \"\\n            \", HTML.Raw('<label for=\"body\">Comment on this event</label>'), \"\\n\\n            \", HTML.TEXTAREA({\n    name: \"commentText\"\n  }), \"\\n             \", HTML.TEXTAREA({\n    name: \"event_id\",\n    style: \"display:none\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"event_id\"));\n    }\n  }), \"\\n        \"), \"\\n    \"), HTML.Raw('\\n    <div class=\"control-group\">\\n        <div class=\"controls\">\\n            <button class=\"commentbtn\">Add Comment</button>\\n        </div>\\n    </div>\\n\\n  '));\n}));\n\nTemplate.__checkName(\"toggle_button\");\nTemplate[\"toggle_button\"] = new Template(\"Template.toggle_button\", (function() {\n  var view = this;\n  return [ HTML.Raw('<!--<div id=\"toggle_switch\" class=\"switch-toggle switch-candy\" style=\"width:250px\">\\n    <input id=\"city\" name=\"view\" type=\"radio\" value=\"1\" {{CityChecked}}>\\n    <label for=\"city\" onclick=\"\">City</label>\\n\\n    <input id=\"campus\" name=\"view\" type=\"radio\" value=\"0\" {{CampusChecked}}>\\n    <label for=\"campus\" onclick=\"\">Campus</label>\\n\\n    <a></a>\\n  </div>-->\\n  '), HTML.DIV({\n    id: \"toggle_switch\",\n    class: \"switch switch-blue\"\n  }, \"\\n    \", HTML.INPUT(HTML.Attrs({\n    type: \"radio\",\n    class: \"switch-input\",\n    name: \"view2\",\n    value: \"1\",\n    id: \"city\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"CityChecked\"));\n  })), \"\\n    \", HTML.Raw('<label for=\"city\" class=\"switch-label switch-label-off\">City</label>'), \"\\n    \", HTML.INPUT(HTML.Attrs({\n    type: \"radio\",\n    class: \"switch-input\",\n    name: \"view2\",\n    value: \"0\",\n    id: \"campus\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"CampusChecked\"));\n  })), \"\\n    \", HTML.Raw('<label for=\"campus\" class=\"switch-label switch-label-on\">Campus</label>'), \"\\n    \", HTML.Raw('<span class=\"switch-selection\"></span>'), \"\\n  \") ];\n}));\n","bodyAttrs":{}}